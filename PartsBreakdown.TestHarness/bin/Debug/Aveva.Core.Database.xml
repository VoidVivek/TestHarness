<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aveva.Core.Database</name>
    </assembly>
    <members>
        <member name="T:Aveva.Core.Database.DatabaseTypes">
            <summary>
            Generated Database Type metadata.
            </summary>
            <summary>
            Retrieve database type meta data.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DatabaseTypes.MaximumTypeNumber">
            <summary>
            Maximum database type number.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.LoadDatabaseTypes_Generated">
            <summary>
            Load the set of database types.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.#ctor">
            <summary>
            Constructor is public so that it can be called from PML.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.Assign(Aveva.Core.Database.DatabaseTypes)">
            <summary>
            Assign - Required for PML
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.FindByNumber(System.Int32)">
            <summary>
            Search type by number
            </summary>
            <param name="typeNumber"></param>
            <returns>The DatabaseType if found, the unknown DatabaseType otherwise</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.FindByDbType(Aveva.Core.Database.DbType)">
            <summary>
            Search type by DbType enum
            </summary>
            <param name="dbType"></param>
            <returns>The DatabaseType if found, the unknown DatabaseType otherwise</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.FindByHash(System.Int32)">
            <summary>
            Search type by hash
            </summary>
            <param name="typeHash"></param>
            <returns>The DatabaseType if found, the unknown DatabaseType otherwise</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseTypes.FindByType(System.String)">
            <summary>
            Search type by type name.
            </summary>
            <param name="typeName"></param>
            <returns>The DatabaseType if found, the unknown DatabaseType otherwise</returns>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseTypes.Instance">
            <summary>
            Singleton instance provided for performance
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseTypes.Types">
            <summary>
            List of database types
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseTypes.GetTypes">
            <summary>
            List of database types for PML.
            The only collection that PML supports is Hashtable, so convert the
            List to a dictionary and then use that to initialise the Hashtable.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbType">
            <summary>
            Enumeration of Database Type identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Invalid">
            <summary>
            Invalid/unknown database type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.All">
            <summary>
            All database types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Design">
            <summary>
            Design database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Catalogue">
            <summary>
            Catalogue database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Catalog">
            <summary>
            Catalogue
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Communications">
            <summary>
            Communications database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Property">
            <summary>
            Property database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Miscellaneous">
            <summary>
            Miscellaneous database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Isodraft">
            <summary>
            Isodraft database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Spooler">
            <summary>
            Spooler
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Draft">
            <summary>
            Draft database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Dictionary">
            <summary>
            Dictionary database (UDAs)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Engineering">
            <summary>
            Engineering database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.System">
            <summary>
            System database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Global">
            <summary>
            Global database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Transaction">
            <summary>
            Transaction database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Analysis">
            <summary>
            Analysis database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Schematics">
            <summary>
            Schematics database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Schematic">
            <summary>
            Schematic
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Manufacturing">
            <summary>
            Manufacturing database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Manu">
            <summary>
            Manu
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.NameSequence">
            <summary>
            Name Sequence database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.NSEQ">
            <summary>
            NameSequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.CrossProduct">
            <summary>
            Cross Product database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Configuration">
            <summary>
            Configuration database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.Task">
            <summary>
            Task database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbType.ConceptualModel">
            <summary>
            Conceptual Model database
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.AutoName">
            <summary>
            Class to manage the C# interface to the PML object for autonaming
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.AutoName.nameElement(Aveva.Core.Database.DbElement)">
            <summary>
            Method to name specified element
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Aveva.Core.Database.AutoName.IsAvailable">
            <summary>
            Property to test if auto naming is available, true does not mean is enabled
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.AutoName.Enabled">
            <summary>
            Property to test is auto naming is switched on, it will return false also is it is not available
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.CurrentElementChangedEventHandler">
            <summary>
            Current Element Changed event handler delegate.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.CurrentElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.CurrentElement.internalCurrentElement">
            <summary>
            Internal current element?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.CurrentElement.Context">
            <summary>
            Current Element Context.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.CurrentElement.RaiseCurrentElementChanged(System.Object,Aveva.Core.Database.CurrentElementChangedEventArgs)">
            <summary>
            Raise the Current Element Changed event.
            </summary>
            <param name="sender">Object raising the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="E:Aveva.Core.Database.CurrentElement.CurrentElementChanged">
            <summary>
            Current Element Changed event.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.CurrentElement.Element">
            <summary>
            Current Element (CE).
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.CurrentElement.internalElement">
            <summary>
            Internal element (?)
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.CurrentElementChangedEventArgs">
            <summary>
            Event arguments for Current Element Changed event.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.CurrentElementChangedEventArgs.#ctor(Aveva.Core.Database.DbElement)">
            <summary>
            Constructor.
            </summary>
            <param name="ele">Element to associate with event</param>
        </member>
        <member name="P:Aveva.Core.Database.CurrentElementChangedEventArgs.Element">
            <summary>
            Element associated with event.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.InputBeginEventHandler">
            <summary>
            INPUT BEGIN event handler delegate.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.InputEndEventHandler">
            <summary>
            INPUT END event handler delegate.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.InputAbortEventHandler">
            <summary>
            INPUT ABORT event handler delegate.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DatalListing">
            <summary>
            Summary description for DatalListing.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DatalListing.Instance">
            <summary>
            Instance of Abstract class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.ShowOptionsForm">
            <summary>
            Show Options Form
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.OutputListing">
            <summary>
            Output Datal to File and screen
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.inputBegin">
            <summary>
            Special case input begin
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.inputEnd(Aveva.Core.Database.DbElement[])">
            <summary>
            Special case input end
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.inputAbort">
            <summary>
            Special case input abort
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.RaiseInputBegin(System.Object,Aveva.Core.Database.DatalListingEventArgs)">
            <summary>
            Raise the INPUT BEGIN event.
            </summary>
            <param name="sender">Object raising the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.RaiseInputEnd(System.Object,Aveva.Core.Database.DatalListingEventArgs)">
            <summary>
            Raise the INPUT BEGIN event.
            </summary>
            <param name="sender">Object raising the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatalListing.RaiseInputAbort(System.Object,Aveva.Core.Database.DatalListingEventArgs)">
            <summary>
            Raise the INPUT ABORT event.
            </summary>
            <param name="sender">Object raising the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.fileName">
            <summary>
            Optional filename for output
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.Elements">
            <summary>
            Array of DB Elements
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.screen">
            <summary>
            True for screen output, default false
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.changes">
            <summary>
            True for Output Changes only (default false)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.session">
            <summary>
            Session to compare with
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.ReplaceInTarget">
            <summary>
            If True, Output will Replace element of same name in Target db (default false)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.LocateParentInTarget">
            <summary>
            If True, Output will create data under same named Parent element in Target db (default false)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.brief">
            <summary>
            Brief output, only name/type/refno
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.pass">
            <summary>
            Pass required
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.sameref">
            <summary>
            'Same reference' mode
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.tab">
            <summary>
            Tab size (0=untabbed)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.comments">
            <summary>
            Comments
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.index">
            <summary>
            Line numbers and index
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.nouda">
            <summary>
            UDAs required
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.oldformat">
            <summary>
            Old format
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListing.only">
            <summary>
            List of 'ONLY' nouns specified
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatalListing.InputBegin">
            <summary>
            INPUT BEGIN event.
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatalListing.InputEnd">
            <summary>
            INPUT END event.
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatalListing.InputAbort">
            <summary>
            INPUT ABORT event.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DatalListingEventArgs">
            <summary>
            Event arguments for Selection Changed event.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListingEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListingEventArgs.#ctor(Aveva.Core.Database.DbElement[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatalListingEventArgs.Elements">
            <summary>
            Elements
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DatalListingForm">
            <summary>
            Summary description for DatalListing.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DatalListingForm.Instance">
            <summary>
            Instance of Abstract class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatalListingForm.Show">
            <summary>
            Show Datal Listing form
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DatabaseService">
            <summary>
            Class to open a project
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.OpenProject(System.String,System.String,System.String)">
            <summary>
            Open a projects
            </summary>
            <param name="name">Project name</param>
            <param name="username">User name</param>
            <param name="password">User password</param>
            <returns>New Project</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.OpenProject(System.String,System.String,System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Open a Project. 
            </summary>
            <param name="name">project name</param>
            <param name="username">user name</param>
            <param name="password">user password</param>
            <param name="error">error if open fails</param>
            <returns>Project object if operation is successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.OpenProject(System.String,System.String,System.String,System.String@,System.Int32@,System.Int32@)">
            <summary>
            Open a Project
            </summary>
            <param name="name"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="error"></param>
            <param name="errorModule"></param>
            <param name="errorNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.IsPasswordProtected(System.String)">
            <summary>
            Is a general user permitted to change his own password?
            </summary>
            <param name="projName"></param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.IsAuthenticatedUserProject(System.String)">
            <summary>
            Does this project use Microsoft user authentication?
            </summary>
            <param name="projName"></param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.IsPrimarySystemDb(System.String)">
            <summary>
            Is the system db for this project at its primary global location?
            </summary>
            <param name="projName"></param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.ProjectUserData(System.String)">
             <summary>
            
             </summary>
             <param name="projName"></param>
             <returns>List of user data - format "name (description)"</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.ProjectFreeUserData(System.String)">
             <summary>
            
             </summary>
             <param name="projName"></param>
             <returns>List of free user data - format "name (description)"</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.ProjectMdbData(System.String)">
             <summary>
            
             </summary>
             <param name="projName"></param>
             <returns>List of user data - format "name (description)</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaiseMDBClosed(System.Object,System.EventArgs)">
            <summary>
            Raise MDB Closed event- This will be replaced by mechanisms in DbEvents
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaiseMDBOpened(System.Object,System.EventArgs)">
            <summary>
            Deprecated - do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaiseMDBClosing(System.Object,System.EventArgs)">
            <summary>
            Deprecated - do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaiseChanges(System.Object,Aveva.Core.Database.DbChangesEventArgs)">
            <summary>
            Deprecated - do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaiseClaim(System.Object,Aveva.Core.Database.DbClaimEventArgs)">
            <summary>
            Deprecated - do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePreGetWork(System.Object,Aveva.Core.Database.DbGetWorkChangesEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePostGetWork(System.Object,Aveva.Core.Database.DbGetWorkChangesEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePreRedo(System.Object,Aveva.Core.Database.DbUndoChangesEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePostRedo(System.Object,Aveva.Core.Database.DbUndoChangesEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePreUndo(System.Object,Aveva.Core.Database.DbUndoChangesEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePostUndo(System.Object,Aveva.Core.Database.DbUndoChangesEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaiseRelease(System.Object,Aveva.Core.Database.DbClaimEventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseService.RaisePostOpenProject(System.Object,System.EventArgs)">
            <summary>
            Deprecated- do not use
            </summary>
            <param name="sender">Origin object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.MDBClosed">
            <summary>
            MDB Closed event- This will be replaced by mechanisms in DbEvents
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.MDBOpened">
            <summary>
            MDB Opened event- This will be replaced by mechanisms in DbEvents
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.MDBClosing">
            <summary>
            MDB Closing event- This will be replaced by mechanisms in DbEvents
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.Changes">
            <summary>
            Changes event- Deprecated, use DbEvents.AddHandleUserChanges to add a delegate
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.Claim">
            <summary>
            Deprecated - use DbEvents.AddClaimedEventHandler to add a delegate
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PreGetWork">
            <summary>
            Deprecated - use DbEvents.AddLocalChangingEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PostGetWork">
            <summary>
            Deprecated - use DbEvents.AddLocalChangedEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PreRedo">
            <summary>
            Deprecated - use DbEvents.AddLocalChangingEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PostRedo">
            <summary>
            Deprecated - use DbEvents.AddLocalChangingEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PreUndo">
            <summary>
            Deprecated - use DbEvents.AddLocalChangingEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PostUndo">
            <summary>
            Deprecated - use DbEvents.AddLocalChangedEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.Release">
            <summary>
            Deprecated - use DbEvents.AddClaimedEventHandler
            </summary>
        </member>
        <member name="E:Aveva.Core.Database.DatabaseService.PostOpenProject">
            <summary>
            Project opened event- This will be replaced by a mechanism in the DbEvents class
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DatabaseType">
            <summary>
            Database Type metadata
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseType.#ctor">
            <summary>
            Unknown type constructor
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseType.#ctor(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Collections.Generic.HashSet{Aveva.Core.Database.DbAccessMode},System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
            <param name="number"></param>
            <param name="hash"></param>
            <param name="summary"></param>
            <param name="description"></param>
            <param name="typeName"></param>
            <param name="order"></param>
            <param name="version"></param>
            <param name="initialElement"></param>
            <param name="fileName"></param>
            <param name="userCreatable"></param>
            <param name="validModes"></param>
            <param name="globalOnly"></param>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseType.Assign(Aveva.Core.Database.DatabaseType)">
            <summary>
            Assign - Required for PML
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseType.HasMode(Aveva.Core.Database.DbAccessMode)">
            <summary>
            Check if the passed access mode is valid for this database type
            </summary>
            <param name="required"></param>
            <returns>True if access mode is valid, false otherwise</returns>
        </member>
        <member name="M:Aveva.Core.Database.DatabaseType.IsRealType">
            <summary>
            Check if the type is a real physical database type or a pseudo type
            </summary>
            <returns>True if a real database type, false otherwise</returns>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Name">
            <summary>
            Get DB type full name, e.g. "Design"
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Number">
            <summary>
            Get DB type number, e.g. 1 (K_DB_TYPE_DESI)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Type">
            <summary>
            Get DB type as enum
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Hash">
            <summary>
            Get DB type hash number, e.g. %DESI
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Summary">
            <summary>
            Get DB type summary, e.g. "Design database"
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Description">
            <summary>
            Get DB type description, e.g. "Design"
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.TypeName">
            <summary>
            Get DB type name, e.g. "DESI"
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Order">
            <summary>
            Order of update for Global
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.OrderReal">
            <summary>
            Order in list boxes for PML.
            For some reason PML can't deal with an integer member, property or method, so return a
            real version which PML can use...
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.InitialElement">
            <summary>
            Initial top-level element (optional), e.g. "SITE"
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.FileName">
            <summary>
            File name, e.g. "desvir"
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.UserCreatable">
            <summary>
            If the user can create instances
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.ValidModes">
            <summary>
            Get the valid access modes for this type, e.g. [AccessMode.MultiWrite]
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DatabaseType.GlobalOnly">
            <summary>
            True if the database type is only valid for Global projects
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.Db">
            <summary>
            This class provides information on the opened DB
            Additional information on the DB (e.g foreign, size, extractParent etc) can be obtain from the %DB DbElement object
            Some of the information available on the %DB object is also repeated here for convenience, e.g. DBnumber, type.
            If the MDB is closed, the Db and DbSession objects will no longer be valid.
            Methods relating to Savework, claims, extract operations are available via the MDB class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Db.ExtractBase(System.Int32@,System.Int32@)">
            <summary>
            ExtractBase - returns extract and session number on which current extract is based.
            </summary>
            <param name="extbase">The base extract number. Passed as an out argument  - does not need to be initialised.</param>
            <param name="sessbase">The base session number. Passed as an out argument  - does not need to be initialised.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ExtractBase(Aveva.Core.Database.DbSession@)">
            <summary>
            ExtractBase - returns session on which current extract is based.
            </summary>
            <param name="extractBase">The base session object. Passed as an out argument  - does not need to be initialised.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ExtractOwnerLatest(Aveva.Core.Database.DbSession@)">
            <summary>
            ExtractOwnerLatest - returns latest session on parent extract.
            </summary>
            <param name="ownerLatest">The latest session object. Passed as an out argument  - does not need to be initialised.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ExtractOwnerLatest(System.Int32,Aveva.Core.Database.DbSession@)">
            <summary>
            ExtractOwnerLatest - returns latest session on ancestor extract.
            </summary>
            <param name="levels">Level of extract ancestor to query (1 = parent)</param>
            <param name="ownerLatest">The latest session object. Passed as an out argument  - does not need to be initialised.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Flush(System.String)">
            <summary>
            Flush - flushes changes to owning extract without releasing the claims.
            </summary>
            <param name="inputString">Description or comment about flush</param>
            <returns>Null if flush successful, otherwise a PDMS message</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Issue(System.String)">
            <summary>
            Issue - flushes changes to owning extract and releases claims.
            </summary>
            <param name="inputString">Description or comment about issue</param>
            <returns>Null if issue successful, otherwise a PDMS message</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Drop(System.String)">
            <summary>
            Drop - drops all changes on the extract.
            </summary>
            <param name="inputString">Description or comment about drop</param>
            <returns>Null if drop successful, otherwise a PDMS message</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Release">
            <summary>
            Release - releases user claims on extract.
            </summary>
            <returns>Null if release successful, otherwise a PDMS message</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ExtractRelease">
            <summary>
            ExtractRelease - releases extract claims on extract.
            </summary>
            <returns>Null if extract release successful, otherwise a PDMS message</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.SaveWork(System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            SaveWork for this database only.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Db.GetWork(Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            GetWork for this database only.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Db.FindElement(System.String,Aveva.Core.Database.DbAttribute)">
            <summary>
            Find Element of given name.
            If it does not exits then returns a null element.
            </summary>
            <param name="Name">Element name</param>
            <param name="attributeName">Attribute</param>
            <returns>Element instance</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementExists(System.String,Aveva.Core.Database.DbAttribute)">
            <summary>
            Query whether the named Element exists in this Database.
            </summary>
            <remarks>(Not sure why we have this method. It would be better to replace it with FindElement- PDC)</remarks>
            <param name="name">Element name</param>
            <param name="attributeName">Attribute</param>
            <returns>True, if Element exists</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.SessionBeforeDate(System.DateTime)">
            <summary>
            Return most recent session before Date-Time, from this Database
            </summary>
            <param name="date">Date-Time deadline</param>
            <returns>Session</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Session(System.Int32)">
            <summary>
            Get numbered session from this Database.
            </summary>
            <remarks>(PDC-should raise an exception if session is invalid)</remarks>
            <param name="sessionNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Session(System.Int32,System.Int32)">
            <summary>
            Get numbered session on extract, from this Database.
            </summary>
            <remarks>(PDC-should raise an exception if session is invalid)</remarks>
            <param name="extractNumber">Extract number</param>
            <param name="sessionNumber">Session Number</param>
            <returns>Session</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.SwitchToOldSession(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Deprecated method: please use SwitchToOldSession(DbSession) instead.
            </summary>
            <param name="extractNumber">Extract number containing session</param>
            <param name="sessionNumber">Session number</param>
            <param name="bSuppressCacheClear">To suppress cache clearance</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.SwitchToOldSession(Aveva.Core.Database.DbSession)">
            <summary>
            SwitchToOldSession - Switches Db from the active session to an old session.
            NOTE: all database operations will work at the past session immediately after
            this call until the SwitchBackSession() method is called; the database will be
            read-only for the intervening period.
            </summary>
            <param name="oldSession">Db Session</param>
            <returns>True, if switched to the old session </returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.SwitchBackSession(System.Boolean)">
            <summary>
            Switches from the old session to the active session - the converse of SwitchToOldSession.
            Option to suppress cache clearance
            </summary>
            <param name="bSuppressCacheClear">To suppress cache clearance</param>
            <returns>True, if switched to the active session</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.SwitchToLatestSession(System.Boolean)">
            <summary>
            Switches to the latest session saved on the db.
            Option to suppress cache clearance
            </summary>
            <param name="bSuppressCacheClear">To suppress cache clearance</param>
            <returns>True, if switched to the latest session</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.IsSwitched">
            <summary>
            Is the Db switched to an earlier session?
            option to suppress cache clearance
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementsInsertedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get list of elements which have been inserted since given session
            </summary>
            <param name="PrevSess"> Session to use as base point of query </param>
            <param name="eles">List of elements inserted since given element (out) </param>
            Returns PdmsMessage object if session invalid
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementsChangedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get list of elements which have been changed since given session
            </summary>
            <param name="PrevSess">Session to use as base point of query</param>
            <param name="eles">List of elements changed since given element (out)</param>
            True if query has worked without error
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementsDeletedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get list of elements which have been deleted since given session
            </summary>
            <param name="PrevSess">Session to use as base point of query</param>
            <param name="eles">List of elements deleted since given element (out)</param>
            True if query has worked without error
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementsInsertedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get list of elements which have been inserted between given sessions
            </summary>
            <param name="Sess1"> Session to use as base point of query </param>
            <param name="Sess2"> Session to use as second point of query </param>
            <param name="eles">List of elements inserted since given element (out) </param>
            True if query has worked without error
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementsChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get list of elements which have been changed between given sessions
            </summary>
            <param name="Sess1">Session to use as base point of query</param>
            <param name="Sess2"> Session to use as second point of query </param>
            <param name="eles">List of elements changed since given element (out)</param>
            True if query has worked without error
        </member>
        <member name="M:Aveva.Core.Database.Db.ElementsDeletedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get list of elements which have been deleted between given sessions
            </summary>
            <param name="Sess1">Session to use as base point of query</param>
            <param name="Sess2"> Session to use as second point of query </param>
            <param name="eles">List of elements deleted since given element (out)</param>
            True if query has worked without error
        </member>
        <member name="M:Aveva.Core.Database.Db.ChangesSinceSession(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on this database since the given session
            </summary>
            <param name="session">Session to use as base point of query</param>
            <param name="changes">Object containing a record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if the query has succeeded</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ChangesBetweenSessions(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on this database between the given sessions
            </summary>
            <param name="sessionFirst">Session to use as base point of query</param>
            <param name="sessionLast">Session to use as second point of query</param>
            <param name="changes">Object containing a record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if the query has succeeded</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.ChangesAtSession(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on this database at the given session only
            </summary>
            <param name="session">Session to use as base point of query</param>
            <param name="changes">Object containing a record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if the query has succeeded</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Equals(System.Object)">
            <summary>
            	Compares the calling instance with a given object. Db class 
            	instances that point to the same underlying database object 
            	are considered equal.
            </summary>
            <param name="obj">The object to consider.</param>
            <returns>
            	Returns 'true' if the condition for equality is met.
            </returns>		
        </member>
        <member name="M:Aveva.Core.Database.Db.op_Equality(Aveva.Core.Database.Db,Aveva.Core.Database.Db)">
            <summary>Db equality operator</summary>
            <param name="left">Left-hand Db</param>
            <param name="right">Right-hand Db</param>
            <returns>True, if the DBs are equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.op_Inequality(Aveva.Core.Database.Db,Aveva.Core.Database.Db)">
            <summary>Db inequality operator</summary>
            <param name="left">Left-hand Db</param>
            <param name="right">Right-hand Db</param>
            <returns>True, if the DBs are not equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.WorldMembers">
            <summary>
            Get child Elements of the World element of this Database.
            N.B. the normal query for members of a world goes across Databases.
            </summary>
            <returns>Array of Elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.Equals(Aveva.Core.Database.Db)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.Db.GetHashCode">
            <summary>
            Hash Code
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.Db.DbItem">
            <summary>
            System Database Element that represents this Database. Various queries are available from this.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.Name">
            <summary>
            Database name
            </summary>
            <remarks>(replace by ToString(). Exclude the /* at start - PDC)</remarks>
        </member>
        <member name="P:Aveva.Core.Database.Db.Number">
            <summary>
            Database number (integer)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.ExtractNumber">
            <summary>
            Extract number (integer)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.Type">
            <summary>
            Database type
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.IsExtract">
            <summary>
            True, if this Database is an extract database
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.IsWorking">
            <summary>
            IsWorking - checks if the extract is a working extract.
            </summary>
            <returns>True, if the extract is a working extract.</returns>
        </member>
        <member name="P:Aveva.Core.Database.Db.IsVariant">
            <summary>
            IsVariant - checks if extract is a variant extract.
            </summary>
            <returns>True, if the extract is a variant extract.</returns>
        </member>
        <member name="P:Aveva.Core.Database.Db.IsPrimary">
            <summary>
            IsPrimary - checks if database is writable in this location.
            </summary>
            <returns>True, if the database is writable in this location.</returns>
        </member>
        <member name="P:Aveva.Core.Database.Db.IsScratch">
            <summary>
            IsScratch - checks if database is a scratch db.
            </summary>
            <returns>True, if the database is a scratch db.</returns>
        </member>
        <member name="P:Aveva.Core.Database.Db.SupportsClaiming">
            <summary>
            SupportsClaiming - checks if database supports claiming,
            i.e. it's a multiwrite (or controlled) db (and not 'nosave')
            </summary>
            <returns>True, if the database supports claiming.</returns>
        </member>
        <member name="P:Aveva.Core.Database.Db.IsReadOnly">
            <summary>
            True, if this Database is read-only
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.World">
            <summary>
            Root "world" Element for this Database
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.CurrentSession">
            <summary>
            Current session on this Database
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.HasChangedThisSession">
            <summary>
            True, if there are changes in this Database in the current session
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Db.LatestSessionOnDb">
            <summary>
            Most recent session on this Database
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAccessMode">
            <summary>
            Enumeration of access modes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAccessMode.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAccessMode.MultiWrite">
            <summary>
            MultiWrite
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAccessMode.Overwrite">
            <summary>
            Overwrite
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAccessMode.External">
            <summary>
            External
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttribute">
            <summary>
            The class has two purposes:
            i) Instances of the class are used to identify and pass around attributes
            ii) The class can be used to get meta data about an attribute. e.g. type, size, Name, pseudo or not, etc
            The class is valid for system attributes and UDAS.
            Object instances are created for all system attributes. These instances are in DbAttributeInstance class
            All methods that pass in an attribute should pass a DbAttribute object rather than a string that represents the attribute
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.CompareTo(System.Object)">
            <summary>
            Compare Attribute with generic object.
            </summary>
            <param name="obj">Object to compare with</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.Equals(System.Object)">
            <summary>
            Test equality to Attribute.
            </summary>
            <param name="type">Object to test for equality</param>
            <returns>True if object is equal to Attribute; otherwise False</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetBool(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Get boolean value for the given Attribute field.
            </summary>
            <param name="field">Attribute field</param>
            <returns>Boolean value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDbAttribute(System.Int32)">
            <summary>
            Find Attribute instance from hash value.
            </summary>
            <param name="hashValue">Hash value of Attribute</param>
            <returns>New Attribute</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDbAttribute(System.String)">
            <summary>
            Find a Attribute instance from a name.
            </summary>
            <param name="name">Name of Attribute</param>
            <returns>New Attribute</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDbAttribute(Aveva.Core.Database.DbElement)">
            <summary>
            Finds a DbAttribute from uda definition object
            </summary>
            <param name="definition">definition element in dictionary DB</param>
            <returns>Attribute</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetHashCode">
            <summary>
            Return hash code for mapping Attributes, overriding Object.GetHashCode.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetInteger(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Get integer value for the given Attribute field.
            </summary>
            <param name="field">Attribute field</param>
            <returns>Integer value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetIntegerArray(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Get integer array value for the given Attribute field.
            </summary>
            <param name="field">Attribute field</param>
            <returns>Integer array value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetString(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Get text value from given field of Attribute.
            </summary>
            <param name="field">Field of Attribute to query</param>
            <returns>Text value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalGetDbAttribute(System.Int32)">
            <summary>
            Internal implementation method to find a Attribute instance from hash value
            </summary>
            <param name="hashValue">Hash value for new Attribute</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalGetDbAttribute(System.String)">
            <summary>
            Internal implementation method to find a Attribute instance from name
            </summary>
            <param name="name">Name for Attribute</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalGetDbAttribute(Aveva.Core.Database.DbElement)">
            <summary>
            Internal implementation method to find a Attribute instance from Uda definition object
            </summary>
            <param name="definition">definition element in dictionary DB</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefinitionElements">
            <summary>
            Return uda definition elements in dictionary DB
            If none, returns a zero long array.
            </summary>
            <returns>Definition Element </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetElementTypes(Aveva.Core.Database.DbElementType[]@)">
            <summary>
            Get all the etypes for all the definitions that have been defined on this attribute\UDA
            </summary>
            <param name="etypes">A list of the element types this attribute has been defined on</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefinitionElement(Aveva.Core.Database.DbElementType)">
            <summary>
            Return the uda definition element for a given DbElementType.
            </summary>
            <param name="etype">The DbElementType the definition is wanted for</param>
            <returns>the definition element or an invalid element</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.NoClaim(Aveva.Core.Database.DbElementType)">
            <summary>
            Query whether it is necessary to claim elements of the given type, in order to change this Attribute.
            </summary>
            <param name="elementType">Element type</param>
            <returns>True, if Attribute change requires claim</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.Int32@)">
            <summary>
            GetDefault - gets the DLFT (default) value for int type attributes.
            </summary>
            <param name="elementType">ElementType</param>
            <param name="def">Int passed as out argument, gets the default value of the int attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.Double@)">
            <summary>
            GetDefault - gets the DLFT (default) value for double type attributes.
            </summary>
            <param name="elementType">Element type</param>
            <param name="def">Double passed as out argument, gets the default value of the double attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.Boolean@)">
            <summary>
            GetDefault - gets the DLFT (default) value for bool type attributes.
            </summary>
            <param name="elementType">Element type</param>
            <param name="def">Bool passed as out argument, gets the default value of the bool attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbDouble@)">
            <summary>
            Get default for the Db Double - 
            </summary>
            <param name="elementType">Element type </param>
            <param name="def">The default Db Double for this element type.</param>
            <returns>Null if success, otherwise a PDMS message</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.String@)">
            <summary>
            GetDefault - gets the DLFT (default) value for string type attributes.
            </summary>
            <param name="elementType">Element type</param>
            <param name="def">String passed as out argument, gets the default value of the string attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.Int32[]@)">
            <summary>
            GetDefault - gets the DLFT (default) value for int array type attributes.
            </summary>
            <param name="elementType">Element type</param>
            <param name="def">Int array passed as out argument, gets the default values in the integer array attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.Double[]@)">
            <summary>
            GetDefault - gets the DLFT (default) value for double array type attributes.
            </summary>
            <param name="elementType">Element type</param>
            <param name="def">Double array passed as out argument, gets the default values in the double array attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetDefault(Aveva.Core.Database.DbElementType,System.Boolean[]@)">
            <summary>
            GetDefault - gets the DLFT (default) value for bool array type attributes.
            </summary>
            <param name="elementType">Element type</param>
            <param name="def">Bool array passed as out argument, gets the default values in the bool array attribute.</param>
            <returns> Null if successful, otherwise a PDMS message.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllIntegerDefaults">
            <summary>
            GetDefault - gets all potential default values for a integer attribute.
            </summary>
            <returns> List of potential defaults</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllStringDefaults">
            <summary>
            GetDefault - gets all potential default values for a string attribute.
            </summary>
            <returns> List of potential defaults</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.DescriptionByType(Aveva.Core.Database.DbElementType)">
            <summary>
            Description - this may vary with element type if a USDA has been defined.
            </summary>
            <returns> Description</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.CategoryByType(Aveva.Core.Database.DbElementType)">
            <summary>
            Category - this may vary with element type if a USDA has been defined.
            </summary>
            <returns> Category</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.EditorByType(Aveva.Core.Database.DbElementType)">
            <summary>
            Editor - this may vary with element type if a USDA has been defined.
            </summary>
            <returns> Editor </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.ConvertorByType(Aveva.Core.Database.DbElementType)">
            <summary>
            Convertor - this may vary with element type if a USDA has been defined.
            </summary>
            <returns> Convertor </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.HiddenByType(Aveva.Core.Database.DbElementType)">
            <summary>
            hidden flag - this may vary with element type if a USDA has been defined.
            </summary>
            <returns> Hidden flag</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.IsNounAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbElementType)">
            <summary>
            isNounAllowed - checks if an element can have a reference to another element.
            </summary>
            <param name="elementType1">Element type - whose reference is to be checked.</param>
            <param name="elementType2">Element type - to be checked against.</param>
            <returns>True, if ElementType1 can refer to elementType2.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.IsAllowed(Aveva.Core.Database.DbElementType,System.Int32)">
            <summary>
            isAllowed - checks if int value is within the allowed range.
            </summary>
            <param name="elementType">Element type whose attribute is being checked.</param>
            <param name="value">Int value passed to see if allowed.</param>
            <returns>True, if value is allowed - i.e. within range.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.IsAllowed(Aveva.Core.Database.DbElementType,System.Double)">
            <summary>
            isAllowed - checks if double value is within the allowed range.
            </summary>
            <param name="elementType">Element type whose attribute is being checked.</param>
            <param name="value">Double value passed to see if allowed.</param>
            <returns>True, if value is allowed - i.e. within range</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.TrueSizE(Aveva.Core.Database.DbElementType)">
            <summary>
             True  size of this Attribute .
            </summary>
            <param name="DbElementType">Element type</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.IsAllowed(Aveva.Core.Database.DbElementType,System.String)">
            <summary>
            
            isAllowed - checks if string matches allowed string.
            </summary>
            <param name="elementType"> Element type whose attribute is being checked.</param>
            <param name="value"> String passed to see if allowed. </param>
            <returns>True, if the string is an exact match to an allowed string.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.op_Equality(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Test for equality between a pair of Attributes.
            </summary>
            <param name="left">First Attribute to test</param>
            <param name="right">Second Attribute to test</param>
            <returns>True, if Attributes are equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.op_Inequality(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Test for inequality between a pair of Attributes.
            </summary>
            <param name="left">First Attribute to test</param>
            <param name="right">Second Attribute to test</param>
            <returns>True, if Attributes are not equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.ToString">
            <summary>
            Gets the textual representation of this Attribute.
            </summary>
            <returns>Text</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.AllowedValues(Aveva.Core.Database.DbElementType)">
            <summary>
            Allowed values for a text UDA
            </summary>
            <param name="type">Applicable Element type</param>
            <returns>List of allowed values</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllowedUDAValueDescription(Aveva.Core.Database.DbElementType,System.String)">
            <summary>
            Get the description of the allowed values for a text UDA or USDA. If the argument allowed value
            is a duplicate valid value the last to be added\entered in Lexicon is returned.
            </summary>
            <param name="type">Applicable Element type</param>
            <param name="validValue">The valid UDA or USDA string value</param>
            <returns>The description of the valid UDA or USDA string value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllowedUDAValuesAndDescriptions(Aveva.Core.Database.DbElementType)">
            <summary>
            Get all the allowed values for a text UDA or USDA and their corresponding descriptions
            Duplicate values are not returned from this method. (If duplicate valid values exist
            the last to be added\entered in Lexicon is returned.)
            </summary>
            <param name="type">Applicable Element type</param>
            <returns>An array of the valid UDA or USDA text values and their corresponding descriptions.
            Key represents the value, value represents the description in the KeyValuePair.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllowedUDAValuesAndDescriptions(System.Collections.Generic.KeyValuePair{System.String,System.String}[]@)">
            <summary>
            Get the attribute values from the UDA definition if there is ONLY ONE UDA definition
            If there is more than one definition the method will return false and an empty list
            </summary>
            <param name="validDefinitionValues">The list of valid values on a definition if there is only one</param>
            <returns>True - if there is one definition and false if there is more than one</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.AllowedIntRanges(Aveva.Core.Database.DbElementType)">
            <summary>
            Allowed range(s) for an integer UDA
            </summary>
            <param name="type">Applicable Element type</param>
            <returns>List of ranges</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.AllowedRanges(Aveva.Core.Database.DbElementType)">
            <summary>
            Allowed range(s) for a real UDA
            </summary>
            <param name="type">Applicable Element type</param>
            <returns>List of ranges</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.IsAllowedOptional(Aveva.Core.Database.DbElementType)">
            <summary>
            Are allowed value(s) or range(s) optional for the given element type?
            </summary>
            <param name="type">Applicable Element type</param>
            <returns>True, if valid values/range is optional</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.PassObjectToCPP(System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage)">
            <summary>
            Pass object through to unmanaged C++. AVEVA USE ONLY.
            </summary>
            <param name="pos">Position index</param>
            <param name="message">Associated message</param>
        </member>
        <member name="F:Aveva.Core.Database.DbAttribute.internalDbAttribute">
            <summary>
            Singleton factory instance
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.AttributeFieldType(Aveva.Core.Database.DbAttributeField)">
            <summary>
            The type of an attribute field
            </summary>
            <param name="field">An attribute field</param>
            <returns>The type of the attribute field</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalAttributeFieldType(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Protected method.
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllAttributes">
            <summary>
            List of all attributes
            </summary>
            <returns>An array of all attributes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAllUdas">
            <summary>
            List of all UDAs
            </summary>
            <returns>An array of all UDAs</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalGetAllAttributes">
            <summary>
            Protected method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalGetAllUdas">
            <summary>
            Protected method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.HashValueToString(System.Int32)">
            <summary>
            Convert a hash value to a string
            </summary>
            <param name="hashvalue">Hash value</param>
            <returns>string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.internalHashValueToString(System.Int32)">
            <summary>
            Protected method.
            </summary>
            <param name="hashvalue"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsStringArray(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Get the value of any attribute field as an array of strings
            </summary>
            <param name="field">Any attribute field</param>
            <returns>Array of attribute field values as strings</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsStringArray(Aveva.Core.Database.DbAttributeSpecialField)">
            <summary>
            Get the value of any attribute special field as an array of strings
            </summary>
            <param name="field">Any attribute special field</param>
            <returns>Array of attribute field values as strings</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsString(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Get the value of any attribute field as a string; array valued fields will be
             returned as the elements concatenated together separated by commas
            </summary>
            <param name="field">Any attribute field</param>
            <returns>Field value as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsString(Aveva.Core.Database.DbAttributeField,System.String)">
            <summary>
            Get the value of any attribute field as a string; array valued fields will be
             returned as the elements concatenated together separated by the specified array separator string
            </summary>
            <param name="field">Any attribute field</param>
            <param name="arrayseparator">String to use to separate array elements</param>
            <returns>Field value as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsString(Aveva.Core.Database.DbAttributeField,System.Int32)">
            <summary>
            Gets the value of any element of an attribute field as a string; for an array valued field
             the (zero based) array index is specified; this must be '0' for a scalar field
            </summary>
            <param name="field">Any attribute field</param>
            <param name="arrayindex">Array index (Zero based)</param>
            <returns>Value of the element of the attribute field as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsString(Aveva.Core.Database.DbAttributeSpecialField)">
            <summary>
            Get the value of any attribute special field as a string; array valued fields will be
             returned as the elements concatenated together separated by commas
            </summary>
            <param name="field">Any attribute special field</param>
            <returns>Special Field value as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsString(Aveva.Core.Database.DbAttributeSpecialField,System.String)">
            <summary>
            Get the value of any attribute special field as a string; array valued fields will be
             returned as the elements concatenated together separated by the specified array separator string
            </summary>
            <param name="field">Any attribute special field</param>
            <param name="arrayseparator">String to use to separate array elements</param>
            <returns>Special Field value as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.GetAsString(Aveva.Core.Database.DbAttributeSpecialField,System.Int32)">
            <summary>
            Gets the value of any element of an attribute special field as a string; for an array valued field
             the (zero based) array index is specified; this must be '0' for a scalar field
            </summary>
            <param name="field">Any attribute special field</param>
            <param name="arrayindex">Array index (Zero based)</param>
            <returns>Value of the element of the attribute special field as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.supportsCases">
            <summary>
            Gets whether the attribute supports cases
            </summary>
            <returns>True if it does, False if not</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttribute.supportsLanguageVariants">
            <summary>
            Gets whether the attribute supports cases
            </summary>
            <returns>True if it does, False if not</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Description">
            <summary>
            Description of this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.HashValue">
            <summary>
            Hash value for this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.IsArray">
            <summary>
            True, if this Attribute is an array
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.IsPseudo">
            <summary>
            True, if this Attribute is a pseudo-attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.IsUDA">
            <summary>
            True, if this Attribute is a User-Defined Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.IsValid">
            <summary>
            True, if this Attribute is valid. Need not be after a getwork if a UDA
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.MaximumSize">
            <summary>
            Maximum size of this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Name">
            <summary>
            Name of this Attribute. This is always reinputable as valid syntax to PML
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.QueryText">
            <summary>
            Query text associated with this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.ShortName">
            <summary>
            Short name for this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Type">
            <summary>
            Type of this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Units">
            <summary>
            Units of this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.DefaultUnit">
            <summary>
            Default unit of this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Dimension">
            <summary>
            Dimension of this Attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Category">
            <summary>
            Attribute category used for display
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.Hyperlink">
            <summary>
            True if attribute represents a hyperlink
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.IsSynonym">
            <summary>
            True if attribute is a synonym.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.hidden">
            <summary>
            Hidden - checks if attribute is hidden.
            </summary>
            <returns>True, if attribute is hidden i.e. if suppressed in Q ATTs</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.protect">
            <summary>
            Protect - checks if attribute is protected.
            </summary>
            <returns>True, if attribute is protected.</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbAttribute.isTable">
            <summary>
            isTable - checks if attribute is stored as a table attribute.
            </summary>
            <returns>True, if attribute is stored as a table attribute.</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeComparer">
            <summary>
            Class to define comparers for ordering lists of attributes.
            These allow lists of attributes to be sorted on the value of any field.
            At present, only an alphabetic sort on field values expressed as strings is implemented,
             although it would be possible to extend this to sort on numerical values. However, as
             most integers actually represent hash values or enumerations, this may be less useful than
             it at first sounds!
            Also, later it might be nice to be able to specify the culture for the comparison, since
             this can make a difference (e.g. Swedes sort v and w together!). To avoid differences
             between installations, we now (DUN272, 24/08/09) specify a en-GB sort, but in the
             future a CultureInfo could (optionally) be given on constructor and stored in another
             array parallel to fields_ and reverse_.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeComparer.#ctor(Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Create a new attribute comparer
            </summary>
            <param name="field">The field to use for comparison</param>
            <param name="reversed">Whether to reverse comparison.
             If false (or omitted) comparison is 'less than', so sort order will be ascending.
             If true, comparison will be 'greater than' and sort order will be descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeComparer.#ctor(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Create a new attribute comparer
            </summary>
            <param name="field">The field to use for comparison</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeComparer.AddSubKey(Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Add a further subkey to an existing attribute comparer
             The subkey will be used to discriminate attributes if (and only if) all previously defined
             subkeys have returned identical values for the two attributes being compared
            </summary>
            <param name="field">The field to be used for discriminating comparisons</param>
            <param name="reversed">Whether to reverse comparison.
             If false (or omitted) comparison is 'less than', so sort order will be ascending.
             If true, comparison will be 'greater than' and sort order will be descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeComparer.AddSubKey(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Add a further subkey to an existing attribute comparer
             The subkey will be used to discriminate attributes if (and only if) all previously defined
             subkeys have returned identical values for the two attributes being compared
            </summary>
            <param name="field">The field to be used for discriminating comparisons</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compare two attributes using one or more field values
            </summary>
            <param name="x">First attribute</param>
            <param name="y">Second attribute</param>
            <returns>Integer result of the comparison:
             -1 = Second attribute is 'before' the first
              0 = the attributes are equal on all defined keys
              1 = Second attribute is 'after' the first
             NB: The terms 'before' and 'after' are used here as it is possible to specify that any
              given key is to be reversed, and thus 'less than' or 'greater than' could be confusing!</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeList">
            <summary>
            Class to define a list of attributes; usually for documentation purposes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeList.list_">
            <summary>
            This is the actual list, which is private. An ArrayList is used to that new items can be
             added or existing items removed efficiently
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeList.include_udas_">
            <summary>
            Whether to include udas in all AddAll/RemoveAll operations
            This is a private field; there is a public property Include_UDAs to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeList.include_system_">
            <summary>
            Whether to include system (ie non uda) attributes in all AddAll/RemoveAll operations
            This is a private field; there is a public property Include_System to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeList.include_synonyms_">
            <summary>
            Whether to include synonyms in all AddAll/RemoveAll operations.
            This is a private field; there is a public property Include_Synonym to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeList.include_invisible_">
            <summary>
            Whether to include hidden (field VISI = false) attributes in all AddAll/RemoveAll operations
            This is a private field; there is a public property Include_Invisible to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.Add(Aveva.Core.Database.DbAttribute)">
            <summary>
            Add a specific attribute
            </summary>
            <param name="att">The attribute to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.Add(Aveva.Core.Database.DbAttributeList)">
            <summary>
            Append an existing AttributeList
            </summary>
            <param name="addlist">AttributeList to be appended</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll">
            <summary>
            Add all attributes to the AttributeList
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
                 UDAs/System attributes are included in 'all'
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given logical field
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
            UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>	
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeField,System.Boolean,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given logical field
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
            UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeList,Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given logical field
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
            UDAs/System attributes are included in 'all'
            </summary>
            <param name="domain">The list of candidate attributes</param>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeList,Aveva.Core.Database.DbAttributeField,System.Boolean,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given logical field
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
            UDAs/System attributes are included in 'all'
            </summary>
            <param name="domain">The list of candidate attributes</param>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeField,System.Int32)">
            <summary>
            Add all attributes with a specified value of a given integer field
             NB: Also works for integer array fields; an attribute is added if any array element
                  matches the required value
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeField,System.Int32,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given integer field
             NB: Also works for integer array fields; an attribute is added if any array element
                  matches the required value
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeList,Aveva.Core.Database.DbAttributeField,System.Int32)">
            <summary>
            Add all attributes with a specified value of a given int field (inc. attributes matching that value)
            NB: Also works for integer array fields; an attribute is added if any array element
                  matches the required value
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="domain">The list of candidate attributes</param>
            <param name="field">The logical field</param>
            <param name="intvalue">The required value of the integer field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeList,Aveva.Core.Database.DbAttributeField,System.Int32,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given integer field
             NB: Also works for integer array fields; an attribute is added if any array element
                  matches the required value
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="domain">The list of candidate attributes</param>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeField,System.String)">
            <summary>
            Add all attributes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>	
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeField,System.String,System.Boolean)">
            <summary>
            Add all attributes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeList,Aveva.Core.Database.DbAttributeField,System.String)">
            <summary>
            Add all attributes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="domain">The list of candidate attributes</param>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.AddAll(Aveva.Core.Database.DbAttributeList,Aveva.Core.Database.DbAttributeField,System.String,System.Boolean)">
            <summary>
             Add all attributes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="domain">The list of candidate attributes</param>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.Remove(Aveva.Core.Database.DbAttribute)">
            <summary>
            Remove all instances of a specific attribute from the AttributeList
            </summary>
            <param name="att">The attribute to be removed</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.Remove(Aveva.Core.Database.DbAttributeList)">
            <summary>
            Remove all instances of attributes in an existing AttributeList
            </summary>
            <param name="remlist">AttributeList to be removed</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.RemoveAll">
            <summary>
            Remove all attributes from the AttributeList
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
                 UDAs/System attributes are included in 'all'
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.RemoveAll(Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Remove all attributes with a specified value of a given logical field
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
                 UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.RemoveAll(Aveva.Core.Database.DbAttributeField,System.Int32)">
            <summary>
            Remove all attributes with a specified value of a given integer field
             NB: Also works for integer array fields; an attribute is removed if any array element
                  matches the required value
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.RemoveAll(Aveva.Core.Database.DbAttributeField,System.String)">
            <summary>
            Remove all attributes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
             NB: The Include_UDA and Include_System properties may be used to specify whether or not
                  UDAs/System attributes are included in 'all'
            </summary>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.Count">
            <summary>
            Returns the number of attributes currently in the DbAttributeList
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.SortList(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Sort AttributeList on a single field
            </summary>
            <param name="field">Field to use as sort key</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.SortList(Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Sort AttributeList on a single field
            </summary>
            <param name="field">Field to use as sort key</param>
            <param name="reversed">Reverse sort order; ie false for ascending, true for descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.SortList(Aveva.Core.Database.DbAttributeField,Aveva.Core.Database.DbAttributeField)">
            <summary>
            Sort AttributeList on a field, using a second field to determine order when values of first are equal
            </summary>
            <param name="field">Field to use as primary sort key</param>
            <param name="second_field">Field to use as secondary sort key</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.SortList(Aveva.Core.Database.DbAttributeField,System.Boolean,Aveva.Core.Database.DbAttributeField,System.Boolean)">
            <summary>
            Sort AttributeList on a field, using a second field to determine order when values of first are equal
            </summary>
            <param name="field">Field to use as primary sort key</param>
            <param name="reversed">Reverse sort order on primary key; ie false for ascending, true for descending</param>
            <param name="second_field">Field to use as secondary sort key</param>
            <param name="second_reversed">Reverse sort order on secondary key; ie false for ascending, true for descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.SortList(Aveva.Core.Database.DbAttributeComparer)">
            <summary>
            Sort AttributeList on a predefined DbAttributeComparer: this allows for more complex sorts with subkeys
            </summary>
            <param name="sorter">DbAttributeComparer defining one or more sorting keys</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.MaximumFieldWidth(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Returns the maximum width of a field over a DbAttributeList (useful when setting column widths)
            </summary>
            <param name="field">A field</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.MaximumFieldWidth(Aveva.Core.Database.DbAttributeField,Aveva.Core.Database.DbFieldFormat)">
            <summary>
            Returns the maximum width of a formatted field over a DbAttributeList (useful when setting column widths)
            </summary>
            <param name="field">A field</param>
            <param name="format">A field format</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.MaximumFieldWidth(Aveva.Core.Database.DbAttributeSpecialField)">
            <summary>
            Returns the maximum width of a special field over a DbAttributeList (useful when setting column widths)
            </summary>
            <param name="field">A special field</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeList.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeList.Include_UDAs">
            <summary>
            Whether to include udas in all AddAll and RemoveAll operations (default TRUE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeList.Include_System">
            <summary>
            Whether to include system (ie non uda) attributes in all AddAll and RemoveAll operations (default TRUE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeList.Include_Synonyms">
            <summary>
            Whether to include synonyms in all AddAll and RemoveAll operations (default FALSE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeList.Include_Invisible">
            <summary>
            Whether to include invisible attributes in all AddAll and RemoveAll operations (default FALSE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeListEnum">
            <summary>
            Enumerator for the DbAttributeList class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeListEnum.list_">
            <summary>
            Internal list
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeListEnum.#ctor(System.Collections.ArrayList)">
            <summary>
            Constructor
            </summary>
            <param name="mylist">attribute list</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeListEnum.Reset">
            <summary>
            Reset enumerator
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeListEnum.MoveNext">
            <summary>
            Move enumerator to next item
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListEnum.Current">
            <summary>
            Current enumerator item
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeFormat">
            <summary>
            Class to define an object for formatting an attribute definition for output
             ie what fields are to displayed, what intervening text etc
            Generally, a DbAttributeFormat will be used by a DbAttributeListFormat, which defines
             how a whole list of attributes is formatted
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeField)">
            <summary>
            Add a field to the format
            </summary>
            <param name="field">A field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeField,System.Int32)">
            <summary>
            Add a field to the format, specifying the minimum width
            </summary>
            <param name="field">A field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeField,Aveva.Core.Database.DbFieldFormat)">
            <summary>
            Add a field to the format, specifying the field format
            </summary>
            <param name="field">A field</param>
            <param name="fieldformat">Format for the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeField,Aveva.Core.Database.DbFieldFormat,System.Int32)">
            <summary>
            Add a field to the format, specifying the field format and minimum width
            </summary>
            <param name="field">A field</param>
            <param name="fieldformat">Format for the field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeSpecialField)">
            <summary>
            Add a special field to the format
            </summary>
            <param name="field">A special field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeSpecialField,System.Int32)">
            <summary>
            Add a special field to the format, specifying the minimum width
            </summary>
            <param name="field">A special field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeSpecialField,Aveva.Core.Database.DbFieldFormat)">
            <summary>
            Add a special field to the format, specifying the field format
            </summary>
            <param name="field">A special field</param>
            <param name="fieldformat">Format for the special field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(Aveva.Core.Database.DbAttributeSpecialField,Aveva.Core.Database.DbFieldFormat,System.Int32)">
            <summary>
            Add a special field to the format, specifying the field format and minimum width
            </summary>
            <param name="field">A special field</param>
            <param name="fieldformat">Format for the special field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(System.String)">
            <summary>
            Add literal text to the format; this may include special characters such as tab or newline
            </summary>
            <param name="mystring">Text to be added to format</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(System.String,System.Int32)">
            <summary>
            Add literal text to the format, specifying the minimum width
            </summary>
            <param name="mystring">Text to be added to format</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.AddItem(System.Int32)">
            <summary>
            Add sufficient spaces to bring the result string up to the specified number of characters
             NB: It is inadvisable to mix using this feature with adding special characters such as
                  newline or tab, since these will count as one character
            </summary>
            <param name="tab">The number of characters</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeFormat.Format(Aveva.Core.Database.DbAttribute)">
            <summary>
            Return a string representing the attribute in the defined format
            </summary>
            <param name="att">Attribute to be formatted</param>
            <returns>Attribute definition formatted in format defined</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeListFormat">
            <summary>
            Class to define an object to format a list of attributes. Each individual attribute is formatted
             by the DbAttributeFormat specified, and other aspects of the overall presentation (line breaks etc)
             are controlled by other properties of the DbAttributeListFormat
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeListFormat.#ctor(Aveva.Core.Database.DbAttributeFormat)">
            <summary>
            Create a new attribute list format. Each individual attribute is formatted by the specified
             attribute formatter, and a new line is added after each
            </summary>
            <param name="attformat">The attribute formatted to use for each individual attribute</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeListFormat.#ctor(Aveva.Core.Database.DbAttributeFormat,System.String)">
            <summary>
            Create a new attribute list format. Each individual attribute is formatted by the specified
             attribute formatter, and the specified text is added after each
            </summary>
            <param name="attformat">The attribute formatter to use for each individual attribute</param>
            <param name="text_after_attribute">The text to be added after each individual attribute</param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeListFormat.Format(Aveva.Core.Database.DbAttributeList)">
            <summary>
            Formats a DbAttributeList in the style specified
            </summary>
            <param name="mylist">The DbAttributeList to be formatted</param>
            <returns>A string representing the DbAttributeList in the required format</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.AttributeFormat">
            <summary>
            Gets or sets the attribute format to be used for each individual attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.SplitField">
            <summary>
            Gets or sets a field to use as the split value; whenever the value of this field changes between
             one attribute and the next, the 'TextBeforeSplitFieldName', the new value of the field (optional),
             and the 'TextAfterSplitFieldName' are inserted into the output
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.TextAtStart">
            <summary>
            Gets or sets the text to be inserted at the start of the formatted output (e.g. a header)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.TextBeforeAttribute">
            <summary>
            Gets or sets the text to be inserted before each individual attribute
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.TextAfterAttribute">
            <summary>
            Gets or sets the text to be inserted after each individual attribute (e.g. a new line character)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.TextBeforeSplitFieldName">
            <summary>
            Gets or sets the text to be inserted before the field name whenever the value of the specified
             field changes between one attribute and the next. This is not used if the SplitField has not
             been set. Note that this text is still output even if 'IncludeSplitFieldName' is false so that
             the actual split field value itself is not.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.TextAfterSplitFieldName">
            <summary>
            Gets or sets the text to be inserted after the field name whenever the value of the specified
             field changes between one attribute and the next. This is not used if the SplitField has not
             been set. Note that this text is still output even if 'IncludeSplitFieldName' is false so that
             the actual split field value itself is not.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.IncludeSplitFieldName">
            <summary>
            Gets or sets whether or not the new value of the SplitField will be output whenever this changes
             between one attribute and the next. This is not used if the SplitField has not been set. If true,
             the new value of the field is output between the 'TextBeforeSplitFieldName' and 'TextAfterSplitFieldName'
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.BreakCount">
            <summary>
            Gets or sets the number of attributes to be output before the BreakText is inserted. This allows,
             for example, a number of attributes to be output on the same line, or a blank line to be inserted
             after every 'n' attributes to aid readability. Note that the counter is reset by a SplitField.
            A value of 0 indicates that no such breaks are required.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.BreakText">
            <summary>
            Gets or sets the text to be output after ever BreakCount lines within a section, e.g. a new line (if
            putting several attributes on the same line) or an additional new line (if adding a blank line after
            every 'n' attributes).
            This is not used if BreakCount is set to 0 (the default).
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbAttributeListFormat.TextAtEnd">
            <summary>
            Gets or sets the text to be output after the final attribute in the list
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbFieldFormatDefaultAction">
            <summary>
            Actions a field formatter may take when no specific substitute string has been defined for the value found
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldFormatDefaultAction.FIXED_STRING">
            <summary>
            Always represent by a fixed string (the DefaultString property)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldFormatDefaultAction.GET_AS_STRING">
            <summary>
            Fall back to the standard representation of the object (as if no field formatter were defined)
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbFieldFormat">
            <summary>
            Class to define objects to control the representation of field values
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbFieldFormat.AddMapping(System.String,System.String)">
            <summary>
            Add a mapping; i.e., a specification of a value which is to be replaced by another value
            </summary>
            <param name="invalue">Value to be replaced</param>
            <param name="svalue">Value with which it is to be replaced</param>
        </member>
        <member name="M:Aveva.Core.Database.DbFieldFormat.AddReplace(System.String,System.String)">
            <summary>
            Add a replacement specification. Replacements are applied first, and will replace any and all occurrences
             of the invalue in values returned with the rvalue
            </summary>
            <param name="invalue">String to be replaced</param>
            <param name="rvalue">String with which it is to be replaced</param>
        </member>
        <member name="M:Aveva.Core.Database.DbFieldFormat.Format(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttributeField)">
            <summary>
            Return the formatted value of a field for a given attribute
            </summary>
            <param name="att">An attribute</param>
            <param name="field">A field of the attribute</param>
            <returns>The formatted value of the field of the attribute</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFieldFormat.Format(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttributeSpecialField)">
            <summary>
            Return the formatted value of a special field for a given attribute
            </summary>
            <param name="att">An attribute</param>
            <param name="field">A special field of the attribute</param>
            <returns>The formatted value of the field of the attribute</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFieldFormat.Format(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbNounField)">
            <summary>
            Return the formatted value of a field for a given ElementType
            </summary>
            <param name="noun">An ElementType</param>
            <param name="field">A field of the ElementType</param>
            <returns>The formatted value of the field of the ElementType</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFieldFormat.Format(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbNounSpecialField)">
            <summary>
            Return the formatted value of a special field for a given ElementType
            </summary>
            <param name="noun">An ElementType</param>
            <param name="field">A special field of the ElementType</param>
            <returns>The formatted value of the specual field of the ElementType</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.DefaultAction">
            <summary>
            Action to take if a value is found which does not match a specified mapping
             By default, this is GET_AS_STRING which will leave the value unchanged
             It may be set to FIXED_STRING so that any such (unmapped) string will be replaced by the DefaultString
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.DefaultString">
            <summary>
            String with which to replace any string for which no individual mapping has been defined (with AddMapping)
             Only used if the DefaultAction is FIXED_STRING
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.UndefinedString">
            <summary>
            String to substitute if no value is defined
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.ArraySeparator">
            <summary>
            String to use to separate individual array elements. Typically ', ' for a list
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.ItemSeparator">
            <summary>
            String to use to separate items within compound fields. Only used for special fields such as
             attributes and descriptions. Typically a tab or a colon
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.DbRestriction">
            <summary>
            INTEGER database number to restrict elements to those from a certain database for certain special
             fields (e.g. owner and member types). 0 for no restriction.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.NonEmptyPrefix">
            <summary>
            String to prepend to the result if and only if it is not the empty string
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.NonEmptySuffix">
            <summary>
            String to append to the result if and only if it is not the empty string
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.RemoveDuplicates">
            <summary>
            Whether or not duplicate array items are to be removed
             NB: Equality is checked AFTER any replacements and mappings
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFieldFormat.SortValues">
            <summary>
            Whether or not array items are to be sorted into alphabetic order
             NB: Sorting is applied AFTER any replacements and mappings
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbBlob">
            <summary>
            Summary description for DbBlob class. 
            This class is a serializable version of System.Net.Mail.Attachment class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.Dispose">
            <summary>
            Public implementation of Dispose pattern callable by consumers.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.Finalize">
            <summary>
            Destructor method.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.#ctor(System.Net.Mail.Attachment)">
            <summary>
            Construct DbBlob from Attachment.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.SetBlobAttribute(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Net.Mail.Attachment,Aveva.Core.Database.DbBlob@)">
            <summary>
            Set Blob Attribute Header Segment.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.GetByteArrayFromIntArray(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Helper function: Convert int[] to byte[]:
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.GetIntArrayFromByteArray(System.Byte[],System.Int32)">
            <summary>
            Helper function: Convert back to int[]:
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.WriteSegmentRange(System.IO.Stream,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Helper function: Writes a segment (array of ints ) to a Stream.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.GetDbBlobFileSize(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbBlob@)">
            <summary>
            Get DbBlob's file size only in Header from the existing element attribute.
            </summary>
            <returns>DbBlob Content binary size in bytes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.GetDbBlobHeader(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbBlob@)">
            <summary>
            Get DbBlob's Full Header as text array in Json format from the existing element attribute.
            </summary>
            <returns>DbBlob Content binary size in bytes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.GetDbBlobAsAttachment(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbBlob@)">
            <summary>
            Get DbBlob as Attachment.
            </summary>
            <returns>Attachment</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.SaveAttachment(System.Net.Mail.Attachment,System.String)">
            <summary>
            Save DbBlob's Attachment to disk. if the file exists, overwrites to it.
            </summary>
            <returns>Attachment</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbBlob.BytesCompare(System.String,System.String)">
            <summary>
            This method accepts two filenames and compares them in binary mode.
            A return value of True indicates that the contents of the files
            are the same. otherwise files are not the same.
            </summary>
            <returns>true if the files are the same, false if not</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.header">
            <summary>
            Header info for internal use
            </summary>
            <returns> Header</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentId">
             <summary>
            Content ID
             </summary>
             <returns> Content ID </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentDisposition">
             <summary>
            DbBlob Content Disposition
             </summary>
             <returns>Content Disposition of the Blob</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentType">
             <summary>
            DbBlob Content Type
             </summary>
             <returns>Content Type of the Blob</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentDispositionJs">
             <summary>
            DbBlob Content Disposition as Serialized JSON string
             </summary>
             <returns>Content Disposition of the Blob</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentTypeJs">
             <summary>
            DbBlob Content Type as Serialized JSON string
             </summary>
             <returns>Content Type of the Blob</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.name">
             <summary>
            Blob Name
             </summary>
             <returns> Blob Name </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentStream">
             <summary>
            Blob Content Stream
             </summary>
             <returns> Blob Content Stream </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlob.contentBinSize">
             <summary>
            DbBlob Content Binary size in bytes
             </summary>
             <returns>DbBlob Content binary size in bytes</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbBlobContentType">
            <summary>
            Summary description for DbBlobContentType, a serializable wrapper around ContentType class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobContentType.#ctor(System.Net.Mime.ContentType)">
            <summary>
            Construct DbBlobContentType from ContentType.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobContentType.#ctor">
            <summary>
            Construct DbBlobContentType.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobContentType.CopyTo(System.Net.Mime.ContentType)">
            <summary>
            Get ContentType of the DbBlob.
            </summary>
            <returns>ContentType</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentType.boundary">
             <summary>
            Blob Content Type boundary
             </summary>
             <returns> Blob Content Type boundary </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentType.charSet">
             <summary>
            Blob Content Type charSet
             </summary>
             <returns> Blob Content Type charSet </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentType.mediaType">
             <summary>
            Blob Content Type Media Type
             </summary>
             <returns> Blob Content Type Media Type </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentType.name">
             <summary>
            Blob Content Type Name
             </summary>
             <returns> Blob Content Type Name </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentType.parameters">
             <summary>
            DbBlob Content Type Parameters as Collection i.e. Dictionary
             </summary>
             <returns>Content Type Parametes of the Blob</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbBlobContentDisposition">
            <summary>
            Summary description for DbBlobContentDisposition, a serializable wrapper around ContentDisposition class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobContentDisposition.#ctor(System.Net.Mime.ContentDisposition)">
            <summary>
            Construct DbBlobContentDisposition from ContentDisposition.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobContentDisposition.#ctor">
            <summary>
            Construct DbBlobContentDisposition.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobContentDisposition.CopyTo(System.Net.Mime.ContentDisposition)">
            <summary>
            Copy ContentDisposition data.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.creationDate">
             <summary>
            DbBlob Content Disposition Creation Date
             </summary>
             <returns>DbBlob Content Disposition Creation Date as DateTime</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.dispositionType">
             <summary>
            Blob Disposition Type
             </summary>
             <returns> Blob Disposition Type </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.fileName">
             <summary>
            Blob Filename
             </summary>
             <returns> Blob Filename </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.inLine">
             <summary>
            DbBlob Content Disposition flag: is it inline? if not it is attachment 
             </summary>
             <returns>DbBlob Content Disposition inline status</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.modificationDate">
             <summary>
            DbBlob Content Disposition modification Date
             </summary>
             <returns>DbBlob Content Disposition modification Date as DateTime</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.parameters">
             <summary>
            DbBlob Content Disposition Parameters as Collection i.e. Dictionary
             </summary>
             <returns>Content Disposition Parametes of the Blob</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.readDate">
             <summary>
            DbBlob Content Disposition Read Date
             </summary>
             <returns>DbBlob Content Disposition Read Date as DateTime</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobContentDisposition.size">
             <summary>
            DbBlob Content Disposition size
             </summary>
             <returns>DbBlob Content Disposition size</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbBlobCollection">
            <summary>
            Summary description for DbBlobCollection, a serializable wrapper around Collection class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobCollection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Construct Collection from Collection
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobCollection.#ctor(System.Collections.Specialized.StringDictionary)">
            <summary>
            Construct Collection from Dictionary
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobCollection.CopyTo(System.Collections.Specialized.NameValueCollection)">
            <summary>
            copy values to serializable collection
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbBlobCollection.CopyTo(System.Collections.Specialized.StringDictionary)">
            <summary>
            copy values to serializable dictionary
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbBlobCollection.Collection">
             <summary>
            DbBlob Dictionary for parameters
             </summary>
             <returns>DbBlob Dictionary for parameters</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbChangesEventArgs">
            <summary>
            Deprecated - do not use
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbChangesEventArgs.#ctor(Aveva.Core.Database.DbUserChanges)">
            <summary>
            Constructor.
            </summary>
            <param name="changeList">User change list</param>
        </member>
        <member name="P:Aveva.Core.Database.DbChangesEventArgs.ChangeList">
            <summary>
            User change list.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbClaimEventArgs">
            <summary>
            Deprecated - do not use
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbClaimEventArgs.#ctor(Aveva.Core.Database.DbElement)">
            <summary>
            Claim event argument constructor.
            </summary>
            <param name="element">Element relating to claim event</param>
        </member>
        <member name="P:Aveva.Core.Database.DbClaimEventArgs.Element">
            <summary>
            Element relating to claim event.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.IDbClone">
            <summary>
            Clone interface.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.IsCloneMember(Aveva.Core.Database.DbElement)">
            <summary>
            Determine if an element is a linked to the clone.
            </summary>
            <param name="searchElement">    The element to search for.</param>
            <returns>
            True if the element is in the list of clones, false otherwise.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.Clone(Aveva.Core.Database.DbElement)">
            <summary>
            Perform cloning of an element.
            </summary>
            <param name="source">   The element to clone from.</param>
            <returns>
            True if succeeds, false otherwise and error set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.Resync">
            <summary>
            Resynchronize a set of cloned elements, so that they all have the same values for cloneable
            attributes.
            </summary>
            <returns>
            True if succeeds, false otherwise and error set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.Unclone">
            <summary>
            Unclone the element. Removes the element from all other clones' list of cloned elements. The
            element will no longer be synchronised.
            </summary>
            <returns>
            True if succeeds, false otherwise and error set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.Verify">
            <summary>
            Check if the cloneable attribute values are synchronised. Call resync() if not.
            </summary>
            <returns>
            True if synchronised, false otherwise (resync() should be called)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.GetCloneableAttributes(Aveva.Core.Database.DbElement)">
            <summary>
            Get a list of cloneable attributes from the given clone or cloned distributed attribute.
            Separate calls are needed for an ENGITE and it's XPITEMs.
            </summary>
            <param name="clone">    Clone or distributed attribute belonging to a clone.</param>
            <returns>
            Cloneable attributes.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.IDbClone.GetRelatedElements(Aveva.Core.Database.DbElement)">
            <summary>
            Get related cloned elements for modification. Considers Distributed Attributes, unlike the
            property Clones.
            </summary>
            <param name="source">The element that is a clone, or has a binding element that is a clone.</param>
            <returns>
            A list of cloned elements linked to the source. Does NOT contain the source or its dist
            attributes.
            </returns>
        </member>
        <member name="P:Aveva.Core.Database.IDbClone.Clones">
            <summary>
            Get the cloned elements of a clone.
            </summary>
            <value>
            The clones.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.IDbClone.IsClone">
            <summary>
            Determine if an element is a clone.
            </summary>
            <value>
            true if this Aveva.Core.Database.IDbClone is clone, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.IDbClone.IsCloneable">
            <summary>
            Determine if an element can be cloned. Checks whether the element type (Noun) is marked as
            cloneable.
            </summary>
            <value>
            true if this Aveva.Core.Database.IDbClone is cloneable, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.IDbClone.LastError">
            <summary>
            If an operation has failed, contains the last error.
            </summary>
            <value>
            The last error.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.IDbClone.Warnings">
            <summary>
            Contains warnings generated by an operation.
            </summary>
            <value>
            The warnings.
            </value>
        </member>
        <member name="T:Aveva.Core.Database.DbClone">
            <summary>
            Abstract clone class. The class can be used for existing clones, clones to be, or any element
            to test for its suitability for cloning.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbClone.BCL_MODULE_NUMBER">
            <summary>
            @summary BCL module number.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.IsCloneMember(Aveva.Core.Database.DbElement)">
            <summary>
            Determine if an element is a linked to the clone.
            </summary>
            <param name="searchElement">    The element to search for.</param>
            <returns>
            True if the element is in the list of clones, false otherwise.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.Clone(Aveva.Core.Database.DbElement)">
            <summary>
            Perform cloning of an element Any distributed attributes that cannot be synchronised will be
            added to the warning messages list as (41,402).
            </summary>
            <param name="source">   The element to clone from.</param>
            <returns>
            True if succeeds, false otherwise and error set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.Resync">
            <summary>
            Resynchronize a set of cloned elements, so that they all have the same values for cloneable
            attributes. Any distributed attributes that cannot be synchronised will be added to the
            warning messages list as (41,402).
            </summary>
            <returns>
            True if succeeds, false otherwise and error set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.Unclone">
            <summary>
            Unclone the element. Removes the element from all other clones' list of cloned elements. The
            element will no longer be synchronised.
            </summary>
            <returns>
            True if succeeds, false otherwise and error set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.Verify">
            <summary>
            Check if the cloneable attribute values are synchronised. Call resync() if not. Any elements
            that are missing or different are added to the warning messages list as (41,403).
            </summary>
            <returns>
            True if synchronised, false otherwise (resync() should be called)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.GetCloneableAttributes(Aveva.Core.Database.DbElement)">
            <summary>
            Get a list of cloneable attributes from the given clone or cloned distributed attribute.
            Separate calls are needed for an ENGITE and it's XPITEMs.
            </summary>
            <param name="clone">    Clone or distributed attribute belonging to a clone.</param>
            <returns>
            Cloneable attributes.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbClone.GetRelatedElements(Aveva.Core.Database.DbElement)">
            <summary>
            Get related cloned elements for modification. Considers Distributed Attributes, unlike the
            property Clones.
            </summary>
            <param name="source">The element that is a clone, or has a binding element that is a clone.</param>
            <returns>
            A list of cloned elements linked to the source. Does NOT contain the source or its dist
            attributes.
            </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbClone.Clones">
            <summary>
            Get the cloned elements of a clone.
            </summary>
            <value>
            The clones.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbClone.IsClone">
            <summary>
            Determine if an element is a clone.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbClone is clone, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbClone.IsCloneable">
            <summary>
            Determine if an element can be cloned. Checks whether the element type (Noun) is marked as
            cloneable.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbClone is cloneable, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbClone.LastError">
            <summary>
            If an operation has failed, contains the last error.
            </summary>
            <value>
            The last error.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbClone.Warnings">
            <summary>
            Contains warnings generated by an operation.
            </summary>
            <value>
            The warnings.
            </value>
        </member>
        <member name="T:Aveva.Core.Database.DbClone.DirectErrors">
            <summary>
            @summary Errors from bcl41.mac directly generated by this class, i.e. (41,X)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbClone.DirectErrors.ElementUncloneableError">
            <summary>
            An enum constant representing the element uncloneable error option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbClone.DirectErrors.ElementNotCloneError">
            <summary>
            An enum constant representing the element not clone error option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbClone.DirectErrors.CannotSyncError">
            <summary>
            An enum constant representing the cannot synchronise error option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbClone.DirectErrors.NotInSyncWarning">
            <summary>
            An enum constant representing the not in synchronise warning option.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbCloneFactory">
            <summary>
            Simple factory for creating instances of a Clone.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbCloneFactory.Instance">
            <summary>
            Singleton factory instance. Must be initialised by the concrete implementation. Necessary to
            allow the Create method to be static in the PIMPL idiom.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbCloneFactory.Create(Aveva.Core.Database.DbElement)">
            <summary>
            Static Clone factory method.
            </summary>
            <param name="element">  The element to consider as a clone.</param>
            <returns>
            Clone instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCloneFactory.InternalCreate(Aveva.Core.Database.DbElement)">
            <summary>
            Clone factory method.
            </summary>
            <param name="element">  The element to consider as a clone.</param>
            <returns>
            Clone instance.
            </returns>
        </member>
        <member name="T:Aveva.Core.Database.DbCollection">
            <summary>
            Representation of an Database (PML1) collection.
            N.B collections must be passed as integer arrays if storing/retrieving to/from an attribute
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.Clone">
            <summary>
            Create and returns a copy of the Collection.
            </summary>
            <returns>Collection copy</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.CreateCollection(System.Int32[])">
            <summary>
            Create collection from internal integer array format
            </summary>
            <param name="listNet"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.internalCreateCollection(System.Int32[])">
            <summary>
            Internal command
            </summary>
            <param name="listNet"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.Equals(System.Object)">
            <summary>
            Compare two Collections
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.op_Equality(Aveva.Core.Database.DbCollection,Aveva.Core.Database.DbCollection)">
            <summary>
            Collection equality operator
            </summary>
            <param name="left">Left-hand Collection</param>
            <param name="right">Right-hand Collection</param>
            <returns>True, if the Collections are equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.op_Inequality(Aveva.Core.Database.DbCollection,Aveva.Core.Database.DbCollection)">
            <summary>
            Collection inequality operator
            </summary>
            <param name="left">Left-hand Collection</param>
            <param name="right">Right-hand Collection</param>
            <returns>True, if the Collections are not equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.GetHashCode">
            <summary>
            Returns hash code for Collection.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.GetStack">
            <summary>
            Get internal integer array format from the Collection.
            </summary>
            <returns>Internal stack as array of integer</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.Evaluate">
            <summary>
            Evaluate collection.
            </summary>
            <returns>List of elements matching collection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.ContainsElement(Aveva.Core.Database.DbElement)">
            <summary>
            Test if element is in collection.
            </summary>
            <returns>List of elements matching collection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.internalParse(System.String,Aveva.Core.Database.DbCollection@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create collection by parsing text.
            The text may be any PML1 collection. e.g. ALL BOX WHERE (XLEN + 10) FOR /MYSITE
            </summary>
            <param name="name">collection text</param>
            <param name="collection">collection object</param>
            <param name="error">Error object if invalid text entered</param>
            <returns>true if valid collection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.Parse(System.String,Aveva.Core.Database.DbCollection@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create collection by parsing text.
            The text may be any PML1 collection. e.g. ALL BOX WHERE (XLEN + 10) FOR /MYSITE
            </summary>
            <param name="name">collection text</param>
            <param name="collection">collection object</param>
            <param name="error">Error object if invalid text entered</param>
            <returns>true if valid collection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbCollection.ToString">
            <summary>
            Gets textual representation of Collection
            </summary>
            <returns>Text</returns>
        </member>
        <member name="F:Aveva.Core.Database.DbCollection.internalCollection">
            <summary>
            Singleton factory instance
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbCopyOption">
            <summary>
            Container for copy options.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbCopyOption.FromName">
            <summary>
            Name of copy source
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbCopyOption.ToName">
            <summary>
            Name of copy destination
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbCopyOption.Rename">
            <summary>
            True, if rename on copy
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbCopyOption.ReExecuteRules">
            <summary>
            True, if Rules are re-executed on copy
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbCopyOption.IncludeRules">
            <summary>
            True, if Rules included in copy
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElement">
            <summary>
            Methods to read and write to the database. These cover element creation, deletion and copy;
            getting and querying attributes and rules;
            scanning the DB; evaluating database expressions. Instances of DbElement should be used to
            identify an element. i.e. methods that take an element should always pass a DbElement rather
            than a 2 long reference number or the name of the element. Some methods return a 'null'
            DbElement to denote failure. A 'null' DbElement can only be tested using the 'IsNull' method.
            DO NOT INHERIT FROM THIS CLASS.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.AtDefault(Aveva.Core.Database.DbAttribute)">
            <summary>
            Query whether the named Attribute of this Element has default value. If attribute is invalid,
            method returns false.
            </summary>
            <param name="attributeName">    Attribute to test.</param>
            <returns>
            True, if the Element's Attribute is at the default value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Claim">
            <summary>
            Claim this Element. Throws an exception if element cannot be claimed.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Claim(Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            /// Claim this Element. Returns an exception if element cannot be claimed.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ClaimHierarchy">
            <summary>
            Claim this Element and all its descendants. Throws an exception if all elements cannot be
            claimed. Even if some elements cannot be claimed, the method will claim what it can.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Clone">
            <summary>
            Return a new instance representing this Element.
            </summary>
            <returns>
            Element clone.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CompareTo(System.Object)">
            <summary>
            Compare this Element with general object.
            </summary>
            <param name="obj">  Object to compare.</param>
            <returns>
            0, if object is equal; -1 if object is "less than"; 1 if object is "greater than".
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Copy(Aveva.Core.Database.DbElement)">
            <summary>
            Copy attributes from another Element. This method throws an exception if operation fails.
            </summary>
            <param name="element">  Existing Element to copy from.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CopyInitialisePhase1">
            <summary>
            Initialise connection tables in phase 1 of copy.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalCopyInitialisePhase1">
            <summary>
            Copy phase1 initialisation implementation.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CopyHierarchyPhase1(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Phase 1 of copy hierarchy which just does copy and build connection tables. This method
            throws an exception if operation fails.
            </summary>
            <param name="element">  .</param>
            <param name="option">   .</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CopyHierarchyPhase2(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Phase 2 of copy hierarchy which executes rules and uses connection tables to repair
            connections between connected element.
            </summary>
            <param name="element">  .</param>
            <param name="option">   .</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CopyHierarchy(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Copy attributes from another Element, and create a copy of Element's descendants. This method
            throws an exception if operation fails.
            </summary>
            <param name="element">  Existing Element to copy from.</param>
            <param name="option">   Copy options.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CopyLike(Aveva.Core.Database.DbElement)">
            <summary>
            Copy only a subset of attributes from another Element, as determined by attribute
            definitions. Examples of attributes NOT copied are POS/ORI. The list is documented in the
            'COPY LIKE' section of the database reference manual. This method throws an exception if
            operation fails.
            </summary>
            <param name="element">  Existing Element to copy from.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Create(System.Int32,Aveva.Core.Database.DbElementType)">
            <summary>
            Create a new Element at given position in this Element's child list. This method throws an
            exception if operation fails.
            </summary>
            <param name="positionInList">   Insert position index.</param>
            <param name="elementType">  New Element type.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateAfter(Aveva.Core.Database.DbElementType)">
            <summary>
            Create a new Element after this Element in owner's child list. This method throws an
            exception if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateSameref(System.Int32,Aveva.Core.Database.DbElementType,System.Int32[])">
            <summary>
            Create a new Element with supplied ref at given position in this Element's child list. This
            method throws an exception if operation fails.
            </summary>
            <param name="positionInList">   Insert position index.</param>
            <param name="elementType">  New Element type.</param>
            <param name="ref">  The reference.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateSamerefAfter(Aveva.Core.Database.DbElementType,System.Int32[])">
            <summary>
            Create a new Element with supplied ref after this Element in owner's child list. This method
            throws an exception if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <param name="ref">  The reference.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateBefore(Aveva.Core.Database.DbElementType)">
            <summary>
            Create a new Element before this Element in owner's child list. This method throws an
            exception if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateCopyHierarchyAfter(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Create copy of an Element hierarchy after this Element in owner's child list. This method
            throws an exception if operation fails.
            </summary>
            <param name="elementToCopy">    Existing Element to copy from.</param>
            <param name="option">   Copy options.</param>
            <returns>
            New Element (root)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateCopyHierarchyAfterLast(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Create copy of an Element hierarchy at the end of this Element's owner's child list. This
            method throws an exception if operation fails.
            </summary>
            <param name="elementToCopy">    Existing Element to copy from.</param>
            <param name="option">   Copy options.</param>
            <returns>
            New Element (root)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateCopyHierarchyBefore(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Create copy of an Element hierarchy before this Element in owner's child list. This method
            throws an exception if operation fails.
            </summary>
            <param name="elementToCopy">    Existing Element to copy from.</param>
            <param name="option">   Copy options.</param>
            <returns>
            New Element (root)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateCopyHierarchyBeforeFirst(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbCopyOption)">
            <summary>
            Create copy Element hierarchy at the beginning of this Element's owner's child list. This
            method throws an exception if operation fails.
            </summary>
            <param name="elementToCopy">    Existing Element to copy from.</param>
            <param name="option">   Copy options.</param>
            <returns>
            New Element (root)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateFirst(Aveva.Core.Database.DbElementType)">
            <summary>
            Create new Element at the beginning of this Element's child list. This method throws an
            exception if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateLast(Aveva.Core.Database.DbElementType)">
            <summary>
            Create new Element at the end of this Element's child list. This method throws an exception
            if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateSamerefFirst(Aveva.Core.Database.DbElementType,System.Int32[])">
            <summary>
            Create new Element with supplied ref at the beginning of this Element's child list. This method throws an
            exception if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <param name="ref">  The reference.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateSamerefLast(Aveva.Core.Database.DbElementType,System.Int32[])">
            <summary>
            Create new Element with supplied ref at the end of this Element's child list. This method throws an exception
            if operation fails.
            </summary>
            <param name="elementType">  New Element type.</param>
            <param name="ref">  The reference.</param>
            <returns>
            New Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.DatalProtection(System.Boolean)">
            <summary>
            Set Datal protection on/off. Datal protection should be turned off once the protected
            attributes have been set.
            </summary>
            <param name="onoff">    If true set on, else set off.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalDatalProtection(System.Boolean)">
            <summary>
            Set Datal protection on/off. Datal protection should be turned off once the protected
            attributes have been set.
            </summary>
            <param name="onoff">    If true set on, else set off.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Delete">
            <summary>
            Delete this Element.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Delete(Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Delete this Element.
            </summary>
            <param name="message">  [out] Returns error if delete has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.DeleteRule(Aveva.Core.Database.DbAttribute)">
            <summary>
            Delete the Rule, attached to the given Attribute, from this Element. This method throws an
            exception if operation fails.
            </summary>
            <param name="attributeName">    Attribute owning the Rule to be deleted.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Equals(System.Object)">
            <summary>
            Compare this Element with general object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateAsString(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate expression on Element as text. The string returned will be correctly formatted for
            output taking into account the current units. This method throws an exception if expression
            is invalid.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Text value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidAsString(Aveva.Core.Database.DbExpression,System.String@)">
            <summary>
            Evaluate expression on Element as text. The string returned will be correctly formatted for
            output taking into account the current units.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateBool(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate boolean valued PML1 Expression against this Element. Example of such an expression
            is (HBORE GT 100). This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Boolean value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidBool(Aveva.Core.Database.DbExpression,System.Boolean@)">
            <summary>
            Evaluate boolean valued PML1 Expression against this Element. Example of such an expression
            is (HBORE GT 100).
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbAttributeUnit)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2). This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="units">Units field value (i.e. Dimension) for attribute concerned, if known -
                                accepts limited NONE/DIST/BORE hash-values.  If unknown use NONE.</param>
            <returns>
            Floating-point value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbAttributeUnit,System.Double@)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2).
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="units">Units field value (i.e. Dimension) for attribute concerned, if known -
                                accepts limited NONE/DIST/BORE hash-values.  If unknown use NONE.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbDimension)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2). This method throws an exception if expression can not be evaluated.
                       or if expression does not evaluate to NONE, or compatible unit.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="units">    DbDimension expected of expression. If unknown use NONE.</param>
            <returns>
            Floating-point value from Expression in current units of units.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbDimension,System.Double@)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2). This method throws an exception if expression can not be evaluated.
                       or if expression does not evaluate to NONE, or compatible unit.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="units">    DbDimension expected of expression. If unknown use NONE.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateDbDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbDimension)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2). This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="dimreq">Units field value (i.e. Dimension) for attribute concerned, if known use
                                 DbDimension, if do not care use single parameter form.</param>
            <returns>
            Floating-point value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDbDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbDimension,Aveva.Core.Database.DbDouble@)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2).
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="dimreq">Units field value (i.e. Dimension) for attribute concerned, if known use
                                 DbDimension, if do not care use single parameter form.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateDbDouble(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2). This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            DbDouble value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDbDouble(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbDouble@)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2).
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDbDoubleArray(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbDouble[]@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Evaluate numerical valued PML1 Expression against this Element. Example of such an expression
            is (DIAM * 2).
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <param name="message">Error message</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateElement(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate reference valued PML1 Expression against this Element. Example of such an expression
            is (BOX 2 OF /MyEquip ). This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Element identified by Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateElement(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbElement@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Evaluate reference valued PML1 Expression against this Element. Example of such an expression
            is (BOX 2 OF /MyEquip ). This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="eleResult">Element identified by Expression</param>
            <param name="message">Error message object</param>
            <returns>
            Bool whether it has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidElement(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbElement@)">
            <summary>
            Evaluate reference valued PML1 Expression against this Element. Example of such an expression
            is (BOX 2 OF /MyEquip ).
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateString(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate text valued PML1 Expression against this Element. Example of such an expression is
            (DESC + 'Some text')
            This method throws an exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Text value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidString(Aveva.Core.Database.DbExpression,System.String@)">
            <summary>
            Evaluate text valued PML1 Expression against this Element. Example of such an expression is
            (DESC + 'Some text')
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluatePosition(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate position valued PML1 Expression against this Element. This method throws an
            exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Text value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidPosition(Aveva.Core.Database.DbExpression,Aveva.Core.Geometry.Position@)">
            <summary>
            Evaluate position valued PML1 Expression against this Element.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateDirection(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate direction valued PML1 Expression against this Element. This method throws an
            exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Text value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDirection(Aveva.Core.Database.DbExpression,Aveva.Core.Geometry.Direction@)">
            <summary>
            Evaluate direction valued PML1 Expression against this Element.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateOrientation(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate orientation valued PML1 Expression against this Element. This method throws an
            exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Text value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidOrientation(Aveva.Core.Database.DbExpression,Aveva.Core.Geometry.Orientation@)">
            <summary>
            Evaluate orientation valued PML1 Expression against this Element. This method throws an
            exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateDateTime(Aveva.Core.Database.DbExpression)">
            <summary>
            Evaluate date-time valued PML1 Expression against this Element. This method throws an
            exception if expression can not be evaluated.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <returns>
            Text value from Expression.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDateTime(Aveva.Core.Database.DbExpression,System.DateTime@)">
            <summary>
            Evaluate date-time valued PML1 Expression against this Element.
            </summary>
            <param name="expression">   Expression to evaluate.</param>
            <param name="exprResult">[in,out] The result of the expression evaluation is true is returned.</param>
            <returns>
            True if evaluated ok, otherwise false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidIntArray(Aveva.Core.Database.DbExpression,System.Int32[]@)">
            <summary>
            Evaluate intArray PML1 Expression against this Element.
            </summary>
            <param name="expression">Expression to evaluate</param>
            <param name="exprResult">The result of the expression evaluation is true is returned.</param>
            <returns>True if evaluated ok, otherwise false</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidDoubleArray(Aveva.Core.Database.DbExpression,System.Double[]@,System.Int32[]@)">
            <summary>
            Evaluate doubleArray PML1 Expression against this Element.
            </summary>
            <param name="expression"></param>
            <param name="exprResult"></param>
            <param name="units">Units</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidBoolArray(Aveva.Core.Database.DbExpression,System.Boolean[]@)">
            <summary>
            Evaluate boolArray PML1 Expression against this Element.
            </summary>
            <param name="expression">Expression to evaluate</param>
            <param name="exprResult">The result of the expression evaluation is true is returned.</param>
            <returns>True if evaluated ok, otherwise false</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidElementArray(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Evaluate ElementArray PML1 Expression against this Element.
            </summary>
            <param name="expression">Expression to evaluate</param>
            <param name="exprResult">The result of the expression evaluation is true is returned.</param>
            <returns>True if evaluated ok, otherwise false</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.EvaluateValidStringArray(Aveva.Core.Database.DbExpression,System.String[]@)">
            <summary>
            Evaluate stringArray PML1 Expression against this Element.
            </summary>
            <param name="expression">Expression to evaluate</param>
            <param name="exprResult">The result of the expression evaluation is true is returned.</param>
            <returns>True if evaluated ok, otherwise false</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ExecuteAllRules">
            <summary>
            Execute all Rules on this Element. This method throws an exception if rules cannot be
            executed.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ExecuteRule(Aveva.Core.Database.DbAttribute)">
            <summary>
            Execute the Rule, attached to the given Attribute, on this Element. This method throws an
            exception if rules cannot be executed.
            </summary>
            <param name="attributeName">    Attribute owning the Rule to be executed.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ExistRule(Aveva.Core.Database.DbAttribute)">
            <summary>
            Queries whether a Rule is attached to the given Attribute on this Element.
            </summary>
            <param name="attributeName">    Attribute to test.</param>
            <returns>
            True only if a Rule exists on the Element's Attribute.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.FirstMember">
            <summary>
            Navigate to first child Element.
            </summary>
            <returns>
            Child Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.FirstMember(Aveva.Core.Database.DbElementType)">
            <summary>
            Navigate to first child Element that has given type.
            </summary>
            <param name="elementType">  Element type.</param>
            <returns>
            Child Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsString(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Attribute value on Element as text. This method works for all attributes that are valid
            ion this element The string returned will be correctly formatted for output taking into
            account the current units.
            e.g. if in imperial units a position might be output as 'W 39'4.7/16 N 59'0.85/128 U
            4'0.31/128'. This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Text value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidAsString(Aveva.Core.Database.DbAttribute,System.String@)">
            <summary>
            Get Attribute value on Element as text. This method works for all attributes that are valid
            ion this element The string returned will be correctly formatted for output taking into
            account the current units.
            e.g. if in imperial units a position might be output as 'W 39'4.7/16 N 59'0.85/128 U
            4'0.31/128'.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Text value, where return value is True.</param>
            <returns>
            True, if attribute exists; False, if attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidAsString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.String@)">
            <summary>
            Get Attribute value on Element as text. This method works for all attributes that are valid
            ion this element The string returned will be correctly formatted for output taking into
            account the current units.
            e.g. if in imperial units a position might be output as 'W 39'4.7/16 N 59'0.85/128 U
            4'0.31/128'.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Text value, where return value is True.</param>
            <returns>
            True, if query succeeded; False, if not.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            As for standard GetAsString() but allowing for an attribute qualifier.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Text value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsStringArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get word array attribute as an array of strings.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            array of values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsStringArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get word array attribute as an array of strings, allowing for qualifier.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            array of values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttribute(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get an instance of the Attribute identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Attribute instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute@)">
            <summary>
            Get an instance of the Attribute identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] attribute value, where return value is True.</param>
            <returns>
            True, if attribute exists; False, if attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get an instance of the Attribute identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Attribute instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbAttribute@)">
            <summary>
            Get an instance of the Attribute identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] attribute value, where return value is True.</param>
            <returns>
            True, if attribute exists; False, if attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get array of Attribute instances identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of Attribute instances.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidAttributeArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Get array of Attribute instances identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] attribute value, where return value is True.</param>
            <returns>
            True, if attribute exists; False, if attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get array of Attribute instances identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Array of Attribute instances.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidAttributeArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Get array of Attribute instances identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] attribute value, where return value is True.</param>
            <returns>
            True, if attribute exists; False, if attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributes">
            <summary>
            Get all the Attributes on this Element.
            </summary>
            <returns>
            Array of Attributes.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributesWithRules">
            <summary>
            Get all Attributes on this Element that have Rules.
            </summary>
            <returns>
            Array of Attributes.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBool(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Boolean Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Boolean value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidBool(Aveva.Core.Database.DbAttribute,System.Boolean@)">
            <summary>
            Get Boolean Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Boolean value, where return value is True.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBool(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Boolean Attribute value on Element, allowing for qualifier. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Boolean value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBool(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get Boolean Attribute value on Element, allowing for qualifier. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Boolean value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidBool(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Boolean@)">
            <summary>
            Get Boolean Attribute value on Element, allowing for qualifier.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Boolean value, where return value is True.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoolArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Boolean array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of Boolean values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidBoolArray(Aveva.Core.Database.DbAttribute,System.Boolean[]@)">
            <summary>
            Get Boolean array Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Boolean array, where return value is True.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoolArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get Boolean array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Array of Boolean values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidBoolArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Boolean[]@)">
            <summary>
            Get Boolean array Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Boolean array, where return value is True.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDate(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Date-Time Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Date-Time value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDate(Aveva.Core.Database.DbAttribute,System.DateTime@)">
            <summary>
            Get Date-Time Attribute value on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] DateTime, where return value is True.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDouble(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get floating-point Attribute value on Element. This method throws an exception if attribute
            is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Floating-point value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDbDouble(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get dimensioned Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Dimensioned double.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDouble(Aveva.Core.Database.DbAttribute,System.Double@)">
            <summary>
            Get floating-point Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="dval"> [in,out] Floating-point value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDbDouble(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbDouble@)">
            <summary>
            Get dimensioned Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="dval"> [in,out] Dimensioned double, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDouble(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get floating-point Attribute value on Element. This method throws an exception if attribute
            is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Floating-point value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDouble(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Double@)">
            <summary>
            Get floating-point Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="dval">[in,out] Floating point attribute value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDbDouble(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get dimensioned Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Dimensioned double.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDbDouble(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbDouble@)">
            <summary>
            Get DbDouble Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="dval"> [in,out] Dimensioned double, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDoubleArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get floating-point array Attribute on Element. This method throws an exception if attribute
            is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of floating-point values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetStringArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get text array Attribute on Element. This method throws an exception if attribute
            is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of string values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDoubleArray(Aveva.Core.Database.DbAttribute,System.Double[]@)">
            <summary>
            Get floating-point array Attribute on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="dvals">    [in,out] Array of floating point attribute values.</param>
            <returns>
            True, if attribute valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDbDoubleArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get dimensioned array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of dimensioned doubles.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDbDoubleArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbDouble[]@)">
            <summary>
            Get DbDouble array Attribute on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="dvals">    [in,out] Array of DbDouble attribute values.</param>
            <returns>
            True, if attribute valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDoubleArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get floating-point array Attribute on Element. This method throws an exception if attribute
            is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Array of floating-point values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDoubleArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Double[]@)">
            <summary>
            Get floating-point array Attribute on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="dvals">    [in,out] Array of floating point attribute values.</param>
            <returns>
            True, if attribute valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDbDoubleArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get dimensioned array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Array of dimensioned doubles.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDbDoubleArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbDouble[]@)">
            <summary>
            Get DbDouble array Attribute on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="dvals">    [in,out] Array of DbDouble attribute values.</param>
            <returns>
            True, if attribute valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement">
            <summary>
            Get a null Element instance.
            </summary>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(System.Int32[])">
            <summary>
            Get an Element instance using reference number pair. If the reference number is not valid, a
            null Element is returned. This method throws an exception if attribute is invalid.
            </summary>
            <param name="reference">    Element reference number pair.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Ref attribute on an Element. This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidRef(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement@)">
            <summary>
            Get Ref Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElement.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(System.String)">
            <summary>
            Get an Element instance using element name. If the element name is not known, a null Element
            is returned. DEPRECATED. Use MDB.FindElement(string) to get an element of a given name or the
            Parse method to parse a PML1 string.
            </summary>
            <param name="name"> Name of element.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoundElement(Aveva.Core.Database.DbElementType,System.Int32)">
            <summary>
            Distributed attributes prototype.
            </summary>
            <param name="typeName"> .</param>
            <param name="number">   .</param>
            <returns>
            The bound element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoundElement(Aveva.Core.Database.DbElementType)">
            <summary>
            Distributed attributes prototype.
            </summary>
            <param name="typeName"> .</param>
            <returns>
            The bound element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoundElements">
            <summary>
            Distributed attributes prototype.
            </summary>
            <returns>
            An array of database element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoundElements(Aveva.Core.Database.DbElementType)">
            <summary>
            Distributed attributes prototype.
            </summary>
            <param name="typeName"> .</param>
            <returns>
            An array of database element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.CreateBoundElement(Aveva.Core.Database.DbElementType)">
            <summary>
            Distributed attributes prototype creation.
            </summary>
            <param name="typeName"> .</param>
            <returns>
            The new bound element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.DeleteBoundElement">
            <summary>
            Delete bound element.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.DeleteBoundElement(Aveva.Core.Database.DbElementType)">
            <summary>
            Delete bound element.
            </summary>
            <param name="typeName"> .</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.DeleteBoundElement(Aveva.Core.Database.DbElementType,System.Int32)">
            <summary>
            Delete bound element.
            </summary>
            <param name="typeName"> .</param>
            <param name="pos">  .</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>
            Get Element instance referenced by Attribute on Element. This method throws an exception if
            attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Element type qualifier.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(System.Int32[],Aveva.Core.Database.DbElementType)">
            <summary>
            Get an Element instance using reference number pair, and element type.
            </summary>
            <param name="reference">    Reference number pair.</param>
            <param name="type"> Element type.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get Element instance referenced by Attribute on Element. This method throws an exception if
            attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Integer value qualifier.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidRef(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbElement@)">
            <summary>
            Get Element instance referenced by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElement.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get array of Element instances referenced by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of Element instances.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidRefArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get array of Element instances referenced by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElement array.</param>
            <returns>
            True, if successful.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>
            Get array of Element instances referenced by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier as a dBElementType.</param>
            <returns>
            Attribute value as a dbElement array.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get array of Element instances referenced by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Attribute value as a DbElement array.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidRefArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Get array of Element instances referenced by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElement array.</param>
            <returns>
            True, if successful.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementType">
            <summary>
            Get the type of this Element. Where this is a User-Defined Element Type, the base type is
            returned.
            </summary>
            <returns>
            Element type, or base type.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetActualType">
            <summary>
            Get the actual type of this Element. Where this is a User-Defined Element Type, that is
            returned.
            </summary>
            <returns>
            Element type.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementType(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get the Element type identified by Attribute on Element. This method throws an exception if
            attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Element type.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidElementType(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType@)">
            <summary>
            Get the Element type identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElementType.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementType(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get the Element type identified by Attribute on Element. This method throws an exception if
            attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Attribute value as a dbElementType.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidElementType(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbElementType@)">
            <summary>
            Get the Element type identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElementType.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementTypeArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get array of Element types identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of Element types.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidElementTypeArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType[]@)">
            <summary>
            Get array of Element types identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElementType array.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementTypeArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get array of Element types identified by Attribute on Element. This method throws an
            exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            Attribute value as an array of Element types.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidElementTypeArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbElementType[]@)">
            <summary>
            Get array of Element types identified by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElementType array.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeAllowedValues(Aveva.Core.Database.DbAttribute,System.String[]@)">
            <summary>
            Get the allowed values for the given element attribute.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="values">   [in,out] Array of allowed values.</param>
            <returns>
            True, if allowed values are defined.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeAllowedValuesAndDescriptions(Aveva.Core.Database.DbAttribute,System.Collections.Generic.KeyValuePair{System.String,System.String}[]@)">
            <summary>
            Get the allowed values for the given element attribute and their corresponding descriptions.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="valuesDescriptions">   [in,out] Array of allowed (value,description) pairs.</param>
            <returns>
            True, if allowed values are defined.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeAllowedRanges(Aveva.Core.Database.DbAttribute,System.Double[]@)">
            <summary>
            Get the allowed range(s) for the given element attribute.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="ranges">   [in,out] Array of range boundaries.</param>
            <returns>
            True, if allowed ranges are defined.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsAttributeAllowedOptional(Aveva.Core.Database.DbAttribute)">
            <summary>
            Are allowed value(s) or range(s) optional for the given element attribute?
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            True, if valid values/ranges are optional.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetError">
            <summary>
            Get details on last error.
            </summary>
            <returns>
            Error details.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetExpression(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Expression instance given by Attribute on Element. Only valid for attributes for which
            the CATPAR field is true This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Expression instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidExpression(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbExpression@)">
            <summary>
            Get Expression instance given by Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbExpression.</param>
            <returns>
            True, if Attribute exists; False if Attribute does not exist.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetHashCode">
            <summary>
            Get the hash code for this Element, overriding Object.GetHashCode.
            </summary>
            <returns>
            Hash code.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetInteger(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get integer Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Integer value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidInteger(Aveva.Core.Database.DbAttribute,System.Int32@)">
            <summary>
            Get integer Attribute value on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="intVal">   [in,out] Integer value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetInteger(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get integer Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The integer.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetInteger(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>
            Get integer Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The integer.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetInteger(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get integer Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The integer.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidInteger(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Int32@)">
            <summary>
            Get integer Attribute value on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">   [in,out] Integer value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetInteger(Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Get integer Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The integer.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetIntegerArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get integer array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Array of integer values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidIntegerArray(Aveva.Core.Database.DbAttribute,System.Int32[]@)">
            <summary>
            Get integer array Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Integer value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetIntegerArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get integer array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            An array of int.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetIntegerArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get integer array Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            An array of int.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidIntegerArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Int32[]@)">
            <summary>
            Get integer array Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">[in,out] Integer array value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetRule(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Rule instance for Attribute on Element. This method throws an exception if no rule exists.
            </summary>
            <param name="attributeName">    Attribute that rule applies to.</param>
            <returns>
            Rule instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetString(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get text value Attribute on Element. This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Text value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidString(Aveva.Core.Database.DbAttribute,System.String@)">
            <summary>
            Get text value Attribute on Element, if available.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Text value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get text value Attribute on Element. This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get text value Attribute on Element. This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">Attribute to query.</param>
            <param name="qualifier">Qualifier</param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.String@)">
            <summary>
            Get text Attribute value on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">Qualifier</param>
            <param name="attributeValue">   [in,out] Text value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidStringArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.String[]@)">
            <summary>
            Get string array Attribute value on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">   [in,out] string array value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidStringArray(Aveva.Core.Database.DbAttribute,System.String[]@)">
            <summary>
            Get string array Attribute value on Element.
            </summary>
            <param name="attributeName">Attribute to query</param>
            <param name="attributeValue">Out string array of values</param>
            <returns>Success</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetString(Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Get text value Attribute on Element. This method throws an exception if attribute is invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetPosition(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get position value Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Point instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidPosition(Aveva.Core.Database.DbAttribute,Aveva.Core.Geometry.Position@)">
            <summary>
            Get position value Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Position value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetPosition(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get position value Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The position.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidPosition(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Geometry.Position@)">
            <summary>
            Get position value Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">   [in,out] Position value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDirection(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get direction value Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Vector instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDirection(Aveva.Core.Database.DbAttribute,Aveva.Core.Geometry.Direction@)">
            <summary>
            Get direction value Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Direction value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDirection(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get direction value Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The direction.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDirection(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Geometry.Direction@)">
            <summary>
            Get direction value Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">   [in,out] Direction value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetOrientation(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get orientation value Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Matrix instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidOrientation(Aveva.Core.Database.DbAttribute,Aveva.Core.Geometry.Orientation@)">
            <summary>
            Get orientation value Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] Orientation value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetOrientation(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get orientation value Attribute on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The orientation.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidOrientation(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Geometry.Orientation@)">
            <summary>
            Get orientation value Attribute on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">   [in,out] Orientation value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDateTime(Aveva.Core.Database.DbAttribute,System.DateTime@)">
            <summary>
            Get Date-Time Attribute value on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="attributeValue">   [in,out] DateTime value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDateTime(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get Date-Time Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            Date-time value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeBlobSegment(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbBlob@,System.Int32[]@,System.Int32@,System.Int32[]@,System.Int32@,System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get DbBlob Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDateTime(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Get Date-Time Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Qualifier.</param>
            <returns>
            Date-time value.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidDateTime(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.DateTime@)">
            <summary>
            Get Date-Time Attribute value on Element.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="attributeValue">   [in,out] DateTime value, where return value is True.</param>
            <returns>
            True, if Attribute is valid; False, if Attribute is not valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeValue``1(Aveva.Core.Database.DbAttribute,``0@)">
            <summary>
            Generic method to get the attribute value. Doesn't throw.
            </summary>
            <typeparam name="T">    Type of attribute value to retrieve.</typeparam>
            <param name="attribute">    Attribute to retrieve.</param>
            <param name="value">    [out] The return value.</param>
            <returns>
            True if found, false otherwise (call GetError() to get the error)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeValue``1(Aveva.Core.Database.DbAttribute,``0@,Aveva.Core.Database.DbQualifier)">
            <summary>
            Generic method to get the attribute value with a qualifier. Doesn't throw.
            </summary>
            <typeparam name="T">    Type of attribute value to retrieve.</typeparam>
            <param name="attribute">    Attribute to retrieve.</param>
            <param name="value">    [out] The return value.</param>
            <param name="qualifier">    Qualifier.</param>
            <returns>
            True if found, false otherwise (call GetError() to get the error)
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetParameterList(Aveva.Core.Database.DbAttribute)">
            <summary>
            Get ParameterList Attribute value on Element. This method throws an exception if attribute is
            invalid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            ParameterList instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertAfter(Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element after the given reference Element. This method throws an exception if
            insertion fails.
            </summary>
            <param name="element">  Reference Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertAfterLast(Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element after the last child of the given parent Element. This method throws an
            exception if insertion fails.
            </summary>
            <param name="owner">    Parent Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertBefore(Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element before the given reference Element. This method throws an exception if
            insertion fails.
            </summary>
            <param name="element">  Reference Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertBeforeFirst(Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element before the first child of the given parent Element. This method throws an
            exception if insertion fails.
            </summary>
            <param name="owner">    Parent Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertIntoSecondaryListAfter(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element into secondary list, after the given reference Element. This method throws an
            exception if insertion fails.
            </summary>
            <param name="element">  Reference Element.</param>
            <param name="group">    Parent Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertIntoSecondaryListAfterLast(Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element into secondary list, after the last child of the given parent Element. This
            method throws an exception if insertion fails.
            </summary>
            <param name="group">    Parent Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertIntoSecondaryListBefore(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element into secondary list, before the given reference Element. This method throws an
            exception if insertion fails.
            </summary>
            <param name="element">  Reference Element.</param>
            <param name="group">    Parent Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.InsertIntoSecondaryListBeforeFirst(Aveva.Core.Database.DbElement)">
            <summary>
            Insert Element into secondary list, before the first child of the given parent Element. This
            method throws an exception if insertion fails.
            </summary>
            <param name="group">    Parent Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalGetElement">
            <summary>
            Internal method. Get null Element instance.
            </summary>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalGetElement(System.String)">
            <summary>
            Internal method. Get Element instance by element name.
            </summary>
            <param name="name"> Element name.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalGetElement(System.Int32[])">
            <summary>
            Internal method. Get Element instance by reference number pair.
            </summary>
            <param name="reference">    Reference number pair.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalGetElement(System.Int32[],Aveva.Core.Database.DbElementType)">
            <summary>
            Internal method. Get Element instance by reference number pair, and element type.
            </summary>
            <param name="reference">    Reference number pair.</param>
            <param name="type"> Element type.</param>
            <returns>
            Element instance.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsAttributeSetable(Aveva.Core.Database.DbAttribute)">
            <summary>
            Queries whether the named Attribute on this Element can be set.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            True, if Element's Attribute can be set.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsAttributeValid(Aveva.Core.Database.DbAttribute)">
            <summary>
            Queries whether the named Attribute value on this Element is valid.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <returns>
            True, if Element's Attribute is valid.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsValidNameFormat(System.String,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbType,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Checks name format validity (e.g. no spaces) without the need of a physical element to refer
            to.
            </summary>
            <param name="name"> name to validate.</param>
            <param name="elementType">  Type of element, for some type specific exclusions.</param>
            <param name="dbtype">   Database type.</param>
            <param name="message">  [out] Message in the case of validation failure.</param>
            <returns>
            Valid true or false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsValidNameFormat(System.String,Aveva.Core.Database.DbType,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Checks name format validity (e.g. no spaces) without the need of a physical element to refer
            to This variant without an element type will not make certain element type specific
            exclusions (e.g. the admin db USER element has less restrictive checks)
            </summary>
            <param name="name"> name to validate.</param>
            <param name="dbtype">   Database type.</param>
            <param name="message">  [out] Message in the case of validation failure.</param>
            <returns>
            Valid true or false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalIsValidNameFormat(System.String,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbType,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            internal (non-static) method required to support public static version of this method.
            </summary>
            <param name="name"> name to validate.</param>
            <param name="elementType">  Type of element, for some type specific exclusions.</param>
            <param name="dbtype">   Database type.</param>
            <param name="message">  [out] Message in the case of validation failure.</param>
            <returns>
            Valid true or false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalIsValidNameFormat(System.String,Aveva.Core.Database.DbType,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            internal (non-static) method required to support public static version of this method.
            </summary>
            <param name="name"> name to validate.</param>
            <param name="dbtype">   Database type.</param>
            <param name="message">  [out] Message in the case of validation failure.</param>
            <returns>
            Valid true or false.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsCopyable(Aveva.Core.Database.DbElement)">
            <summary>
            Queries whether the Attributes of another Element can be copied into this Element.
            </summary>
            <param name="elementToCopyFrom">    Element to copy Attributes from.</param>
            <returns>
            True, if Element Attributes can be copied.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsCreatable(Aveva.Core.Database.DbElementType)">
            <summary>
            Queries whether a child Element of a given type can be created.
            </summary>
            <param name="elementType">  Element Type.</param>
            <returns>
            True, if child Element can be created.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsDescendant(Aveva.Core.Database.DbElement)">
            <summary>
            Queries whether this Element is a descendant of the given Element.
            </summary>
            <param name="element">  Possible parent Element.</param>
            <returns>
            True, if Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.IsInsertable(Aveva.Core.Database.DbElement)">
            <summary>
            Queries whether this Element can be inserted as child to the given Element.
            </summary>
            <param name="owner">    Proposed parent Element.</param>
            <returns>
            True, if Element can be inserted as child.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.LastMember">
            <summary>
            Returns the last child Element of this Element. If none, returns a null DbElement.
            </summary>
            <returns>
            Last child Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Member(System.Int32)">
            <summary>
            Returns the numbered child Element of this Element (starting with 1)
            If none, returns a null DbElement.
            </summary>
            <param name="number">   Index of child, 1 based.</param>
            <returns>
            Indexed child Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Members">
            <summary>
            Returns all child Elements of this Element.
            </summary>
            <returns>
            Array containing all child Elements.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Members(Aveva.Core.Database.DbElementType)">
            <summary>
            Returns all child Elements of this Element that have Element Type.
            </summary>
            <param name="type"> Element Type.</param>
            <returns>
            Array containing child Elements.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Next">
            <summary>
            Returns the next Element in order from this Element. If none, returns a null DbElement.
            </summary>
            <returns>
            Next Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Next(Aveva.Core.Database.DbElementType)">
            <summary>
            Returns the next Element in order that has the given Element Type, from this Element. If none,
            returns a null DbElement.
            </summary>
            <param name="type"> Element Type.</param>
            <returns>
            Next conforming Element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.op_Equality(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            Element equality operator.
            </summary>
            <param name="left"> Left-hand Element.</param>
            <param name="right">    Right-hand Element.</param>
            <returns>
            True, if the Elements are equal.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.op_Inequality(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            Element inequality operator.
            </summary>
            <param name="left"> Left-hand Element.</param>
            <param name="right">    Right-hand Element.</param>
            <returns>
            True, if the Elements are not equal.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Parse(System.String,Aveva.Core.Database.DbElement@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create Element by parsing element name. e.g. /MYELE, or parsing PML1 expression. e.g. BOX 1
            OF /VESS1 Element names should be preceded by a '/' The expression is evaluated at the world.
            </summary>
            <param name="name"> Expression text.</param>
            <param name="ele">  [out] Matching element object.</param>
            <param name="error">    [out] Error object if no valid element found.</param>
            <returns>
            true if valid element found.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.internalParse(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Internal method.
            </summary>
            <param name="name"> Expression text.</param>
            <param name="ce">   Element at which to parse the expression.</param>
            <param name="ele">  [out] Matching element object.</param>
            <param name="error">    [out] Error object if no valid element found.</param>
            <returns>
            true if valid element found.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Parse(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create Element by parsing element name. e.g. /MYELE, or parsing PML1 expression. e.g. BOX 1
            OF /VESS1 Element names should be preceded by a '/' The expression is evaluated at the given
            current element.
            </summary>
            <param name="name"> Expression text.</param>
            <param name="ce">   Element at which to parse the expression.</param>
            <param name="ele">  [out] Matching element object.</param>
            <param name="error">    [out] Error object if no valid element found.</param>
            <returns>
            true if valid element found.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.PropagateRules(Aveva.Core.Database.DbAttribute)">
            <summary>
            Re-evaluate all rule-dependent attributes, following change to Attribute on this Element.
            </summary>
            <param name="attributeName">    Attribute that has changed.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.RefNo">
            <summary>
            Reference number pair for this Element.
            </summary>
            <returns>
            Array of two integer values.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.DbNo">
            <summary>
            Database number for the Database containing this Element.
            </summary>
            <returns>
            Integer Database number.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Release">
            <summary>
            Release claim on this Element. Method throws an exception if not allowed.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.Release(Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Release claim on this Element. Method returns Pdms exception if not allowed.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ReleaseHierarchy">
            <summary>
            Release claim on this Element and all its descendants. Method throws an exception if not
            allowed. The method will always release what it can.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.RemoveFromSecondaryList(Aveva.Core.Database.DbElement)">
            <summary>
            Remove this Element from the secondary list of another Element Method throws an exception if
            not allowed.
            </summary>
            <param name="group">    Element with secondary list.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.Boolean[])">
            <summary>
            Set Attribute on Element as an array of boolean. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as array of boolean.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.Double[])">
            <summary>
            Set Attribute on Element as an array of double. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as array of double.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbDouble[])">
            <summary>
            Set Attribute on Element as an array of DbDouble. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as array of double.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.Int32[])">
            <summary>
            Set Attribute on Element as an array of integer. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as array of integer.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.String[])">
            <summary>
            Set Attribute on Element as an array of string. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as array of string.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement)">
            <summary>
            Set Attribute on Element to reference another Element. Method throws an exception if not
            allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as Element.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.Boolean)">
            <summary>
            Set Attribute on Element as a boolean. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="value">    Value as boolean.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.DateTime)">
            <summary>
            Set Attribute on Element as a date-time. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as date-time.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbBlob)">
            <summary>
            Set Attribute on Element as a Blob. Method throws an exception if not allowed.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement[])">
            <summary>
            Set Attribute on Element as an array of Elements. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="value">    Value as array of Elements.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.Double)">
            <summary>
            Set Attribute on Element as a double. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="value">    Value as double.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbDouble)">
            <summary>
            Set Attribute on Element as a DbDouble. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="value">    Value as double.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Set Attribute on Element as an integer. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="value">    Value as integer.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Set Attribute on Element as text. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="val">  Value as text.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Geometry.Position)">
            <summary>
            Set Attribute on Element as a point. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="pos">  Value as a point.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Geometry.Direction)">
            <summary>
            Set Attribute on Element as a vector. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="dir">  Value as vector.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Geometry.Orientation)">
            <summary>
            Set Attribute on Element as a matrix. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="ori">  Value as matrix.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.ParameterList)">
            <summary>
            Set Attribute on Element as a ParameterList. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="p">    Values as ParameterList.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbExpression)">
            <summary>
            Set Attribute on Element as an Expression. Only valid for attributes for which the CATPAR
            field is true Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="exp">  Values as Expression.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Boolean[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an array of boolean. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as array of boolean.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Double[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an array of double. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as array of double.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbDouble[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an array of DbDouble. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as array of double.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Int32[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an array of integer. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as array of integer.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttributeBlobSegment(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbBlob@,System.Int32[]@,System.Int32@,System.Int32[]@,System.Int32@,System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a Blob. Method throws an exception if not allowed.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,System.String[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an array of strings. Method returns false if not allowed.
            </summary>
            <param name="attributeName">Attribute to set</param>
            <param name="val">Array of values</param>
            <param name="error">error message</param>
            <returns>Success</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbElement,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element to reference another Element. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as Element.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Boolean,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a boolean. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as boolean.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.DateTime,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a date-time. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as date-time.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbBlob,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a DbBlob. Method returns false if not allowed.
            </summary>
            <param name="attributeName">Attribute to set.</param>
            /// <param name="qualifier">Attribute qualifier.</param>
            <param name="val">Value as DbBlob.</param>
            <param name="error">[out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbElement[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an array of Elements. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as array of Elements.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Double,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a double. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as double.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbDouble,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a DbDouble. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as double.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an integer. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as integer.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as text. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as text.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,System.String[],Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as text array. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="val">  Value as text.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Geometry.Position,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a point. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="pos">  Value as a point.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Geometry.Direction,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a vector. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="dir">  Value as vector.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Geometry.Orientation,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as a matrix. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="ori">  Value as matrix.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Database.DbExpression,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set Attribute on Element as an Expression. Only valid for attributes for which the CATPAR
            field is true Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to set.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="exp">  Values as Expression.</param>
            <param name="error">    [out] Returns error if set has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttributeDefault(Aveva.Core.Database.DbAttribute)">
            <summary>
            Reset Attribute on Element to its default value. Method throws an exception if not allowed.
            </summary>
            <param name="attributeName">    Attribute to reset.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetAttributeDefault(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Reset Attribute on Element to its default value. Method returns false if not allowed.
            </summary>
            <param name="attributeName">    Attribute to reset.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="error">    [out] Returns error if reset has failed.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.SetRule(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbRule)">
            <summary>
            Attach the Rule to the given Attribute of this Element. Method throws an exception if not
            allowed.
            </summary>
            <param name="attributeName">    Attribute.</param>
            <param name="rule"> Rule to attach.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ChangeType(Aveva.Core.Database.DbElementType)">
            <summary>
            Change the type of this Element. Method throws an exception if not allowed.
            </summary>
            <param name="elementType">  New Element type.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.ToString">
            <summary>
            Get textual representation of this Element.
            </summary>
            <returns>
            Text.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.VerifyRule(Aveva.Core.Database.DbAttribute)">
            <summary>
            Verify that the value and the Rule attached to an Attribute of this Element, are consistent.
            </summary>
            <param name="attributeName">    Attribute with Rule.</param>
            <returns>
            True, if the Attribute value and Rule are consistent.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.PassObjectToCPP(System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage)">
            <summary>
            Pass object through to unmanaged C++.
            </summary>
            <param name="pos">  Position index.</param>
            <param name="message">  Associated message.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasElementChangedSince(Aveva.Core.Database.DbSession,System.Boolean@)">
            <summary>
            Query whether this Element has changed since the given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="changed">  [out] whether element has changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasElementChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,System.Boolean@)">
            <summary>
            Query whether this Element has changed between 2 given sessions.
            </summary>
            <param name="session1"> Name of first session for comparison.</param>
            <param name="session2"> Name of second session for comparison.</param>
            <param name="changed">  [out] Whether element has changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasAttributeChangedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute,System.Boolean@)">
            <summary>
            Query whether given attribute has changes since given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="attributeName">    Attribute to test.</param>
            <param name="changed">  [out] Whether element has changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasAttributeChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute,System.Boolean@)">
            <summary>
            Query whether given attribute has changed between 2 given sessions.
            </summary>
            <param name="session1"> Name of first session for comparison.</param>
            <param name="session2"> Name of second session for comparison.</param>
            <param name="attributeName">    Attribute to test.</param>
            <param name="changed">  [out] Whether element has changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasRuleChangedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute,System.Boolean@)">
            <summary>
            Query whether given rule has changed since given session.
            </summary>
            <param name="session">  session to be used for comparison.</param>
            <param name="attributeName">    Attribute for which rule is being queried.</param>
            <param name="changed">  [out] Whether element has changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasRuleChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute,System.Boolean@)">
            <summary>
            Query whether given rule has changed between 2 given sessions.
            </summary>
            <param name="session1"> first session for comparison.</param>
            <param name="session2"> second session for comparison.</param>
            <param name="attributeName">    Attribute for which rule is being queried.</param>
            <param name="changed">  [out] Whether element has changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.RuleMasters(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement[]@,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which element/attribute pairs the given attribute is dependent on.
            </summary>
            <param name="attributeName">    Attribute for which rule is being queried.</param>
            <param name="eles"> [out] List of elements on which rule depends.</param>
            <param name="atts"> [out] List of attributes on which rule depends.</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.AttributesChangedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which attributes have changed since given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="atts"> [out] List of attributes which have changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.AllAttributesChangedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which attributes have changed since given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="atts"> [out] List of attributes which have changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.AttributesChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which attributes have changed between 2 given sessions.
            </summary>
            <param name="session1"> first session for comparison.</param>
            <param name="session2"> second session for comparison.</param>
            <param name="atts"> [out] List of attributes which have changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.AllAttributesChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which attributes have changed between 2 given sessions.
            </summary>
            <param name="session1"> first session for comparison.</param>
            <param name="session2"> second session for comparison.</param>
            <param name="atts"> [out] List of attributes which have changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.RulesChangedSince(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which rules have changed since given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="atts"> [out] List of attribute for which rules have changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.RulesChangedBetween(Aveva.Core.Database.DbSession,Aveva.Core.Database.DbSession,Aveva.Core.Database.DbAttribute[]@)">
            <summary>
            Query which rules have changed between 2 given sessions.
            </summary>
            <param name="session1"> Name of first session for comparison.</param>
            <param name="session2"> Name of second session for comparison.</param>
            <param name="atts"> [out] List of rules which have changed (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasElementBeenCreatedSince(Aveva.Core.Database.DbSession,System.Boolean@)">
            <summary>
            Query whether this Element has been created since given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="created">  [out] Whether element has been created (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.HasElementBeenDeletedSince(Aveva.Core.Database.DbSession,System.Boolean@)">
            <summary>
            Query whether this Element has been deleted since given session.
            </summary>
            <param name="session">  Name of session to be used for comparison.</param>
            <param name="deleted">  [out] Whether element has been deleted (output)</param>
            <returns>
            True, if query has succeeded.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsStringArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            An array of string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDirection(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The direction.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetPosition(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The position.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetOrientation(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The orientation.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetString(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBool(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttribute(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            The attribute.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAttributeArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            An array of database attribute.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetBoolArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            An array of bool.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDouble(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            The double.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDoubleArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            An array of double.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Element type qualifier.</param>
            <returns>
            The element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier as a dBElementType.</param>
            <returns>
            An array of database element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementTypeArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            An array of database element type.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElementType(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            The element type.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetInteger(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            The integer.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetIntegerArray(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            An array of int.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            as string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsString(Aveva.Core.Database.DbAttribute,System.Int32)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <returns>
            as string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsString(Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            as string.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetElement(Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Element type qualifier.</param>
            <returns>
            The element.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetValidRefArray(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    Attribute qualifier.</param>
            <param name="attributeValue">   [in,out] Attribute value as a DbElement array.</param>
            <returns>
            true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetOrientation(Aveva.Core.Database.DbAttribute,System.Int32,Aveva.Core.Database.DbElement)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="wrt">  The wrt.</param>
            <returns>
            The orientation.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetDirection(Aveva.Core.Database.DbAttribute,System.Int32,Aveva.Core.Database.DbElement)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="wrt">  The wrt.</param>
            <returns>
            The direction.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetPosition(Aveva.Core.Database.DbAttribute,System.Int32,Aveva.Core.Database.DbElement)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <param name="wrt">  The wrt.</param>
            <returns>
            The position.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElement.GetAsString(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttribute)">
            <summary>
            Deprecated- do not use. Use method with DbQualifier instead.
            </summary>
            <param name="attributeName">    Attribute to query.</param>
            <param name="qualifier">    .</param>
            <returns>
            as string.
            </returns>
        </member>
        <member name="F:Aveva.Core.Database.DbElement.internalDbElement">
            <summary>
            Singleton factory instance.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsDatalProtectionOn">
            <summary>
            Datal Protection
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.internalIsDatalProtectionOn">
            <summary>
            Internal Datal Protection
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.Db">
            <summary>
            Get the Database associated with the Element.
            </summary>
            <value>
            Database.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.DbType">
            <summary>
            Get the Database Type associated with the Element.
            </summary>
            <value>
            Database Type.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.BindingElement">
            <summary>
            Returns a valid Distributed Attribute Binding Element if the element is a Bound Element,
            otherwise an invalid element with IsValid false.
            </summary>
            <value>
            The binding element.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsBoundElement">
            <summary>
            Returns true if the element is a valid Distributed Attribute Bound Element.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbElement is bound element, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.ElementType">
            <summary>
            Get the type of this Element as a property. Where this is a User-Defined Element Type, the
            base type is returned.
            </summary>
            <value>
            Element type, or base type.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsDeleteable">
            <summary>
            True if this Element can be deleted.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbElement is deleteable, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsDeleted">
            <summary>
            True if the Element has been deleted.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbElement is deleted, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsHierarchyDeleteable">
            <summary>
            True if the Element and all its descendants can be deleted together.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbElement is hierarchy deleteable, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsNull">
            <summary>
            True if this Element is null.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbElement is null, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.IsValid">
            <summary>
            True if this Element is valid.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbElement is valid, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.Owner">
            <summary>
            Owner Element of this Element. If none, returns a null DbElement.
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.Previous">
            <summary>
            Previous Element in order from this Element. If none, returns a null DbElement.
            </summary>
            <value>
            The previous.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbElement.Ref">
            <summary>
            Reference number pair for this Element as a property (useful if debugging)
            </summary>
            <value>
            Array of two integer values.
            </value>
        </member>
        <member name="T:Aveva.Core.Database.DbElementExtensions">
            <summary>
            Extension methods to DbElement
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.IsValidEx(Aveva.Core.Database.DbElement)">
            <summary>
            Extension method to check for the nullity and validity of an element
            </summary>
            <param name="element"></param>
            <returns>True if the instance is not null and is valid, false otherwise</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.Name(Aveva.Core.Database.DbElement)">
            <summary>
            Name from DbAttributeInstance.NAME
            </summary>
            <param name="element"></param>
            <returns>Name or null</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.FullName(Aveva.Core.Database.DbElement)">
            <summary>
            Full Name from DbAttributeInstance.FLNM
            </summary>
            <param name="element"></param>
            <returns>Full Name or null</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.IsReadOnly(Aveva.Core.Database.DbElement)">
            <summary>
            Is read-only check if element claimed, locked and has data access control
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.IsLocked(Aveva.Core.Database.DbElement)">
            <summary>
            Is locked
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.IsClaimed(Aveva.Core.Database.DbElement)">
            <summary>
            Is claimed
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.GetAttributeValue``1(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,``0,Aveva.Core.Database.DbQualifier)">
            <summary>
            Generic extension method to get attribute value with a default and an optional qualifier. Doesn't throw.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="element"></param>
            <param name="attribute"></param>
            <param name="defaultValue"></param>
            <param name="qualifier">Optional qualifier</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.GetKey(Aveva.Core.Database.DbElement)">
            <summary>
            Element Key
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.SetAttributeValue(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,System.String,System.Boolean)">
            <summary>
            Set Attribute Value from a string representation of an attribute value
            </summary>
            <param name="element"></param>
            <param name="attribute"></param>
            <param name="newValue">String representation of an attribute value</param>
            <param name="force">If set to true the method tries to update non-setable attributes as well. Needed for TMS.</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.SetDbBlobAttribute(Aveva.Core.Database.DbElement,System.String,Aveva.Core.Database.DbAttribute)">
            <summary>
            Saves file to the Dbblob attribute
            </summary>
            <param name="element"></param>
            <param name="filePath"></param>
            <param name="blobAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.GetFileFromDbBlobAttribute(Aveva.Core.Database.DbElement,System.String,Aveva.Core.Database.DbAttribute)">
            <summary>
            Retrieves the file from DbBlob attribute and saves to the prodvided directory path
            </summary>
            <param name="element"></param>
            <param name="directoryPath"></param>
            <param name="blobAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementExtensions.GetAllVisibleAttributes(Aveva.Core.Database.DbElement)">
            <summary>
            Return a collection of visible (non-hidden) attributes
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementType">
            <summary>
            The class has two purposes:
            i) Instances of the class are used to identify and pass around Element types
            ii) The class can be used to get meta data about an attribute. e.g. type, size, Name, pseudo or not, etc
            Return meta data about an element type, e,g. allowed members, name, Primary or not, etc.
            The class is valid for system types and UDETS.
            Object instances are created for all system element types. These instances are in DbElementTypeInstance class
            All methods that pass an Element Type should pass a DbElemenType object rather than a string that represents the attribute
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.AscendantTypes">
            <summary>
            Return list of possible ascendant Element types.
            </summary>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.DerivedTypes">
            <summary>
            Return list of possible derived Element types (UDETs)
            </summary>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.SystemAttributes">
            <summary>
            Return system attributes and UDAs on this Element type.
            </summary>
            <returns>Array of Attributes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.DisplayAttributes">
            <returns>Array of Attributes to Display</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.VisibleSystemAttributes">
            <summary>
            Return visible system attributes and UDAs on this Element type.
            </summary>
            <returns>Array of Attributes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.CompareTo(System.Object)">
            <summary>
            Compare Element type with a generic object.
            </summary>
            <param name="obj">Object to compare with</param>
            <returns>0, if object is "equal"; -1, if object is "less than"; 1, if object is "greater than"</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.DescendantTypes">
            <summary>
            Return list of possible descendant types.
            </summary>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.Equals(System.Object)">
            <summary>
            Test for equality with a generic object.
            </summary>
            <param name="type">Object to test</param>
            <returns>True, if object is equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetBool(Aveva.Core.Database.DbNounField)">
            <summary>
            Get boolean metadata for Element type.
            </summary>
            <param name="field">Field</param>
            <returns>Boolean value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetHashCode">
            <summary>
            Get unique integer identifier for Element type.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetInteger(Aveva.Core.Database.DbNounField)">
            <summary>
            Get integer metadata for Element type
            </summary>
            <param name="field">Field</param>
            <returns>Integer value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetValidInteger(Aveva.Core.Database.DbNounField,System.Int32@)">
            <summary>
            Get integer metadata for Element type
            </summary>
            <param name="field">Field</param>
            <param name="intVal">Integer value, where return value is True</param>
            <returns>True, if Field is valid; False, if Field is not valid</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetIntegerArray(Aveva.Core.Database.DbNounField)">
            <summary>
            Get integer array metadata for the given noun field.
            </summary>
            <param name="field">Noun field</param>
            <returns>Integer array value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetIntegerArray(Aveva.Core.Database.DbNounField,System.Int32[]@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get integer array metadata for the given noun field.
            </summary>
            <param name="field">Noun field</param>
            <param name="result">Int[] for Noun Field</param>
            <param name="message">Error message</param>
            <returns>Bool indicating success</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetString(Aveva.Core.Database.DbNounField)">
            <summary>
            Get string metadata for Element type.
            </summary>
            <param name="field">Field</param>
            <returns>Text value</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetElementTypeArray(Aveva.Core.Database.DbNounField)">
            <summary>
            Get array of Element types metadata for Element type.
            </summary>
            <param name="field">Field</param>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.IsAttributeValid(Aveva.Core.Database.DbAttribute)">
            <summary>
            Check whether a given attribute is valid for this Element type.
            </summary>
            <param name="attname">Attribute to check</param>
            <returns>True, if the Attribute is valid</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.BoundTypes">
            <summary>
            Return list of allowed Bound attribute member types for Elements of this type.
            </summary>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.BoundTypeMaxCardinality(Aveva.Core.Database.DbElementType)">
            <summary>
            Return the number of maximum allowed Bound attributes of a specific type for Elements of this type.
            </summary>
            <returns>count</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.MemberTypes">
            <summary>
            Return list of allowed member types for Elements of this type.
            </summary>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.ReferenceTypes(Aveva.Core.Database.DbAttribute)">
            <summary>
            Return list of allowed reference types for Attribute, given this Element type.
            </summary>
            <param name="attname">Attribute to query</param>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.DatabaseTypes">
            <summary>
            Return list of database types which can contain Elements of this type.
            </summary>
            <remarks>Should this method return DbType[]?</remarks>
            <returns>Array of Database types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.op_Equality(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbElementType)">
            <summary>
            Element type equality operator.
            </summary>
            <param name="left">Left-hand Element type</param>
            <param name="right">Right-hand Element type</param>
            <returns>True, if Element types are equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.op_Inequality(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbElementType)">
            <summary>
            Element type inequality operator.
            </summary>
            <param name="left">Left-hand Element type</param>
            <param name="right">Right-hand Element type</param>
            <returns>True, if Element types are not equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetElementType(System.Int32)">
            <summary>
            Finds a DbElemenType from hash value
            </summary>
            <param name="hash">Hash code for new Element Type</param>
            <returns>Element Type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetElementType(System.String)">
            <summary>
            Finds a DbElemenType from name. If udet name, then include colon.
            </summary>
            <param name="name">Name for new Element Type</param>
            <returns>Element Type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetElementType(Aveva.Core.Database.DbElement)">
            <summary>
            Finds a DbElemenType from udet definition object
            </summary>
            <param name="definition">definition element in dictionary DB</param>
            <returns>Element Type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetDefinitionElement">
            <summary>
            Return udet definition element in dictionary DB
            If none, returns a null DbElement.
            </summary>
            <returns>Definition Element </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.OwnerTypes">
            <summary>
            Return list of allowed owner types for Elements of this type.
            </summary>
            <returns>Array of Element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.internalGetElementType(System.Int32)">
            <summary>
            Internal method to create and return a new Element type
            </summary>
            <param name="hash">Hash code of new Element type</param>
            <returns>Element type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.internalGetElementType(System.String)">
            <summary>
            Internal method to create and return new Element type
            </summary>
            <param name="name">Name of new Element type</param>
            <returns>Element type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.internalGetElementType(Aveva.Core.Database.DbElement)">
            <summary>
            Internal method to create and return new Element type from dictionary definition
            </summary>
            <param name="definition">Definition element to use</param>
            <returns>Element type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.PassObjectToCPP(System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage)">
            <summary>
            Pass object through to unmanaged C++.  AVEVA USE ONLY.
            </summary>
            <param name="pos">Position index</param>
            <param name="message">Associated message</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.getUDAs">
            <summary>
            Get all UDAs for this Element type.
            </summary>
            <returns>Array of Attributes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAllUdas">
            <summary>
            Get all UDAs for this Element type.
            </summary>
            <returns>Array of Attributes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.getProperties">
            <summary>
            Get all Properties for this Element type.
            </summary>
            <returns>Array of Attributes</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAllProperties">
            <summary>
            Get all Properties for this Element type.
            </summary>
            <returns>Array of Attributes</returns>
        </member>
        <member name="F:Aveva.Core.Database.DbElementType.internalDbElementType">
            <summary>
            Singleton factory instance
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.NounFieldType(Aveva.Core.Database.DbNounField)">
            <summary>
            The type of a noun field
            </summary>
            <param name="field">A noun field</param>
            <returns>The type of the noun field</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.internalNounFieldType(Aveva.Core.Database.DbNounField)">
            <summary>
            Protected method.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAllElementTypes">
            <summary>
            List of all system element types
            </summary>
            <returns>An array of all element types</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.internalGetAllElementTypes">
            <summary>
            Protected method.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAllUdets">
            <summary>
            List of all Udets
            </summary>
            <returns>An array of all UDETs</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.internalGetAllUdets">
            <summary>
            Protected method.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.IsUDET">
            <summary>
            Return if a UDET or not
            </summary>
            <returns>True if a UDET</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsStringArray(Aveva.Core.Database.DbNounField)">
            <summary>
            Gets the value of any field as an array of strings; note this may be of length 0
            </summary>
            <param name="field">Noun field</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsStringArray(Aveva.Core.Database.DbNounSpecialField,System.Int32,System.String)">
            <summary>
            Gets the value of any field as an array of strings; note this may be of length 0
            </summary>
            <param name="field">Noun field</param>
            <param name="dbrestriction">Database type number</param>
            <param name="itemseparator">Item separator text</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounField)">
            <summary>
            Gets the value of any field as a string
            </summary>
            <param name="field">DbNounField value to get</param>
            <returns>Noun fields as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounField,System.String)">
            <summary>
            Gets the value of any field as a string using arrayseparator
            </summary>
            <param name="field">DbNounField value to get</param>
            <param name="arrayseparator ">Text to separate array</param>
            <returns>Noun fields as a string</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounField,System.Int32)">
            <summary>
            Gets the value of any field as a string
            </summary>
            <param name="field"></param>
            <param name="arrayindex"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounSpecialField)">
            <summary>
            Gets the value of any field as a string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounSpecialField,System.String)">
            <summary>
            Gets the value of any special field as a string
            </summary>
            <param name="field">DbNounSpecialField to get value of</param>
            <param name="arrayseparator">arrayseparator text</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounSpecialField,System.Int32)">
            <summary>
            Gets the value of any field as a string
            </summary>
            <param name="field">DbNounSpecialField to get value of</param>
            <param name="arrayindex">Position in array field</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounSpecialField,System.String,System.Int32,System.String)">
            <summary>
            Gets the value of any field as a string
            </summary>
            <param name="field">DbNounSpecialField</param>
            <param name="arrayseparator">arrayseparator text</param>
            <param name="dbrestriction">Database type number</param>
            <param name="itemseparator">Item separator text</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.GetAsString(Aveva.Core.Database.DbNounSpecialField,System.Int32,System.Int32,System.String)">
            <summary>
            Gets the value of any field as a string
            </summary>
            <param name="field">DbNounSpecialField to get value of</param>
            <param name="arrayindex">Position in array</param>
            <param name="dbrestriction"></param>
            <param name="itemseparator"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementType.SupportsDbType(Aveva.Core.Database.DbType)">
            <summary>
            Checks to see whether the element type supports the specified database type specified.
            </summary>
            <param name="dbType">The DbType to check. <seealso cref="T:Aveva.Core.Database.DbType"/></param>
            <returns>True - DbType is supported; otherwise false.</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.HardType">
            <summary>
            Return hard type- This will be different if a UDET
            or if a Dabacon 'soft-type' was used in the definition.
            Otherwise it will return this
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.BaseType">
            <summary>
            Return Base type. This will be different for UDETs.
            Otherwise it will return this
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.Description">
            <summary>
            Description for this Element type
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.IsPrimary">
            <summary>
            True, if this Element type is primary
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.IsPrimaryList">
            <summary>
            True, if this Element type has a primary list
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.IsPseudo">
            <summary>
            True, if this Element type is pseudo
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.IsValid">
            <summary>
            True, if this Element type is valid
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.IsWorld">
            <summary>
            True, if this Element type is a World type
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.Name">
            <summary>
            Name of this Element type
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.ShortName">
            <summary>
            Short name of this Element type
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.ValidConnections">
            <summary>
            1 or 2, if this Element type has valid connections
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.Visible">
            <summary>
            True, if this Element type is visible
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementType.IsSynonym">
            <summary>
            True if Element type is a synonym.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypeComparer">
            <summary>
            Class to define comparers for ordering lists of ElementTypes.
            These allow lists of element types to be sorted on the value of any field.
            At present, only an alphabetic sort on field values expressed as strings is implemented,
             although it would be possible to extend this to sort on numerical values. However, as
             most integers actually represent hash values or enumerations, this may be less useful than
             it at first sounds!
            Also, later it might be nice to be able to specify the culture for the comparison, since
             this can make a difference (e.g. Swedes sort v and w together!). To avoid differences
             between installations, we now (DUN272, 24/08/09) specify a en-GB sort, but in the
             future a CultureInfo could (optionally) be given on constructor and stored in another
             array parallel to fields_ and reverse_.
            </summary>	
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeComparer.#ctor(Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Create a new ElementType comparer
            </summary>
            <param name="field">The field to use for comparison</param>
            <param name="reversed">Whether to reverse comparison.
             If false (or omitted) comparison is 'less than', so sort order will be ascending.
             If true, comparison will be 'greater than' and sort order will be descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeComparer.#ctor(Aveva.Core.Database.DbNounField)">
            <summary>
            Create a new ElementType comparer
            </summary>
            <param name="field">The field to use for comparison</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeComparer.AddSubKey(Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Add a further sub-key to an existing ElementType comparer
             The sub-key will be used to discriminate ElementTypes if (and only if) all previously defined
             sub-keys have returned identical values for the two ElementTypes being compared
            </summary>
            <param name="field">The field to be used for discriminating comparisons</param>
            <param name="reversed">Whether to reverse comparison.
             If false (or omitted) comparison is 'less than', so sort order will be ascending.
             If true, comparison will be 'greater than' and sort order will be descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeComparer.AddSubKey(Aveva.Core.Database.DbNounField)">
            <summary>
            Add a further sub-key to an existing ElementType comparer
             The sub-key will be used to discriminate ElementTypes if (and only if) all previously defined
             sub-keys have returned identical values for the two ElementTypes being compared
            </summary>
            <param name="field">The field to be used for discriminating comparisons</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compare two DbElementTypes using one or more field values
            </summary>
            <param name="x">First DbElementType</param>
            <param name="y">Second DbElementType</param>
            <returns>Integer result of the comparison:
             -1 = Second DbElementType is 'before' the first
              0 = the DbElementTypes are equal on all defined keys
              1 = Second DbElementType is 'after' the first
             NB: The terms 'before' and 'after' are used here as it is possible to specify that any
              given key is to be reversed, and thus 'less than' or 'greater than' could be confusing!</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypeList">
            <summary>
            Class to define a list of DbElementTypes; usually for documentation purposes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeList.list_">
            <summary>
            This is the actual list, which is private. An ArrayList is used to that new items can be
             added or existing items removed efficiently
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeList.include_synonyms_">
            <summary>
            Whether to include synonyms in all AddAll/RemoveAll operations.
            This is a private field; there is a public property Include_Synonym to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeList.include_invisible_">
            <summary>
            Whether to include hidden (field VISI = false) element types in all AddAll/RemoveAll operations
            This is a private field; there is a public property Include_Invisible to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeList.include_udets_">
            <summary>
            Whether to include UDETs in all AddAll/RemoveAll operations
            This is a private field; there is a public property Include_UDETs to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeList.include_system_">
            <summary>
            Whether to include system elements in all AddAll/RemoveAll operations
            This is a private field; there is a public property Include_System to access it
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations
            Does not affect Add or Remove operations
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.Add(Aveva.Core.Database.DbElementType)">
            <summary>
            Add a specific DbElementType
            NB: The Include_UDA and Include_System properties may be used to specify whether or not
            UDETs/System element types are included in 'all'
            </summary>
            <param name="att">The DbElementType to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.Add(Aveva.Core.Database.DbElementTypeList)">
            <summary>
            Append an existing DbElementTypeList
            </summary>
            <param name="addlist">DbElementTypeList to be appended</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll">
            <summary>
            Add all DbElementTypes to the DbElementTypeList
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given logical field
            </summary>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbNounField,System.Boolean,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given logical field
            </summary>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbElementTypeList,Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given logical field
            </summary>
            <param name="domain">The list of candidate element types</param>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbElementTypeList,Aveva.Core.Database.DbNounField,System.Boolean,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given logical field
            </summary>
            <param name="domain">The list of candidate element types</param>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbNounField,System.Int32)">
            <summary>
            Add all DbElementTypes with a specified value of a given integer field
             NB: Also works for integer array fields; a DbElementType is added if any array element
                  matches the required value
            </summary>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbNounField,System.Int32,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given integer field
             NB: Also works for integer array fields; a DbElementType is added if any array element
                  matches the required value
            </summary>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbElementTypeList,Aveva.Core.Database.DbNounField,System.Int32)">
            <summary>
            Add all DbElementTypes with a specified value of a given integer field
             NB: Also works for integer array fields; a DbElementType is added if any array element
                  matches the required value
            </summary>
            <param name="domain">The list of candidate element types</param>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbElementTypeList,Aveva.Core.Database.DbNounField,System.Int32,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given integer field
             NB: Also works for integer array fields; a DbElementType is added if any array element
                  matches the required value
            </summary>
            <param name="domain">The list of candidate element types</param>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbNounField,System.String)">
            <summary>
            Add all DbElementTypes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
            </summary>	
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbNounField,System.String,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
            </summary>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbElementTypeList,Aveva.Core.Database.DbNounField,System.String)">
            <summary>
             Add all DbElementTypes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
            </summary>
            <param name="domain">The list of candidate element types</param>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.AddAll(Aveva.Core.Database.DbElementTypeList,Aveva.Core.Database.DbNounField,System.String,System.Boolean)">
            <summary>
            Add all DbElementTypes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
            </summary>
            <param name="domain">The list of candidate element types</param>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
            <param name="match">Whether attributes matching the value are to be added</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.Remove(Aveva.Core.Database.DbElementType)">
            <summary>
            Remove all instances of a specific DbElementType from the DbElementTypeList
            </summary>
            <param name="noun">The DbElementType to be removed</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.Remove(Aveva.Core.Database.DbElementTypeList)">
            <summary>
            Remove all instances of DbElementTypes in an existing DbElementTypeList
            </summary>
            <param name="remlist">DbElementTypeList to be removed</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.RemoveAll">
            <summary>
            Remove all DbElementTypes from the DbElementTypeList
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.RemoveAll(Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Remove all DbElementTypes with a specified value of a given logical field
            </summary>
            <param name="field">The logical field</param>
            <param name="boolvalue">The required value of the logical field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.RemoveAll(Aveva.Core.Database.DbNounField,System.Int32)">
            <summary>
            Remove all DbElementTypes with a specified value of a given integer field
             NB: Also works for integer array fields; an attribute is removed if any array element
                  matches the required value
            </summary>
            <param name="field">The integer field</param>
            <param name="intvalue">The required value of the integer field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.RemoveAll(Aveva.Core.Database.DbNounField,System.String)">
            <summary>
            Remove all DbElementTypes with a specified value of a given text field
             NB: This may be used for ANY field; the GetAsString value being used for comparison
            </summary>
            <param name="field">The field</param>
            <param name="strvalue">The required value of the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.Count">
            <summary>
            Returns the number of element types currently in the DbElementTypeList
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.SortList(Aveva.Core.Database.DbNounField)">
            <summary>
            Sort DbElementTypeList on a single field
            </summary>
            <param name="field">Field to use as sort key</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.SortList(Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Sort DbElementTypeList on a single field
            </summary>
            <param name="field">Field to use as sort key</param>
            <param name="reversed">Reverse sort order; ie false for ascending, true for descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.SortList(Aveva.Core.Database.DbNounField,Aveva.Core.Database.DbNounField)">
            <summary>
            Sort DbElementTypeList on a field, using a second field to determine order when values of first are equal
            </summary>
            <param name="field">Field to use as primary sort key</param>
            <param name="second_field">Field to use as secondary sort key</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.SortList(Aveva.Core.Database.DbNounField,System.Boolean,Aveva.Core.Database.DbNounField,System.Boolean)">
            <summary>
            Sort DbElementTypeList on a field, using a second field to determine order when values of first are equal
            </summary>
            <param name="field">Field to use as primary sort key</param>
            <param name="reversed">Reverse sort order on primary key; ie false for ascending, true for descending</param>
            <param name="second_field">Field to use as secondary sort key</param>
            <param name="second_reversed">Reverse sort order on secondary key; ie false for ascending, true for descending</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.SortList(Aveva.Core.Database.DbElementTypeComparer)">
            <summary>
            Sort DbElementTypeList on a predefined DbElementTypeComparer: this allows for more complex sorts with subkeys
            </summary>
            <param name="sorter">DbElementTypeComparer defining one or more sorting keys</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.MaximumFieldWidth(Aveva.Core.Database.DbNounField)">
            <summary>
            Returns the maximum width of a field over a DbElementTypeList (useful when setting column widths)
            </summary>
            <param name="field">A field</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.MaximumFieldWidth(Aveva.Core.Database.DbNounField,Aveva.Core.Database.DbFieldFormat)">
            <summary>
            Returns the maximum width of a formatted field over a DbElementTypeList (useful when setting column widths)
            </summary>
            <param name="field">A field</param>
            <param name="format">A field format</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.MaximumFieldWidth(Aveva.Core.Database.DbNounSpecialField)">
            <summary>
            Returns the maximum width of a special field over a DbElementTypeList (useful when setting column widths)
            </summary>
            <param name="field">A special field</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeList.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeList.Include_Synonyms">
            <summary>
            Whether to include synonyms in all AddAll and RemoveAll operations (default FALSE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeList.Include_Invisible">
            <summary>
            Whether to include invisible DbElementTypes in all AddAll and RemoveAll operations (default FALSE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeList.Include_UDETs">
            <summary>
            Whether to include user defined DbElementTypes in all AddAll and RemoveAll operations (default FALSE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeList.Include_System">
            <summary>
            Whether to include user defined DbElementTypes in all AddAll and RemoveAll operations (default FALSE)
            NB: The setting does *not* modify the existing list - it is used as a filter on all
             *subsequent* AddAll and RemoveAll operations. The setting does not apply to Add or Remove
             operations.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypeListEnum">
            <summary>
            Enumerator for the DbElementTypeList class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeListEnum.list_">
            <summary>
            Internal list
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeListEnum.#ctor(System.Collections.ArrayList)">
            <summary>
            Constructor
            </summary>
            <param name="mylist">Element type list</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeListEnum.Reset">
            <summary>
            Reset enumerator
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeListEnum.MoveNext">
            <summary>
            Move to next enumerator item
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListEnum.Current">
            <summary>
            Current enumerator item
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypeFormat">
            <summary>
            Class to define an object for formatting a DbElementType definition for output
             ie what fields are to displayed, what intervening text etc
            Generally, a DbElementTypeFormat will be used by a DbElementTypeListFormat, which defines
             how a whole list of DbElementTypes is formatted
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounField)">
            <summary>
            Add a field to the format
            </summary>
            <param name="field">A field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounField,System.Int32)">
            <summary>
            Add a field to the format, specifying the minimum width
            </summary>
            <param name="field">A field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounField,Aveva.Core.Database.DbFieldFormat)">
            <summary>
            Add a field to the format, specifying the field format
            </summary>
            <param name="field">A field</param>
            <param name="fieldformat">Format for the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounField,Aveva.Core.Database.DbFieldFormat,System.Int32)">
            <summary>
            Add a field to the format, specifying the field format and minimum width
            </summary>
            <param name="field">A field</param>
            <param name="fieldformat">Format for the field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounSpecialField)">
            <summary>
            Add a special field to the format
            </summary>
            <param name="field">A special field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounSpecialField,System.Int32)">
            <summary>
            Add a special field to the format, specifying the minimum width
            </summary>
            <param name="field">A special field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounSpecialField,Aveva.Core.Database.DbFieldFormat)">
            <summary>
            Add a special field to the format, specifying the field format
            </summary>
            <param name="field">A special field</param>
            <param name="fieldformat">Format for the field</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(Aveva.Core.Database.DbNounSpecialField,Aveva.Core.Database.DbFieldFormat,System.Int32)">
            <summary>
            Add a special field to the format, specifying the field format and minimum width
            </summary>
            <param name="field">A special field</param>
            <param name="fieldformat">Format for the field</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(System.String)">
            <summary>
            Add literal text to the format; this may include special characters such as tab or newline
            </summary>
            <param name="mystring">Text to be added to format</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(System.String,System.Int32)">
            <summary>
            Add literal text to the format, specifying the minimum width
            </summary>
            <param name="mystring">Text to be added to format</param>
            <param name="width">The minimum width of the column</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.AddItem(System.Int32)">
            <summary>
            Add sufficient spaces to bring the result string up to the specified number of characters
             NB: It is inadvisable to mix using this feature with adding special characters such as
                  newline or tab, since these will count as one character
            </summary>
            <param name="tab">The number of characters</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeFormat.Format(Aveva.Core.Database.DbElementType)">
            <summary>
            Return a string representing the DbElementType in the defined format
            </summary>
            <param name="noun">DbElementType to be formatted</param>
            <returns>DbElementType definition formatted in format defined</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeFormat.DbRestriction">
            <summary>
            Gets or sets the db type; if set will restrict owners/members etc to that db (0 for no restriction)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeFormat.DefaultArraySeparator">
            <summary>
            Gets or sets the default array_separator_;
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeFormat.DefaultItemSeparator">
            <summary>
            Gets or sets the default item_separator_;
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypeListFormat">
            <summary>
            Class to define an object to format a list of DbElementTypes. Each individual DbElementType is formatted
             by the DbElementTypeFormat specified, and other aspects of the overall presentation (line breaks etc)
             are controlled by other properties of the DbElementTypeListFormat
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeListFormat.#ctor(Aveva.Core.Database.DbElementTypeFormat)">
            <summary>
            Create a new DbElementTypeListFormat. Each individual DbElementType is formatted by the specified
             DbElementTypeFormat, and a new line is added after each
            </summary>
            <param name="nounformat">The DbElementTypeFormat to use for each individual DbElementType</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeListFormat.#ctor(Aveva.Core.Database.DbElementTypeFormat,System.String)">
            <summary>
            Create a new DbElementTypeListFormat. Each individual DbElementType is formatted by the specified
             DbElementTypeFormat, and the specified text is added after each
            </summary>
            <param name="nounformat">The DbElementTypeFormat to use for each individual DbElementType</param>
            <param name="text_after_noun">The text to be added after each individual DbElementType</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypeListFormat.Format(Aveva.Core.Database.DbElementTypeList)">
            <summary>
            Formats a DbElementTypeList in the style specified
            </summary>
            <param name="mylist">The DbElementTypeList to be formatted</param>
            <returns>A string representing the DbElementTypeList in the required format</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.ElementTypeFormat">
            <summary>
            Gets or sets the DbElementTypeFormat to be used for each individual DbElementType
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.SplitField">
            <summary>
            Gets or sets a field to use as the split value; whenever the value of this field changes between
             one DbElementType and the next, the 'TextBeforeSplitFieldName', the new value of the field (optional),
             and the 'TextAfterSplitFieldName' are inserted into the output
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.TextAtStart">
            <summary>
            Gets or sets the text to be inserted at the start of the formatted output (e.g. a header)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.TextBeforeElementType">
            <summary>
            Gets or sets the text to be inserted before each individual DbElementType
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.TextAfterElementType">
            <summary>
            Gets or sets the text to be inserted after each individual DbElementType (e.g. a new line character)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.TextBeforeSplitFieldName">
            <summary>
            Gets or sets the text to be inserted before the field value whenever the value of the specified
             field changes between one DbElementType and the next. This is not used if the SplitField has not
             been set. Note that this text is still output even if 'IncludeSplitFieldName' is false so that
             the actual split field value itself is not.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.TextAfterSplitFieldName">
            <summary>
            Gets or sets the text to be inserted after the field value whenever the value of the specified
             field changes between one DbElementType and the next. This is not used if the SplitField has not
             been set. Note that this text is still output even if 'IncludeSplitFieldName' is false so that
             the actual split field value itself is not.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.IncludeSplitFieldName">
            <summary>
            Gets or sets whether or not the new value of the SplitField will be output whenever this changes
             between one DbElementType and the next. This is not used if the SplitField has not been set. If true,
             the new value of the field is output between the 'TextBeforeSplitFieldName' and 'TextAfterSplitFieldName'
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.BreakCount">
            <summary>
            Gets or sets the number of DbElementTypes to be output before the BreakText is inserted. This allows,
             for example, a number of DbElementTypes to be output on the same line, or a blank line to be inserted
             after every 'n' DbElementTypes to aid readability. Note that the counter is reset by a SplitField.
            A value of 0 indicates that no such breaks are required.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.BreakText">
            <summary>
            Gets or sets the text to be output after ever BreakCount lines within a section, e.g. a new line (if
             putting several DbElementTypes on the same line) or an additional new line (if adding a blank line after
             every 'n' attributes).
            This is not used if BreakCount is set to 0 (the default).
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypeListFormat.TextAtEnd">
            <summary>
            Gets or sets the text to be output after the final DbElementType in the list
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypesSelection">
            <summary>
            Class holds a element types selection representation. The class can be defined from an int array attribute, 
            where the ints represents type definition elements, i.e. Nouns, Udets and Udtgs
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.#ctor(System.Int32[])">
            <summary>
            Constructor
            </summary>
            <param name="list">int[]</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.#ctor(System.Collections.ICollection)">
            <summary>
            Constructor
            </summary>
            <param name="list">ICollection</param>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.Add(Aveva.Core.Database.DbElementType[])">
            <summary>
            Add array
            </summary>
            <param name="elementTypes">DbElementType[]</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.Add(Aveva.Core.Database.DbElementType)">
            <summary>
            Add single item
            </summary>
            <param name="elementType">DbElementType</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.Add(Aveva.Core.Database.DbUserDefinedTypesSelection)">
            <summary>
            Add User-defined type
            </summary>
            <param name="typeSelection">DbUserDefinedTypesSelection</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.Remove(Aveva.Core.Database.DbElementType[])">
            <summary>
            Remove array
            </summary>
            <param name="elementTypes">DbElementType[]</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.Remove(Aveva.Core.Database.DbElementType)">
            <summary>
            Remove single item
            </summary>
            <param name="elementType">DbElementType</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.Remove(Aveva.Core.Database.DbUserDefinedTypesSelection)">
            <summary>
            Remove User-defined type
            </summary>
            <param name="typeSelection">DbUserDefinedTypesSelection</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbElementTypesSelection.AsIntArray">
            <summary>
            Return Array of Integers
            </summary>
            <returns>int[]</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypesSelection.isEmpty">
            <summary>
            IsEmpty property
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypesSelection.ElementTypes">
            <summary>
            ElementTypes Property
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbElementTypesSelection.ElementTypeSelections">
            <summary>
            User-defined types Property
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbUserDefinedTypesSelection">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.CompareTo(System.Object)">
            <summary>
            Compare Attribute with generic object.
            </summary>
            <param name="obj">Object to compare with</param>
            <returns>int</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.GetAllUserDefinedTypesSelection">
            <summary>
            
            </summary>
            <returns>DbUserDefinedTypesSelection[]</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.GetUserDefinedTypesSelection(System.Int32)">
            <summary>
            
            </summary>
            <param name="ukey"></param>
            <returns>DbUserDefinedTypesSelection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.GetUserDefinedTypesSelection(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns>DbUserDefinedTypesSelection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.GetUserDefinedTypesSelection(Aveva.Core.Database.DbElement)">
            <summary>
            
            </summary>
            <param name="ele"></param>
            <returns>DbUserDefinedTypesSelection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.PassObjectToCPP(System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage)">
            <summary>
            Pass object through to unmanaged C++.  AVEVA USE ONLY.
            </summary>
            <param name="pos">Position index</param>
            <param name="message">Associated message</param>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.internalGetAllUserDefinedTypesSelection">
            <summary>
            
            </summary>
            <returns>DbUserDefinedTypesSelection[]</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.internalGetUserDefinedTypesSelection(System.Int32)">
            <summary>
            
            </summary>
            <param name="ukey"></param>
            <returns>DbUserDefinedTypesSelection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.internalGetUserDefinedTypesSelection(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns>DbUserDefinedTypesSelection</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypesSelection.internalGetUserDefinedTypesSelection(Aveva.Core.Database.DbElement)">
            <summary>
            
            </summary>
            <param name="ele"></param>
            <returns>DbUserDefinedTypesSelection</returns>
        </member>
        <member name="F:Aveva.Core.Database.DbUserDefinedTypesSelection.internalDbUserDefinedTypesSelection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypesSelection.Name">
            <summary>
            Name Property
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypesSelection.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypesSelection.UKEY">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypesSelection.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypesSelection.Element">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypesSelection.Definitions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbUserDefinedTypeEle">
            <summary>
            Lightweight wrapper object representing UDTELE
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUserDefinedTypeEle.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypeEle.Types">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUserDefinedTypeEle.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents">
            <summary>
            This class contains the mechanisms for subscribing to database events:
            It covers project open, mdb open, mdb close, savework, getwork, undo, redo, flush, refresh, drop
            plus capturing general database changes.
            It does not cover legality checkers for operations on elements.
            The delegates are organised by type of operation rather than specific ones for each operation
            e.g. there is a single callback to cover all operations (undo, redo, getwork, quit) that changes the user's current viewed data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._preDBFileChanges">
            <summary>
            List of pre event delegates to capture changes made to the database file
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postDBFileChanges">
            <summary>
            List of post event delegates to capture changes made to the database file
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._dbFileChangesAllowed">
            <summary>
            delegate to check if operation is allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postDBFileFailedAction">
            <summary>
            Delegates to capture failure at savework
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._preLocalChanges">
            <summary>
            pre event delegates to capture changes made to user's current view.
            due to  getwork, undo, redo, quit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postLocalChanges">
            <summary>
            post event delegates to capture changes made to user's current view.
            due to  getwork, undo, redo, quit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postRelease">
            <summary>
            delegates to capture claims
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postClaim">
            <summary>
            delegates to capture releases
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._commitPending">
            <summary>
            Delegates to call to commit any pending database changes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._handleUserChanges">
            <summary>
            Delegates to capture all database changes during a user's session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postHandleUserChanges">
            <summary>
            Delegates for post user changes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._clearCaches">
            <summary>
            Delegates to clear any cached changes when switching DB session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._udaRebuild">
            <summary>
            Delegates to signify that incore UDA values have been rebuilt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._postMdbOpen">
            <summary>
            subscribers for post MDB open event
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents._preMdbClose">
            <summary>
            subscribers for pre MDB close event
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddDBFileChangingEventHandler(Aveva.Core.Database.DbEvents.ChangeEventHandler)">
            <summary>
            Add pre event delegate to capture changes made to the database file.
            Operations are Savework, Flush, Refresh, or drop
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddDBFileChangedEventHandler(Aveva.Core.Database.DbEvents.ChangeEventHandler)">
            <summary>
            Add post event delegate to capture changes made to the database file.
            Operations are Savework, Flush, Refresh, or drop
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddDBFileChangesAllowed(Aveva.Core.Database.DbEvents.BoolChangeEventHandler)">
            <summary>
            Add delegate to check if operation is allowed
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddFailedEventHandler(Aveva.Core.Database.DbEvents.FailureEventHandler)">
            <summary>
            Add delegate to capture failures at savework
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddClearCacheEventHandler(Aveva.Core.Database.DbEvents.SimpleEventHandler)">
            <summary>
            Add delegate to clear any cached data.
            This will be called after doing a temporary switch to a different session in a DB,
            or after doing a getwork, undo, redo, quit.
            N.B. ClearCache may be called 1000s of times within a single operation.
            Thus any handlers must be fast.
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddLocalChangingEventHandler(Aveva.Core.Database.DbEvents.ChangeEventHandler)">
            <summary>
            Add pre event delegate to capture changes made to user's current view.
            Operations are getwork, undo, redo, quit
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddLocalChangedEventHandler(Aveva.Core.Database.DbEvents.ChangeEventHandler)">
            <summary>
            Add post event delegate to capture changes made to user's current view.
            Operations are getwork, undo, redo, quit
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddCommitPendingEventHandler(Aveva.Core.Database.DbEvents.CommitEventHandler)">
            <summary>
            Add delegate to commit any pending DB changes prior to
            savework, setmark, undo, redo, quit, getwork
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddReleasedEventHandler(Aveva.Core.Database.DbEvents.ClaimEventHandler)">
            <summary>
            Add delegate to capture release (unclaim) actions
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddClaimedEventHandler(Aveva.Core.Database.DbEvents.ClaimEventHandler)">
            <summary>
            Add delegate to capture claim actions
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddHandleUserChanges(Aveva.Core.Database.DbEvents.UserChangesEventHandler)">
            <summary>
            Add delegate to capture all database changes made by user.
            For performance reasons, this event is only raised when focus is returned to the end user.
            e.g. at the end of running a PML macro, or after hitting the 'Apply' button.
            Internally a list of changes is built up. This list is then passed to the subscribers.
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddPostHandleUserChanges(Aveva.Core.Database.DbEvents.PostUserChangesEventHandler)">
            <summary>
            Add delegate for post user changes raised after all user changes have been processed
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddUdaRebuildHandler(Aveva.Core.Database.DbEvents.SimpleEventHandler)">
            <summary>
            Add delegate to check for invalid UDA, UDET objects after the 
            internal uda/udet values have been rebuilt
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddMdbOpenedEventHandler(Aveva.Core.Database.DbEvents.SimpleEventHandler)">
            <summary>
            Add subscriber for post MDB open event 
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.AddMdbClosingEventHandler(Aveva.Core.Database.DbEvents.SimpleEventHandler)">
            <summary>
            Add subscriber for pre MDB close event 
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.RemoveHandleUserChanges(Aveva.Core.Database.DbEvents.UserChangesEventHandler)">
            <summary>
            Remove delegate to capture all database changes made by user.
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.RemovePostHandleUserChanges(Aveva.Core.Database.DbEvents.UserChangesEventHandler)">
            <summary>
            Remove delegate for post user changes.
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="M:Aveva.Core.Database.DbEvents.RemoveLocalChangedEventHandler(Aveva.Core.Database.DbEvents.ChangeEventHandler)">
            <summary>
            Remove post event delegate to capture changes made to user's current view.
            Operations are getwork, undo, redo, quit
            </summary>
            <param name="h">Application provided handler</param>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.operation">
            <summary>
            List of potential database operations.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_savework">
            <summary>
            Savework to DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_flush">
            <summary>
            Flush to parent extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_refresh">
            <summary>
            Refresh changes from parent extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_drop">
            <summary>
            Drop changes made in extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_getwork">
            <summary>
            Getwork changes made on DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_undo">
            <summary>
            Undo database changes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_redo">
            <summary>
            Redo database changes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_quit">
            <summary>
            Quit database changes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbEvents.operation.op_setmark">
            <summary>
            Set undo mark
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.ChangeEventHandler">
            <summary>
            Delegate taking a DbRawChanges object plus operation type
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.BoolChangeEventHandler">
            <summary>
            Delegate taking a DbRawChanges object, operation type and returning true if allowed
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.ClaimEventHandler">
            <summary>
            Delegate taking a list of elements
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.SimpleEventHandler">
            <summary>
            Delegate with no arguments
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.CommitEventHandler">
            <summary>
            Delegate taking operation only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.UserChangesEventHandler">
            <summary>
            Delegate taking a DbUserChanges object
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.PostUserChangesEventHandler">
            <summary>
            Delegate for post user changes
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEvents.FailureEventHandler">
            <summary>
            Delegate taking a DbRawChanges object, a list of errors plus operation attempted
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbExpression">
            <summary>
            Representation of an Database (PML1) Expression.
            Methods to evaluate an expression are on DbElement
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.Clone">
            <summary>
            Create and returns a copy of the Expression.
            </summary>
            <returns>Expression copy</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.CreateExpression(System.Int32[])">
            <summary>
            Create expression from internal integer array format
            </summary>
            <param name="listNet"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Direction@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Position@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Orientation@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Orientation)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Direction)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Position)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.Equals(System.Object)">
            <summary>
            Compare two expressions
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.op_Equality(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbExpression)">
            <summary>
            Expression equality operator
            </summary>
            <param name="left">Left-hand Expression</param>
            <param name="right">Right-hand Expression</param>
            <returns>True, if the Expressions are equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.op_Inequality(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbExpression)">
            <summary>
            Expression inequality operator
            </summary>
            <param name="left">Left-hand Expression</param>
            <param name="right">Right-hand Expression</param>
            <returns>True, if the Expressions are not equal</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.GetHashCode">
            <summary>
            Returns hash code for Expression.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.GetStack">
            <summary>
            Get internal integer array format from the Expression.
            </summary>
            <returns>Internal stack as array of integer</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalCreateExpression(System.Int32[])">
             <summary>
            
             </summary>
             <param name="listNet"></param>
             <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalParse(System.String)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.Parse(System.String)">
            <summary>
            Deprecated method
            </summary>
            <param name="name">Expression text</param>
            <returns>Expression</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalParse(System.String,Aveva.Core.Database.DbExpression@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create Expression by parsing expression text.
            The text may be any PML1 expression. e.g. (XLEN + 10)
            </summary>
            <param name="name">Expression text</param>
            <param name="exp">Expression object</param>
            <param name="error">Error object if invalid expression entered</param>
            <returns>true if valid expression</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.Parse(System.String,Aveva.Core.Database.DbExpression@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create Expression by parsing expression text.
            The text may be any PML1 expression. e.g. (XLEN + 10)
            </summary>
            <param name="name">Expression text</param>
            <param name="exp">Expression object</param>
            <param name="error">Error object if invalid expression entered</param>
            <returns>true if valid expression</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.ToString">
            <summary>
            Gets textual representation of Expression.
            </summary>
            <returns>Text</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.GetError">
             <summary>
            
             </summary>
             <returns>An error for this expression</returns>
        </member>
        <member name="F:Aveva.Core.Database.DbExpression.internalExpression">
            <summary>
            Singleton factory instance
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Direction@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Position@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Orientation@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteGetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement[]@)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Orientation)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Direction)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Geometry.Position)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Boolean[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Int32[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.Double[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,System.String[])">
            <summary></summary>
        </member>
        <member name="M:Aveva.Core.Database.DbExpression.internalExecuteSetterPMLFunction(System.String,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement[])">
            <summary></summary>
        </member>
        <member name="P:Aveva.Core.Database.DbExpression.Type">
            <summary>
            Get Expression Type.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbGetWorkChangesEventArgs">
            <summary>
            Deprecated - do not use
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbGetWorkChangesEventArgs.#ctor(Aveva.Core.Database.Db,Aveva.Core.Database.DbRawChanges,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="db">Database</param>
            <param name="changeList">Raw change list</param>
            <param name="previousSession">Previous session number</param>
            <param name="newSession">New session number</param>
        </member>
        <member name="P:Aveva.Core.Database.DbGetWorkChangesEventArgs.ChangeList">
            <summary>
            Raw change list
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbGetWorkChangesEventArgs.DB">
            <summary>
            Database
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbGetWorkChangesEventArgs.NewSessionNumber">
            <summary>
            New session number
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbGetWorkChangesEventArgs.PreviousSessionNumber">
            <summary>
            Previous session number
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks">
            <summary>
            Class to registry legality checkers- For AVEVA use only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbLegalityChecks.internalAbstractClass">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddCreateElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.CreateDelegate)">
            <summary>
            Add Delegate to test if creation of element is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddCreateElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.CreateDelegate)">
            <summary>
            Internal method to Add Delegate to test if creation of element is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddDeleteElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.DeleteDelegate)">
            <summary>
            Add Delegate to test if deletion of element of specified type is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddDeleteElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.DeleteDelegate)">
            <summary>
            Internal method to test if deletion of element of specified type is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddMoveElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.MoveDelegate)">
            <summary>
            Add Delegate to test if Move(INCLUDE) of element of specified type is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddMoveElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.MoveDelegate)">
            <summary>
            Internal method to Add Delegate to test if Move(INCLUDE) of element of specified type is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddCopyElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.CopyDelegate)">
            <summary>
            Add Delegate to test if Copy of element of specified type is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddCopyElementAllowed(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbLegalityChecks.CopyDelegate)">
            <summary>
            Internal method to Add Delegate to test if Copy of element of specified type is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddIntAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.IntAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified int attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddIntAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.IntAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified int attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddIntArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.IntArrayAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified int array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddIntArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.IntArrayAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified int array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddDoubleAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.DoubleAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified real attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddDoubleAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.DoubleAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified real attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddDoubleArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.DoubleArrayAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified real array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddDoubleArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.DoubleArrayAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified real array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddBoolAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.BoolAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified boolean attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddBoolAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.BoolAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified boolean attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddStringAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.StringAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified string attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddStringAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.StringAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified string attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddStringArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.StringArrayAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified string array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddStringArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.StringArrayAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified string array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddRefAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.RefAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified ref attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddRefAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.RefAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified ref attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.AddRefArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.RefArrayAttributeDelegate)">
            <summary>
            Add Delegate to test if setting of specified ref array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbLegalityChecks.internalAddRefArrayAttributeAllowed(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbLegalityChecks.RefArrayAttributeDelegate)">
            <summary>
            Internal method to Add Delegate to test if setting of specified ref array attribute is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.CreateDelegate">
            <summary>
            Delegate to test if creation of element is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.DeleteDelegate">
            <summary>
            Delegate to test if deletion of element is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.MoveDelegate">
            <summary>
            Delegate to test if element may be moved is allowed- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.CopyDelegate">
            <summary>
            Delegate to test if creation of element may be copied- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.IntAttributeDelegate">
            <summary>
            Delegate to test if int attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.IntArrayAttributeDelegate">
            <summary>
            Delegate to test if int array attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.DoubleAttributeDelegate">
            <summary>
            Delegate to test if real attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.DoubleArrayAttributeDelegate">
            <summary>
            Delegate to test if real array attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.StringAttributeDelegate">
            <summary>
            Delegate to test if string attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.StringArrayAttributeDelegate">
            <summary>
            Delegate to test if string array attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.BoolAttributeDelegate">
            <summary>
            Delegate to test if bool attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.RefAttributeDelegate">
            <summary>
            Delegate to test if ref attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbLegalityChecks.RefArrayAttributeDelegate">
            <summary>
            Delegate to test if ref array attribute may be set- For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange">
            <summary>
             Class to add delegates to do follow up data integrity actions.
             FOR USE BY AVEVA ONLY
             This class should only be used to ensure the data integrity of the database.
             To capture general database changes it is much more efficient to use the classes in DbEvents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbPostElementChange.internalAbstractClass">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPostCreateElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCreateDelegate)">
            <summary>
             Add Delegate to do follow up action on creating element of specific type- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPostCreateElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCreateDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddCopyBegin(Aveva.Core.Database.DbPostElementChange.CopyBeginDelegate)">
            <summary>
             Add Delegate to do notify of copy begin - For AVEVA use only
             *NOTE* ideally the application should not need to know that it's in a copy- a copy should 
             just use the create and attribute modification events. So only use this event if absolutely necessary      
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddCopyBegin(Aveva.Core.Database.DbPostElementChange.CopyBeginDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddCopyEnd(Aveva.Core.Database.DbPostElementChange.CopyEndDelegate)">
            <summary>
             Add Delegate to do notify of copy end - For AVEVA use only
             *NOTE* ideally the application should not need to know that it's in a copy- a copy should 
             just use the create and attribute modification events. So only use this event if absolutely necessary      
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddCopyEnd(Aveva.Core.Database.DbPostElementChange.CopyEndDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPostCopyElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCopyDelegate)">
            <summary>
             Add Delegate to do follow up action on copying element of specific type - For AVEVA use only
             DEPRECATED- DO NOT USE FURTHER
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPostCopyElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCopyDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPreDeleteElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
             Add Delegate to do pre action on deleting element of specific type- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPreDeleteElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPreDeleteElement(Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
             Add Delegate to do pre action on any element deletion- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPreDeleteElement(Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPostMoveElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostMoveDelegate)">
            <summary>
             Add Delegate to do post action on moving element(i.e. INCLUDE) of given type - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPostMoveElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostMoveDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPostAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostAttributeChangeDelegate)">
            <summary>
             Add Delegate to do post action on setting specified attribute - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPostAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostAttributeChangeDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPostRefAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefAttributeChangeDelegate)">
            <summary>
             Add Delegate to do post action on setting specified ref attribute - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPostRefAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefAttributeChangeDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.AddPostRefListAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefListAttributeChangeDelegate)">
            <summary>
             Add Delegate to do post action on setting specified ref array attribute - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalAddPostRefListAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefListAttributeChangeDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePostCreateElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCreateDelegate)">
            <summary>
            Remove delegate for Create action
            </summary>
            <param name="plug">PostCreateDelegate</param>
            <param name="type">Element Type</param>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePostCreateElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCreateDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemoveCopyBegin(Aveva.Core.Database.DbPostElementChange.CopyBeginDelegate)">
            <summary>
             Remove Delegate for action on copying element of specific type - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemoveCopyBegin(Aveva.Core.Database.DbPostElementChange.CopyBeginDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemoveCopyEnd(Aveva.Core.Database.DbPostElementChange.CopyEndDelegate)">
            <summary>
             Remove Delegate for action on copying element of specific type - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemoveCopyEnd(Aveva.Core.Database.DbPostElementChange.CopyEndDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePostCopyElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCopyDelegate)">
            <summary>
             Remove Delegate for action on copying element of specific type - For AVEVA use only
             DEPRECATED      
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePostCopyElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostCopyDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePreDeleteElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
             Remove Delegate for deleting element of specific type- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePreDeleteElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePreDeleteElement(Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
             Remove Delegate for pre action on any element deletion- For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePreDeleteElement(Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePostMoveElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostMoveDelegate)">
            <summary>
             Remove Delegate for post action on moving element(i.e. INCLUDE) of given type - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePostMoveElement(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPostElementChange.PostMoveDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePostAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostAttributeChangeDelegate)">
            <summary>
             Remove Delegate for post action on setting specified attribute - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePostAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostAttributeChangeDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePostRefAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefAttributeChangeDelegate)">
            <summary>
             Remove Delegate for post action on setting specified ref attribute - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePostRefAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefAttributeChangeDelegate)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.RemovePostRefListAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefListAttributeChangeDelegate)">
            <summary>
             Remove Delegate for post action on setting specified ref array attribute - For AVEVA use only
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPostElementChange.internalRemovePostRefListAttributeChange(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPostElementChange.PostRefListAttributeChangeDelegate)">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PostCreateDelegate">
            <summary>
             Delegate to do follow up action on element creation - For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PostCopyDelegate">
            <summary>
             Delegate to do follow up action on element copy - For AVEVA use only; DEPRECATED- DO NOT USE FURTHER
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.CopyBeginDelegate">
            <summary>
             Delegate to notify of copy begin - For AVEVA use only
             *NOTE* ideally the application should not need to know that it's in a copy- a copy should 
             just use the create and attribute modification events. So only use this event if absolutely necessary
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.CopyEndDelegate">
            <summary>
             Delegate to notify of copy begin - For AVEVA use only
             *NOTE* ideally the application should not need to know that it's in a copy- a copy should 
             just use the create and attribute modification events. So only use this event if absolutely necessary
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PreDeleteDelegate">
            <summary>
             Delegate to do pre action on element deletion - For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PostMoveDelegate">
            <summary>
             Delegate to do follow up action on element move (i.e. INCLUDE operation) - For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PostAttributeChangeDelegate">
            <summary>
             Delegate to do follow up action on setting attribute - For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PostRefAttributeChangeDelegate">
            <summary>
             Delegate to do follow up action on setting ref attribute - For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPostElementChange.PostRefListAttributeChangeDelegate">
            <summary>
             Delegate to do follow up action on setting ref array attribute - For AVEVA use only
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute">
            <summary>
            Class allows pseudo attribute code to be plugged in. This includes pseudo code for UDAs.
            There are different methods to plug in the pseudo attribute code depending on the attribute type.
            It is possible to overwrite the getting and setting of pseudo attributes.
            There are no specific pluggers to set POS, ORI, DIR array attributes, however code to set POS, ORI, DIR attributes
            can be written using the double array pluggers.
            User's may only plug code for UADs. The plugging of pseudo attribute code for system attributes is FOR AVEVA USE ONLY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbPseudoAttribute.internalAbstractClass">
            <summary>Protected instance.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetIntAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetIntDelegate)">
            <summary>
             Plug pseudo attribute code for getting integer attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetIntAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetIntDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetIntAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetIntDelegate)">
            <summary>
             Plug pseudo attribute code for getting integer attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetIntAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetIntDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetIntAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetIntDelegate)">
            <summary>
             Plug pseudo attribute code for setting integer attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetIntAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetIntDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetIntArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetIntArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting integer array attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetIntArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetIntArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetIntArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetIntArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting integer array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetIntArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetIntArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetIntArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetIntArrayDelegate)">
            <summary>
             Plug pseudo attribute code for setting integer attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetIntArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetIntArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetDoubleAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetDoubleDelegate)">
            <summary>
             Plug pseudo attribute code for getting real attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetDoubleAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetDoubleDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetDoubleAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetDoubleDelegate)">
            <summary>
             Plug pseudo attribute code for getting real attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetDoubleAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetDoubleDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetDoubleAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetDoubleDelegate)">
            <summary>
             Plug pseudo attribute code for setting real attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetDoubleAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetDoubleDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetDoubleArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetDoubleArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting real array attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetDoubleArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetDoubleArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetDoubleArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetDoubleArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting real array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetDoubleArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetDoubleArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetDoubleArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetDoubleArrayDelegate)">
            <summary>
             Plug pseudo attribute code for setting real array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetDoubleArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetDoubleArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetBoolAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetBoolDelegate)">
            <summary>
             Plug pseudo attribute code for getting boolean attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetBoolAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetBoolDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetBoolAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetBoolDelegate)">
            <summary>
             Plug pseudo attribute code for getting boolean attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetBoolAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetBoolDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetBoolAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetBoolDelegate)">
            <summary>
             Plug pseudo attribute code for setting boolean attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetBoolAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetBoolDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetStringAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetStringDelegate)">
            <summary>
             Plug pseudo attribute code for getting string attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetStringAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetStringDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetStringAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetStringDelegate)">
            <summary>
             Plug pseudo attribute code for getting string attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetStringAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetStringDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetStringAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringDelegate)">
            <summary>
             Plug pseudo attribute code for setting string attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetStringAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetStringQualAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringQualDelegate)">
            <summary>
             Plug pseudo attribute code for setting string attribute including usage of db qualifier. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetStringQualAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringQualDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetStringArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetStringArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting string array attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetStringArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetStringArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetStringArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetStringArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting string array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetStringArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetStringArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetStringArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringArrayDelegate)">
            <summary>
             Plug pseudo attribute code for setting srtring array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetStringArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetStringArrayQualAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringArrayQualDelegate)">
            <summary>
             Plug pseudo attribute code for setting string array attribute including usage of db qualifier. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetStringArrayQualAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetStringArrayQualDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetRefAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetRefDelegate)">
            <summary>
             Plug pseudo attribute code for getting ref attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetRefAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetRefDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetRefAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetRefDelegate)">
            <summary>
             Plug pseudo attribute code for getting ref attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetRefAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetRefDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetRefAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetRefDelegate)">
            <summary>
             Plug pseudo attribute code for setting ref attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetRefAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetRefDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetRefArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetRefArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting ref array attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetRefArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetRefArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetRefArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetRefArrayDelegate)">
            <summary>
             Plug pseudo attribute code for getting ref array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetRefArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetRefArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetRefArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetRefArrayDelegate)">
            <summary>
             Plug pseudo attribute code for setting ref array attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetRefArrayAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetRefArrayDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetPositionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetPositionDelegate)">
            <summary>
             Plug pseudo attribute code for getting position attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetPositionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetPositionDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetPositionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetPositionDelegate)">
            <summary>
             Plug pseudo attribute code for getting Position attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetPositionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetPositionDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetPositionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetPositionDelegate)">
            <summary>
             Plug pseudo attribute code for setting position attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetPositionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetPositionDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetDirectionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetDirectionDelegate)">
            <summary>
             Plug pseudo attribute code for getting direction attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetDirectionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetDirectionDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetDirectionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetDirectionDelegate)">
            <summary>
             Plug pseudo attribute code for getting Direction attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetDirectionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetDirectionDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetDirectionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetDirectionDelegate)">
            <summary>
             Plug pseudo attribute code for setting direction attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetDirectionAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetDirectionDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetOrientationAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetOrientationDelegate)">
            <summary>
             Plug pseudo attribute code for getting Orientation attribute.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetOrientationAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPseudoAttribute.GetOrientationDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddGetOrientationAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetOrientationDelegate)">
            <summary>
             Plug pseudo attribute code for getting Orientation attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddGetOrientationAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.GetOrientationDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.AddSetOrientationAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetOrientationDelegate)">
            <summary>
             Plug pseudo attribute code for setting position attribute. Plugging is done by element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalAddSetOrientationAttribute(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbPseudoAttribute.SetOrientationDelegate)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.RemoveGetDelegate(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>
            Remove get value method on attribute and element type.
            </summary>
            <param name="att">Attribute</param>
            <param name="type">Element Type</param>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalRemoveGetDelegate(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.RemoveGetDelegate(Aveva.Core.Database.DbAttribute)">
            <summary>
            Remove get value method on attribute.
            </summary>
            <param name="att">Attribute</param>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalRemoveGetDelegate(Aveva.Core.Database.DbAttribute)">
            <summary>Protected method.</summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.RemoveSetDelegate(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>
            Remove set value method on attribute and element type.
            </summary>
            <param name="att">Attribute</param>
            <param name="type">Element Type</param>
        </member>
        <member name="M:Aveva.Core.Database.DbPseudoAttribute.InternalRemoveSetDelegate(Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElementType)">
            <summary>Protected method.</summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetIntDelegate">
            <summary>
            Delegate to use for writing integer  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetIntArrayDelegate">
            <summary>
            Delegate to use for writing integer array  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetDoubleDelegate">
            <summary>
            Delegate to use for writing real  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetDoubleArrayDelegate">
            <summary>
            Delegate to use for writing real array  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetStringDelegate">
            <summary>
            Delegate to use for writing string  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetStringArrayDelegate">
            <summary>
            Delegate to use for writing string array pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetBoolDelegate">
            <summary>
            Delegate to use for writing boolean  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetRefDelegate">
            <summary>
            Delegate to use for writing ref  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetRefArrayDelegate">
            <summary>
            Delegate to use for writing ref array  pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetPositionDelegate">
            <summary>
            Delegate to use for writing position pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetDirectionDelegate">
            <summary>
            Delegate to use for writing direction pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.GetOrientationDelegate">
            <summary>
            Delegate to use for writing orientation pseudo attribute 'get' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetIntDelegate">
            <summary>
            Delegate to use for writing integer  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetIntArrayDelegate">
            <summary>
            Delegate to use for writing integer array  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetDoubleDelegate">
            <summary>
            Delegate to use for writing real  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetDoubleArrayDelegate">
            <summary>
            Delegate to use for writing real array  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetStringDelegate">
            <summary>
            Delegate to use for writing string  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetStringQualDelegate">
            <summary>
            Delegate to use for writing string  pseudo attribute 'set' method including the usage of db qualifier.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetStringArrayDelegate">
            <summary>
            Delegate to use for writing string  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetStringArrayQualDelegate">
            <summary>
            Delegate to use for writing string array pseudo attribute 'set' method including the usage of db qualifier.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetBoolDelegate">
            <summary>
            Delegate to use for writing boolean  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetRefDelegate">
            <summary>
            Delegate to use for writing ref  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetRefArrayDelegate">
            <summary>
            Delegate to use for writing ref array  pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetPositionDelegate">
            <summary>
            Delegate to use for writing position pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetDirectionDelegate">
            <summary>
            Delegate to use for writing direction pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPseudoAttribute.SetOrientationDelegate">
            <summary>
            Delegate to use for writing direction pseudo attribute 'set' method.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbQualifier">
            <summary>
            Summary description for DbQualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(System.Double)">
            <summary>
            add numeric qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.intQualifier">
            <summary>
            1st numeric qualifier as an int. If none returns 0.
            </summary>
            <returns> 1st numeric qualifier else 0 </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(System.Boolean)">
            <summary>
            add boolean qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(System.String)">
            <summary>
            add string qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(Aveva.Core.Database.DbElement)">
            <summary>
            add element qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(Aveva.Core.Database.DbAttribute)">
            <summary>
            add attribute qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(Aveva.Core.Database.DbElementType)">
            <summary>
            add element type qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(Aveva.Core.Geometry.Position)">
            <summary>
            add Position qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(Aveva.Core.Geometry.Direction)">
            <summary>
            add Direction qualifier.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbQualifier.Add(Aveva.Core.Geometry.Orientation)">
            <summary>
            add Orientation qualifier.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.doubleQualifiers">
            <summary>
            numeric qualifiers.
            </summary>
            <returns> List of numeric qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.boolQualifiers">
            <summary>
            boolean qualifiers.
            </summary>
            <returns> List of boolean qualifiers</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.stringQualifiers">
            <summary>
            string qualifiers.
            </summary>
            <returns> List of string qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.elementQualifiers">
            <summary>
            element qualifiers.
            </summary>
            <returns> List of element qualifiers  </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.attributeQualifiers">
            <summary>
            Attribute qualifiers.
            </summary>
            <returns> List of Attribute qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.nounQualifiers">
            <summary>
            Element Type qualifiers.
            </summary>
            <returns> List of Element Type qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.positionQualifiers">
            <summary>
            position qualifiers.
            </summary>
            <returns> List of position qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.directionQualifiers">
            <summary>
            direction qualifiers.
            </summary>
            <returns> List of direction qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.orientationQualifiers">
            <summary>
            orientation qualifiers.
            </summary>
            <returns> List of orientation qualifiers </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbQualifier.wrtQualifier">
            <summary>
            wrt (with respect to) qualifier.
            </summary>
            <returns> wrt (with respect to) qualifier </returns>
        </member>
        <member name="T:Aveva.Core.Database.DbRawChanges">
            <summary>
            Representation of Raw Dabacon Changes.
            An instance of this class is passed back for certain events such as savework.
            In general it is better to handle changes in the 'post action', other than deletions
            which are best handled in the 'pre action'
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.isDeleted(Aveva.Core.Database.DbElement)">
            <summary>
            Tests if element has been deleted.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.isModified(Aveva.Core.Database.DbElement)">
            <summary>
            Tests if element has been modified.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.isChangedType(Aveva.Core.Database.DbElement)">
            <summary>
            Tests if element has changed type.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.isTopLevelCreate(Aveva.Core.Database.DbElement)">
            <summary>
            Tests if element has been created.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.isTopLevelDelete(Aveva.Core.Database.DbElement)">
            <summary>
            Tests if a 'top level' deletion.
            e.g. if you delete an equipment then the equipment is 'top level' but the owned
            primitives are not.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.NextCreation">
            <summary>
            Get next element created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.NextDeletion">
            <summary>
            get next element deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.NextModification">
            <summary>
            get next element modified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.NextChangedType">
            <summary>
            get next element with changed type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRawChanges.Reset">
            <summary>
            Reset the methods 'NextCreation', 'NextDeletion', 'NextNodification'
            back to the first element in each corresponding list.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbRule">
            <summary>
            Representation of a Rule.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbRule.Clone">
            <summary>
            Creates and returns a copy of the Rule.
            </summary>
            <returns>Rule copy</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRule.CreateDbRule(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbRuleStatus,Aveva.Core.Database.DbExpressionType)">
            <summary>
            Create rule
            </summary>
            <param name="expression"></param>
            <param name="status"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRule.Equals(System.Object)">
            <summary>
            Test for equality of two rules
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRule.GetHashCode">
            <summary>
            Get hash code for Rule, overriding Object.GetHashCode.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRule.internalCreateDbRule(Aveva.Core.Database.DbExpression,Aveva.Core.Database.DbRuleStatus,Aveva.Core.Database.DbExpressionType)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="status"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbRule.ToString">
            <summary>
            Gets textual representation of Rule.
            </summary>
            <returns>Text</returns>
        </member>
        <member name="F:Aveva.Core.Database.DbRule.internalDbRule">
            <summary>
            Singleton factory instance
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbRule.RuleExpression">
            <summary>
            Expression associated with Rule
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbRule.Status">
            <summary>
            Status of Rule
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbRule.Type">
            <summary>
            Expression Type of Rule
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.InvalidSession">
            <summary>
            Invalid Session exception
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.InvalidSession.ssnum">
            <summary>
            Session number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.InvalidSession.exnum">
            <summary>
            Extract number
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.InvalidSession.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="a">Session number</param>
            <param name="b">Extract number</param>
        </member>
        <member name="M:Aveva.Core.Database.InvalidSession.ToString">
            <summary>
            Exception as text
            </summary>
            <returns>String value</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbSession">
            <summary>
            Class to return details about a particular Dabacon session.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbSession.ToString">
            <summary>
            Session as text
            </summary>
            <returns>String value</returns>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.Date">
            <summary>
            Date of session
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.CalculatedLocalDateTime">
            <summary>
            True if the Session Date is Saved in UTC
            (If True - can convert from a local date to a UTC date)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.Description">
            <summary>
            Description of session
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.Extract">
            <summary>
            Extract number
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.IsValid">
            <summary>
            Is this session object valid
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.PreviousSession">
            <summary>
            Previous session
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.Primary">
            <summary>
            Is the session primary
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.SessionNumber">
            <summary>
            Session number
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.User">
            <summary>
            User that created the session
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.Reason">
            <summary>
            Reason that session was created
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSession.Database">
            <summary>
            Relevant database
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbUndoChangesEventArgs">
            <summary>
            Deprecated - do not use
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUndoChangesEventArgs.#ctor(Aveva.Core.Database.DbRawChanges,System.Int32)">
            <summary>
            
            </summary>
            <param name="changeList"></param>
            <param name="markNumer"></param>
        </member>
        <member name="P:Aveva.Core.Database.DbUndoChangesEventArgs.ChangeList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbUndoChangesEventArgs.MarkNumber">
            <summary>
            
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbUserChanges">
            <summary>
            Representation of User Changes list
            Instances will be passed
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.GetCreations">
            <summary>
            Get list of elements created. This only includes 'top level' creations.
            e.g. if you create a site and everything below it, just the site will be returned.
            </summary>
            <returns>Array of elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.GetDeletions">
            <summary>
            Get list of elements deleted. This only includes 'top level' creations.
            e.g. if you delete a site and everything below it, just the site will be returned.
            </summary>
            <returns>Array of elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.GetMemberChanges">
            <summary>
            Return the list of elements whose member list has changed
            </summary>
            <returns>Array of elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.GetModified">
            <summary>
            Return the list of elements which have been modified
            </summary>
            <returns>Array of elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.GetMoved">
            <summary>
            Return the list of elements which have been moved (INCLUDE command)
            in the database hierarchy
            </summary>
            <returns>Array of elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.GetReordered">
            <summary>
            Return the list of elements which have been reordered (REORDER command)
            in the parent element's member list
            </summary>
            <returns>Array of elements</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.IsAttributeModified(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute)">
            <summary>
            Test if a specific attribute was modified on an element
            </summary>
            <param name="element">Element to test</param>
            <param name="attributeName">Attribute to test</param>
            <returns>True, if element's attribute is modified</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbUserChanges.IsAttributeModified(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbQualifier)">
            <summary>
            Test if a specific attribute with case was modified on an element
            </summary>
            <param name="element">Element to test</param>
            <param name="attributeName">Attribute to test</param>
            <param name="qualifier">Qualifier with string set with case name to test</param>
            <returns>True, if element's attribute is modified</returns>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeDependency">
            <summary>
            This is an abstract type to plug GetDependencies delegate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeDependency.internalAbstractClass">
            <summary>
            Internal abstract instance of calling class
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeDependency.AddAttributeDependency(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttributeDependency.DbAttributeDependencyDelegate)">
            <summary>
            Add Delegate to get dependencies 
            </summary>
            <param name="type"></param>
            <param name="att"></param>
            <param name="plug"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbAttributeDependency.internalGetDependencies(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbAttributeDependency.DbAttributeDependencyDelegate)">
            <summary>
            Call delegate 
            </summary>
            <param name="type"></param>
            <param name="att"></param>
            <param name="plug"></param>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeDependency.DbAttributeDependencyDelegate">
            <summary>
            Return the list of Attributes on which the given attribute is dependent on
            </summary>
            <param name="element"></param>
            <param name="attributeName"></param>
            <param name="dList"></param>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeInstance">
            <summary>
             List of definitions for predefined Attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AALLAN">
            <summary>
            Arrive Ppoint allowed angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AANGXZ">
            <summary>
            Angle of attached SCTN in XZ plane of joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AANGYZ">
            <summary>
            Angle of attached SCTN in YZ plane of joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ABLE">
            <summary>
            Minimum abbreviation length for a UDA/UDET user defined name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ABOP">
            <summary>
            Bottom of arrive pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ABOR">
            <summary>
            Arrive bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ABRE">
            <summary>
            Abbreviation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACBO">
            <summary>
            Actual bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACBTEX">
            <summary>
            AutoCAD annotation text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACBTYP">
            <summary>
            AutoCAD annotation type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCDIR">
            <summary>
            Access Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCEDB">
            <summary>
            DB access
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCELE">
            <summary>
            Elevations of Referenced Levels
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCIDE">
            <summary>
            Accident level radiation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCLEV">
            <summary>
            Access Heights for Stairwell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCREF">
            <summary>
            Reference to Access element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACCTYP">
            <summary>
            Access type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACDATE">
            <summary>
            Date last modified in AutoCAD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACDMTX">
            <summary>
            AutoCAD dimension text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACDSTY">
            <summary>
            AutoCAD Dimension style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACDTYP">
            <summary>
            AutoCAD dimension type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACDWT">
            <summary>
            AutoCAD drawing template name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACEXPO">
            <summary>
            AutoCAD export flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACLASS">
            <summary>
            Access Control Attribute class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACLAYE">
            <summary>
            AutoCAD layer name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACLIST">
            <summary>
            Arriving cables to attached point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACLOCK">
            <summary>
            AutoCAD picture lock
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACNAME">
            <summary>
            AutoCAD name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACON">
            <summary>
            Arrive connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACORRO">
            <summary>
            Arrive corrosion allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACPICT">
            <summary>
            Everything3D DRAW picture
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACPLTX">
            <summary>
            AutoCAD projection line text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACPO">
            <summary>
            Access port reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACPTYP">
            <summary>
            AutoCAD projection line type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACRF">
            <summary>
            ACR reference attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACRGRP">
            <summary>
            List of ACRs within a ACRSET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACRLI">
            <summary>
            Access Control User assigned ACRs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACRMES">
            <summary>
            Access Control User defined message
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACSCAL">
            <summary>
            AutoCAD picture scale factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACSTYF">
            <summary>
            Annotation change style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTANG">
            <summary>
            Actual angle of a bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTIV">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTL">
            <summary>
            Actual length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTNCU">
            <summary>
            Actual number of cuts of a bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTRAD">
            <summary>
            Actual radius of a bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTTYP">
            <summary>
            Type of element, truncating non UDETs to 4 or 6 characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTXRF">
            <summary>
            Annotation Context Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADDSEG">
            <summary>
            Auto creating segments flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADEFRF">
            <summary>
            Reference to master ASSDEF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADEG">
            <summary>
            Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADEN">
            <summary>
            Addition factor (unit definition)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADES">
            <summary>
            Design parameters of attached element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADIR">
            <summary>
            Arrive direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADMLOC">
            <summary>
            Currently administered location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADPRFA">
            <summary>
            ADP reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADUUID">
            <summary>
            UUID to ensure Project uniqueness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AELRFA">
            <summary>
            Boundary components for the PipePiece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AEXCES">
            <summary>
            Arrive excess for leave tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGATYI">
            <summary>
            Auto Grid Annotation Type Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGATYP">
            <summary>
            Auto Grid Annotation Type (ByVStyle, Local, ViewFrame)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDCLI">
            <summary>
            Auto Grid Annotation Closed Dimensions Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDCLO">
            <summary>
            Auto Grid Annotation Closed Dimensions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDMST">
            <summary>
            Auto Grid Annotation Dimension style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDOFF">
            <summary>
            Auto Grid Annotation Dimension Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDOFR">
            <summary>
            Auto Grid Annotation Dimension Offset real
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDOOF">
            <summary>
            Auto Grid Annotation Overall Dimension Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDOOR">
            <summary>
            Auto Grid Annotation Overall Dimension Offset real
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDOVI">
            <summary>
            Auto Grid Annotation Overall Dimensions Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDOVR">
            <summary>
            Auto Grid Annotation Overall Dimensions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDVRT">
            <summary>
            Auto Grid Annotation Vertical Dimensions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGDVTI">
            <summary>
            Auto Grid Annotation Vertical Dimensions Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGLEST">
            <summary>
            Auto Grid Annotation Elevation Label style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGLETM">
            <summary>
            Auto Grid Annotation Elevation Label Template Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGLFST">
            <summary>
            Auto Grid Annotation Face Label style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGLFTM">
            <summary>
            Auto Grid Annotation Face Label Template Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGLOFF">
            <summary>
            Auto Grid Annotation Label offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGLOFR">
            <summary>
            Auto Grid Annotation Label offset real
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGMODE">
            <summary>
            Auto Grid Annotation Mode (ByVStyle, Off, Labels, Dimensions, All)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGMODI">
            <summary>
            Auto Grid Annotation Mode Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGRD">
            <summary>
            Arrive Ppoint gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGSIDE">
            <summary>
            Auto Grid Annotation Sides
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AGSIDI">
            <summary>
            Auto Grid Annotation Sides Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AHLIST">
            <summary>
            List of actual types in owning hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AIRCHA">
            <summary>
            Air Change Rate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AIRT">
            <summary>
            Air tight control method
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AKEY">
            <summary>
            Attribute key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AKYL">
            <summary>
            Attribute-keylist (for Radial dimensions)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALCODE">
            <summary>
            Alarm code array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALEN">
            <summary>
            Comparator NUMBER OF WORDS USED FOR AN ATTRIBUTE ARRAY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALENG">
            <summary>
            Arrive length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALIGN">
            <summary>
            Vertical alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALIST">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALLANG">
            <summary>
            Connection allowable rotational angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALLELE">
            <summary>
            All elements in the MDB of a particular type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALLO">
            <summary>
            Allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALTDEF">
            <summary>
            Alternative Def
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALWDEL">
            <summary>
            To allow the admin user to determine if tags can be deleted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AMAPNM">
            <summary>
            Local Name of Proxy actual member
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AMEMRF">
            <summary>
            Reference to a design model object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AMPMPN">
            <summary>
            Local Name of Proxy in Association
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGFR">
            <summary>
            Angle between assembly and frame plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGL">
            <summary>
            Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGLSP">
            <summary>
            ANGLE Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGSEG">
            <summary>
            Angle segment (start,end)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGSPA">
            <summary>
            Springback angle at 20 degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGSPB">
            <summary>
            Springback angle at 120 degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANGWL">
            <summary>
            Angle between assembly and water-line plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANPJ">
            <summary>
            Attached neutral point of joint (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANPS">
            <summary>
            Attached neutral point of section (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANSTYP">
            <summary>
            Type of answer NONE, REAL, WORD, TEXT or BOOL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANSW">
            <summary>
            Answer, when a real is expected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANTY">
            <summary>
            Analysis type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ANYCHA">
            <summary>
            True if chamfer is defined on any edge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AOBJS">
            <summary>
            Reference Array of all Model currently participating in ASSOCs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AOD">
            <summary>
            Arrive Ppoint outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APAR">
            <summary>
            Attached catalogue parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APARMS">
            <summary>
            All parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APDT">
            <summary>
            Date of approval
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APOF">
            <summary>
            Leaderline attachment point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APOFTX">
            <summary>
            Leaderline attachment point text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APOS">
            <summary>
            Arrive position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APOSE">
            <summary>
            Easting of arrive position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APOSN">
            <summary>
            Northing of arrive position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APOSU">
            <summary>
            Upping of arrive position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APPL">
            <summary>
            Application
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APPR">
            <summary>
            Approver
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APRO">
            <summary>
            Spot value of property A
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.APTDAT">
            <summary>
            Annotation Point 2D Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AQAANG">
            <summary>
            Angle between alignment direction of arrive pp and previous
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AQANG">
            <summary>
            Angle between arrive Ppoint and previous component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AQBORE">
            <summary>
            TRUE if arrive Ppoint has same bore as previous
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AQCON">
            <summary>
            TRUE if arrive Ppoint has Correct connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AQOFF">
            <summary>
            Offset between arrive Ppoint and previous component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AREA">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AREAEX">
            <summary>
            True if area exists for DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AREARE">
            <summary>
            Area reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ARNO">
            <summary>
            Picture directory area number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ARRHEI">
            <summary>
            Arrive height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ARRI">
            <summary>
            Arrive Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ARRWID">
            <summary>
            Arrive width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASBPAN">
            <summary>
            Assembly base panel reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASBUIL">
            <summary>
            Assembly build strategy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASBUSY">
            <summary>
            Busy side of assembly
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASCODE">
            <summary>
            Anno selection code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASDEST">
            <summary>
            Assembly destination
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASECOG">
            <summary>
            Assembly estimated centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASEWEI">
            <summary>
            Assembly estimated weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASFBR">
            <summary>
            Spooling marker for arrive tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASHEET">
            <summary>
            Assembly sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASHTRE">
            <summary>
            Reference equivalent of ASHEET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASIOWN">
            <summary>
            Assembly item referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASIQUA">
            <summary>
            Assembly item quantity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASLSBS">
            <summary>
            ASL Substandard Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASLSTA">
            <summary>
            ASL Standard Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMBLB">
            <summary>
            True if element is possible to assemble
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMBLD">
            <summary>
            True if element is assembled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMBLR">
            <summary>
            Assembly reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMBLS">
            <summary>
            A for assembled elements, NA for not assembled elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMBLX">
            <summary>
            Assembly reference as text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMBS">
            <summary>
            Reference Array of all association members using element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMOWN">
            <summary>
            Assembly referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASMREF">
            <summary>
            Assembly item reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASNAME">
            <summary>
            Local assembly name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASNORM">
            <summary>
            Assembly normal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASORI">
            <summary>
            Predefined assembly orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASORIS">
            <summary>
            Predefined assembly orientation string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASPART">
            <summary>
            True if assembly part.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASPLNO">
            <summary>
            Number of assembly plate parts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASPRNO">
            <summary>
            Number of profiles on assembly part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASPWLE">
            <summary>
            Total length of weld in assembly part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASREF">
            <summary>
            Assembly reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASRF">
            <summary>
            ADP annotation symbol library ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSCIA">
            <summary>
            Reference Array of all associate elements used with constraints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSDFS">
            <summary>
            Reference Array of all ASSDEFs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSEQ">
            <summary>
            Assembly sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSNST">
            <summary>
            Assembly Nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSOS">
            <summary>
            Reference Array of all associations with constraints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSTAR">
            <summary>
            Association Target Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASSTMP">
            <summary>
            Assembly Template Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASTAB">
            <summary>
            ADP association table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASTMBS">
            <summary>
            Reference Array of all association members targeting element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASUB">
            <summary>
            Angle subtended
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASVDIR">
            <summary>
            Assembly view direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASWLOC">
            <summary>
            Assembly working location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATCONN">
            <summary>
            List of elements connected to attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATCORR">
            <summary>
            Arrive tube corrosion allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATEX">
            <summary>
            Label Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATLE">
            <summary>
            Length of arrive implied tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATLS">
            <summary>
            Access type list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATNA">
            <summary>
            Attribute name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATOL">
            <summary>
            Arc tolerance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATOP">
            <summary>
            Top of arrive pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATQUAL">
            <summary>
            Attribute qualifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATST">
            <summary>
            Arrive Tube Stock Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTC">
            <summary>
            Attached connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTDAB">
            <summary>
            List of attributes at Dabacon level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTDST">
            <summary>
            List the distributed attributes, default gives all udas
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTLIS">
            <summary>
            List of all attributes for element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTMDC">
            <summary>
            List of attributes modified since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTMDL">
            <summary>
            List of attributes modified since given session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTMOC">
            <summary>
            True if specified attribute has been modified since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTMOD">
            <summary>
            True if specified attribute has been modified this session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTNAM">
            <summary>
            Attribute Name expression for ATTRRL elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTOUT">
            <summary>
            List of all attributes excluding hidden ones, i.e as output in "Q ATT"
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTRAW">
            <summary>
            List of raw attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTRUL">
            <summary>
            Attribute Rule expression for ATTRRL elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTSET">
            <summary>
            Set attribute with result
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTY">
            <summary>
            Attachment type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATWALL">
            <summary>
            Arrive tube wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATWLEN">
            <summary>
            Assembly total weld length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATWREF">
            <summary>
            Arrive tube wall thickness reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AUTCOL">
            <summary>
            Design rgb autocolour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AUTCRE">
            <summary>
            Set true to automatically create the element.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AUTH">
            <summary>
            Author
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AUXLOC">
            <summary>
            Previous Location of Command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AVAL">
            <summary>
            Comparator PART OF ATTRIBUTE HELD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AVRAD">
            <summary>
            Average radius for a CTOR or RTOR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWALLT">
            <summary>
            Arrive wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWDARR">
            <summary>
            Auto weld arrive flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWDFLN">
            <summary>
            Bending machine accepts autowelded flanges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWDLEV">
            <summary>
            Auto weld leave flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWDOWN">
            <summary>
            Table linking AWELD elements to piping components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWDREF">
            <summary>
            Return reference to AWELD element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWELDS">
            <summary>
            Weld numbers of attached welds
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXIDIR">
            <summary>
            Axis direction applied to repeat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXIPOS">
            <summary>
            Axis position applied to repeat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXISID">
            <summary>
            Axis ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXISLA">
            <summary>
            Axis Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXSPRI">
            <summary>
            Is principle Axes Symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXSSIZ">
            <summary>
            AXESYM nominal size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AXSTYP">
            <summary>
            Axes Symbol type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AYDIR">
            <summary>
            Arrive Y axis direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AZDIR">
            <summary>
            Arrive alignment direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AZID">
            <summary>
            Default Azimuth value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AZIF">
            <summary>
            Azimuth attractor factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AZIL">
            <summary>
            Azimuth limits (Min/Max)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AZIS">
            <summary>
            Azimuth set flag - ignore Azimuth values if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AFPARA">
            <summary>
            Auxiliary function parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AFTEXT">
            <summary>
            Auxiliary function
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASDIM">
            <summary>
            Assembly dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AUXPOS">
            <summary>
            Auxiliary function definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ATTSIZ">
            <summary>
            Actual size of attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AVBITY">
            <summary>
            Availablity of material instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ASTEXT">
            <summary>
            Attribute value as text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALWREN">
            <summary>
            Allow Rename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ACTVRL">
            <summary>
            Indicates rule is active or not
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ALWUSE">
            <summary>
            Indicates whether or not catalogue can be used in the project
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AMTEMP">
            <summary>
            Ampacity Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ARMRED">
            <summary>
            Indicating whether CABD is armoured
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ARMMTL">
            <summary>
            Armour material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADDMHE">
            <summary>
            Detailing Bolt Set Head-Side Addtl. Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ADDMNU">
            <summary>
            Detailing Bolt Set Nut-Side Addtl. Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AOFCEL">
            <summary>
            Number of connected elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWQEX">
            <summary>
            Allow Quality Exchange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.AWTHEX">
            <summary>
            Allow Thickness Exchange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BACKRE">
            <summary>
            List reftable back references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BAEXSS">
            <summary>
            Bending Excess Arrive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BAIN">
            <summary>
            Before/After indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BANG">
            <summary>
            Beta angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BASELF">
            <summary>
            Reference of Baseline Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BASETY">
            <summary>
            Base type for the user-defined element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BASNAM">
            <summary>
            Base Name for the Project Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BATC">
            <summary>
            True if in batch mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BBFF">
            <summary>
            Array of bounding Boundary Formers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BCPY">
            <summary>
            Backward copy reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BDIA">
            <summary>
            Bolt diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BDTUL">
            <summary>
            Boolean dimension text underlining flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAD">
            <summary>
            Default Bearing value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAF">
            <summary>
            Bearing attractor factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAL">
            <summary>
            Bearing limits (Min/Max)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEALAM">
            <summary>
            Name of the bead laminate code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAPOS">
            <summary>
            Bead posno
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAQUA">
            <summary>
            Bead quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAS">
            <summary>
            Bearing set flag - ignore Bearing values if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEAWTH">
            <summary>
            Bead width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BELRFA">
            <summary>
            All components in the PipePiece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BELTYP">
            <summary>
            All component types in the PipeSpool
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENANG">
            <summary>
            Bending angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENDCO">
            <summary>
            Bend corners - true if fillet should be applied to the corners of kickplate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENDIR">
            <summary>
            Bending machine direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENDMA">
            <summary>
            Bending Machine reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENDMC">
            <summary>
            Bending Machine Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENMLF">
            <summary>
            Minimum length for the first straight tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENMLL">
            <summary>
            Minimum length for the last straight tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENPIF">
            <summary>
            Maximum tube insertion length (with pre-welded flange)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENPIL">
            <summary>
            Maximum tube insertion length (with pre-welded collar)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENPIP">
            <summary>
            Maximum tube insertion length (Plane end)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENPIR">
            <summary>
            Bend radius (not ratio)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENROT">
            <summary>
            Bending machine rotation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BENT">
            <summary>
            Bent flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVCOD">
            <summary>
            Bevel codes for edges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVEL">
            <summary>
            Bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVFLA">
            <summary>
            Bevel code, flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVLEN">
            <summary>
            Lengths of bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVLFT">
            <summary>
            Bevel code on left side of seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVLI">
            <summary>
            Lengths of I-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVLV">
            <summary>
            Length of vertical bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVLX">
            <summary>
            Lengths of X-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVLY">
            <summary>
            Lengths of Y-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVM">
            <summary>
            Bevel codes along M1 and M2 curves
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVRGT">
            <summary>
            Bevel code on right side of seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVTXT">
            <summary>
            Bevel text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVWEB">
            <summary>
            Bevel code, web
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFCOLO">
            <summary>
            Backface colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFCONU">
            <summary>
            Backface colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFLE">
            <summary>
            Out of plane flexibility factor for bends
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFPN">
            <summary>
            Backface pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFRF">
            <summary>
            Reference to real Boundary Former
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFSTRE">
            <summary>
            Backface linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFSTYL">
            <summary>
            Backface linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BGTDIA">
            <summary>
            Bolt diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BGTLEN">
            <summary>
            Bolt length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BGTNOF">
            <summary>
            Number of Bolts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BGTSPC">
            <summary>
            Get SPCO of the the bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BGTTXT">
            <summary>
            Get TEXT of the bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BGTWEI">
            <summary>
            Bolt weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BITE">
            <summary>
            Bolt items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BITL">
            <summary>
            Bolt item lengths
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BJOINT">
            <summary>
            Bolt joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BKEY">
            <summary>
            DRAFT user defined base symbol/skey name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLCKLM">
            <summary>
            True if block limit seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLDREF">
            <summary>
            Revision Block Array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLEN">
            <summary>
            Bolt length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLEXSS">
            <summary>
            Bending Leave Excess
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLNK">
            <summary>
            Auto-blanking flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLRF">
            <summary>
            Bolt reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLSLEN">
            <summary>
            Length of blasting contours
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLTM">
            <summary>
            Bolt method
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLTR">
            <summary>
            Bolt reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BLTW">
            <summary>
            Standard Bolt weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BMAR">
            <summary>
            Auto-blanking margin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BMAX">
            <summary>
            Maximum bend number in current spool drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BMCLOC">
            <summary>
            True if bending machine bends clockwise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BMLEVE">
            <summary>
            Beam levels from owning element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BNDARE">
            <summary>
            Boundary line area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BNDOFF">
            <summary>
            Offset from boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BOLTPA">
            <summary>
            Spooling bolt part numbers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BORE">
            <summary>
            Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BOREAR">
            <summary>
            Bore array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BOTCUT">
            <summary>
            Bottom Stile Cut Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BOTHEI">
            <summary>
            Bottom height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPANNR">
            <summary>
            Curved base panel normal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPANOR">
            <summary>
            Curved base panel orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPANRE">
            <summary>
            Base panel reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPFG">
            <summary>
            Bend-point flag - default offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPOF">
            <summary>
            Leader bend point offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPOFTX">
            <summary>
            Leader bend point offset text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPRO">
            <summary>
            Spot value of property B
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BPTYPE">
            <summary>
            Basic Profile Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRACKE">
            <summary>
            Brackets code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRAD">
            <summary>
            Bend radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRALNK">
            <summary>
            Connectivity SCBRAN-BRANCH Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRCOG">
            <summary>
            Branch centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRCON">
            <summary>
            Branch member connections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BREARE">
            <summary>
            Branch external surface area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BREF">
            <summary>
            Branch Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRIARE">
            <summary>
            Branch internal surface area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRICOG">
            <summary>
            Branch insulated centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRIWEI">
            <summary>
            Branch insulated weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRLEG">
            <summary>
            Branch members on the same leg
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRLO">
            <summary>
            Branch Positioning Status code (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNFAC">
            <summary>
            Burning factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNGSP">
            <summary>
            Bottom Rung Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNLEN">
            <summary>
            Length of burning contours
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNNAM">
            <summary>
            Burner name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNNUM">
            <summary>
            Burner number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNPRC">
            <summary>
            Burner process name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNREF">
            <summary>
            Burner reference id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNSEQ">
            <summary>
            Burning sequence number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNST">
            <summary>
            Number of starts for burning
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNTOO">
            <summary>
            Burner tool
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNTYP">
            <summary>
            Burner type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRREF">
            <summary>
            Branch table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRTXRF">
            <summary>
            Return reference from Branch Table element to SPECs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRWCOG">
            <summary>
            Branch wet centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRWEIG">
            <summary>
            Branch weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRWICO">
            <summary>
            Branch wet insulated centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRWIWE">
            <summary>
            Branch insulated wet weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRWWEI">
            <summary>
            Branch wet weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSCANG">
            <summary>
            Bend Segment Cut Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSCLL">
            <summary>
            Centre-Line Length of a mitred Bend Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSDWG">
            <summary>
            AutoCAD backing sheet name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSEL">
            <summary>
            Bolt Selector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSFN">
            <summary>
            Backing sheet filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSLAYE">
            <summary>
            AutoCAD backing sheet layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSMNIL">
            <summary>
            Minimum Length of Insulation of a mitred Bend Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSMNL">
            <summary>
            Minimum Length of a mitred Bend Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSMXIL">
            <summary>
            Maximum Length of Insulation of a mitred Bend Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSMXL">
            <summary>
            Maximum Length of a mitred Bend Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSPE">
            <summary>
            Bolt specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSRF">
            <summary>
            Backing sheet reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSRFA">
            <summary>
            ADP backing sheet list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BSTA">
            <summary>
            Branch Status code (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTEX">
            <summary>
            Annotation text string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTHK">
            <summary>
            Parameterised bolt thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTLS">
            <summary>
            Boundary Former type list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTOL">
            <summary>
            Bore tolerance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTOTAL">
            <summary>
            Bolt joint total
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTOTWE">
            <summary>
            Bolt total weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BTYP">
            <summary>
            Bolt type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BUFS">
            <summary>
            Preferred buffer size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BUIL">
            <summary>
            Built/Unbuilt flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BULG">
            <summary>
            Bulge factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BUNI">
            <summary>
            Bore units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BUNREF">
            <summary>
            Cable bundle reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BURF">
            <summary>
            Reference to real Building Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BURNID">
            <summary>
            Burner id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BUYMRK">
            <summary>
            Buying mark
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVCODN">
            <summary>
            Bevelled Code number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVIS">
            <summary>
            Bottom visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVSCLL">
            <summary>
            Centre-Line Length of a mitred Bend Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVSEGN">
            <summary>
            Bevelled segment number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVSMNI">
            <summary>
            Minimum Length of Insulation of a Virtual mitred Bend end-Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVSMNL">
            <summary>
            Minimum Length of a virtual mitred Bend end-Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVSMXI">
            <summary>
            Maximum Length of Insulation of a Virtual mitred Bend end-Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BVSMXL">
            <summary>
            Maximum Length of a virtual mitred Bend end-Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BWEI">
            <summary>
            Bolt weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BWITHF">
            <summary>
            Bend with flow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFORI">
            <summary>
            Bent Feature Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRANBO">
            <summary>
            Array of branch bore excluding arrive and leave
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRANDI">
            <summary>
            Array of branch bore direction excluding the arrive and leave
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRIRAD">
            <summary>
            Bridge radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRNCOM">
            <summary>
            Burner comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRPOSA">
            <summary>
            First bridge definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRPOSB">
            <summary>
            Second bridge definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRPOSS">
            <summary>
            Bridge definition side point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRREFA">
            <summary>
            Nested part reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRREFB">
            <summary>
            Nested part reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BRTYP">
            <summary>
            Bridge type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BWIDTH">
            <summary>
            Bridge width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFCRGB">
            <summary>
            RGB backface colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BFCRGP">
            <summary>
            RGB backface colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BOLTYP">
            <summary>
            Bolt Type Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BOTSTR">
            <summary>
            BOTT Stringer Gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BNLENI">
            <summary>
            Length of vertical bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BNLENV">
            <summary>
            Length of V-Bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BNLENX">
            <summary>
            Length of X-Bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BNLENY">
            <summary>
            Length of Y-Bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVDFR">
            <summary>
            Reference to Bevel Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVPAR">
            <summary>
            Bevelling Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVPAT">
            <summary>
            Bevelling Tool Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVROF">
            <summary>
            Bevel Root Face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVTAP">
            <summary>
            Bevel Tapering
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.BEVTYP">
            <summary>
            Bevel Type Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABBOX">
            <summary>
            Calculated box volume in world coordinates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABGAP">
            <summary>
            cable gap on cabletray as multiple of OUTD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABINT">
            <summary>
            cable interference class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CAGOFF">
            <summary>
            Cage Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CAGSIZ">
            <summary>
            Cage Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CARD">
            <summary>
            Cardinality definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CARE">
            <summary>
            Isodraft Compipe: Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CASR">
            <summary>
            Case reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATMOD">
            <summary>
            Catalogue Geometry Modified- Not directly query able
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATR">
            <summary>
            Catalogue reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATTEX">
            <summary>
            Concatenation of Detailing and Material Texts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATY">
            <summary>
            Card type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBACXR">
            <summary>
            Accumulated cables xarea at route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBCOG">
            <summary>
            Cable centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBCULE">
            <summary>
            Cut Length of cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBFRLE">
            <summary>
            Free Length of cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBGELE">
            <summary>
            Geometric Length of cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBNUCW">
            <summary>
            Cables at a point on a cableway
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBPREF">
            <summary>
            References to POINTR forming route of a cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBRNLS">
            <summary>
            List of route nodes that cable passes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBRRLS">
            <summary>
            List of route nodes and rattas that cable passes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBRWGL">
            <summary>
            Raw Geometric Length of cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBSTA">
            <summary>
            Cable routing status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBSTT">
            <summary>
            Cable status text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBTOLE">
            <summary>
            Total Length of Cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBWEIG">
            <summary>
            Cable weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCEN">
            <summary>
            Cost centre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCLA">
            <summary>
            Cost class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCOL">
            <summary>
            Colour (in catalogue)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCON">
            <summary>
            Connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCORRE">
            <summary>
            Cable Core set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCORXR">
            <summary>
            Return reference from CCORSET element to SCOMs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CDATE">
            <summary>
            Date last Accessed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CDET">
            <summary>
            Catalogue detail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CDPL">
            <summary>
            List of valid current design properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CDPR">
            <summary>
            Current design dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CDRG">
            <summary>
            Isodraft Compipe: Drawing number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CELLID">
            <summary>
            Cell Identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CELLTO">
            <summary>
            Total Number of Cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CELLTR">
            <summary>
            Total Number of Trimmed Cells
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CELLWH">
            <summary>
            Total Number of Untrimmed Cells
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CELREF">
            <summary>
            Status Element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CEND">
            <summary>
            Connection at other end of CREF (HEAD or TAIL)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CERF">
            <summary>
            Array of Faces generated by this
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CEXES">
            <summary>
            Cable excesses
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CEXS">
            <summary>
            Percentage excess for passing cables
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFCHE">
            <summary>
            Fill level check
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFDP">
            <summary>
            Current design dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFFA">
            <summary>
            Array of Faces generated by this
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGCTX">
            <summary>
            Configuration key context
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGIAV">
            <summary>
            Configuration integer array value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGIV">
            <summary>
            Configuration integer value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGKRE">
            <summary>
            Configuration key reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGLAV">
            <summary>
            Configuration logical array value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGLV">
            <summary>
            Configuration logical value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGNAM">
            <summary>
            Configuration key name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGOVR">
            <summary>
            Configuration Override Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGRAV">
            <summary>
            Configuration real array value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGRV">
            <summary>
            Configuration real value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGTV">
            <summary>
            Configuration text value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGTYP">
            <summary>
            Configuration value type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFILL">
            <summary>
            Fill level at route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFKEYP">
            <summary>
            Configuration key path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFLO">
            <summary>
            Comparator DIRECTION OF FLOW AT THIS CONNECTION
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFRA">
            <summary>
            Cofitting reference array for Pfittings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHALEN">
            <summary>
            Length of chamfer intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHAM">
            <summary>
            Chamfer lengths
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHANUM">
            <summary>
            Number of chamfer intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHAR">
            <summary>
            Character set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHARGE">
            <summary>
            Charge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHCOLO">
            <summary>
            Dimension crosshairs colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHCONU">
            <summary>
            Crosshairs colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHDCOL">
            <summary>
            Child column
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHECKE">
            <summary>
            Checker
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHEI">
            <summary>
            Character height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHEIGL">
            <summary>
            GLabel style character height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHEITX">
            <summary>
            Character height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHKDAT">
            <summary>
            Date checked
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHNGD">
            <summary>
            Changed counter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHOS">
            <summary>
            Crosshairs overshoot
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHOSTX">
            <summary>
            Crosshairs overshoot text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHPN">
            <summary>
            Crosshairs pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHSTRE">
            <summary>
            Crosshairs linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHSTYL">
            <summary>
            Crosshairs linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CIRCR">
            <summary>
            Circumscribed rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CIWE">
            <summary>
            Total insulation weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CKEY">
            <summary>
            ISODRAFT end condition key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLAI">
            <summary>
            Claim mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLAIDB">
            <summary>
            Implicit or explicit claims
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLBASE">
            <summary>
            Column base offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLCCNT">
            <summary>
            Claim list changes count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLCOLO">
            <summary>
            Centreline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLCONN">
            <summary>
            Elements that Clasher considers to be connected (and hence no clashes)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLCONU">
            <summary>
            Centreline colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLFG">
            <summary>
            Centreline flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLFL">
            <summary>
            Centreline flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLGREF">
            <summary>
            TRNCLG Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLIPCD">
            <summary>
            Clip code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLIST">
            <summary>
            All cables attached to route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLKI">
            <summary>
            Comparator ID OF THE ITEM/LINK THIS CONNECTION BELONGS TO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLLE">
            <summary>
            Branch centreline length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMID">
            <summary>
            Unique system ID of user claiming element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMNUM">
            <summary>
            User or extract number claiming element. Extract numbers are negative
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMO">
            <summary>
            Centreline mode: 1=CL OFF, 2=CL ON
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMTIE">
            <summary>
            Reference to elements that are automatically claimed along with this element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNCOD">
            <summary>
            Ceiling Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNELE">
            <summary>
            Ceiling Elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNFAC">
            <summary>
            Cleaning factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNHEI">
            <summary>
            Ceiling Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNK">
            <summary>
            Comparator POINTS TO THE CONNECTED ITEM OR LINK
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNTYP">
            <summary>
            Ceiling Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNVOI">
            <summary>
            Ceiling Void Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLOSED">
            <summary>
            True if plate covering entire referenced component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLOSEF">
            <summary>
            True if branch is closed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLPN">
            <summary>
            Centreline pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLRF">
            <summary>
            Actual circulation list reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLRISS">
            <summary>
            Clear lower parts on issue
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLRSIZ">
            <summary>
            Clearance size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLSTRE">
            <summary>
            Centreline linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLSTYL">
            <summary>
            Centreline linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLUTCH">
            <summary>
            Bending machine insertion direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMALL">
            <summary>
            Structure allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMAXF">
            <summary>
            Calculate maximum fill level on cway
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOUA">
            <summary>
            Aft boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOUF">
            <summary>
            Fwd boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOUL">
            <summary>
            Lower boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOUP">
            <summary>
            Ps boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOUS">
            <summary>
            Stbd boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOUU">
            <summary>
            Upper boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMBOX">
            <summary>
            Bounding box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMCAT">
            <summary>
            Compartment category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMCDE">
            <summary>
            Content density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMCTID">
            <summary>
            Content type ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMDESC">
            <summary>
            Compartment description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMFLW">
            <summary>
            Full Load Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMINF">
            <summary>
            Calculate minimum fill level on cway
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMLCV">
            <summary>
            Longitudinal centre of total volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMMGE">
            <summary>
            Merged compartment indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPER">
            <summary>
            Compartment permeability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPERD">
            <summary>
            Permeability for use in damage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPLNK">
            <summary>
            Return reference from schematic or design element to CYMLNK element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPR">
            <summary>
            Component reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPRFA">
            <summary>
            All components for the PipePiece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPSTA">
            <summary>
            Connectivity comparison status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPSTS">
            <summary>
            Connectivity comparison status description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPURP">
            <summary>
            Purpose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMPX">
            <summary>
            Comparator/Design-Manager exclusion text attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMREF">
            <summary>
            Reference of TRINCO element at relevant site
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMTCV">
            <summary>
            Transverse centre of total volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMTYP">
            <summary>
            Type of compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMVCV">
            <summary>
            Vertical centre of total volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMVOL">
            <summary>
            Total volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNAM">
            <summary>
            Comparator NAME OF THE CONNECTION POINT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNGFIX">
            <summary>
            References to change requests already handled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNGREF">
            <summary>
            Change request reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNGTYP">
            <summary>
            Change request type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNOD">
            <summary>
            Comparator CONNECTION NAME OF THE TARGET CONNECTION POINT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNTNUM">
            <summary>
            Contour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNUM">
            <summary>
            Isodraft Compipe: Line number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COCDRE">
            <summary>
            COCDESS with same COCONN value as qualifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COCONN">
            <summary>
            COCO Connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COCORE">
            <summary>
            COCO description reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COCOXR">
            <summary>
            COCO description return reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COCSAM">
            <summary>
            COCOS with same CTYP value as COCDES
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLCOL">
            <summary>
            Column colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLCON">
            <summary>
            Column colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLNUM">
            <summary>
            Pin column number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLSCH">
            <summary>
            Color Schema
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLSTR">
            <summary>
            Column linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLSTY">
            <summary>
            Column linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLXSP">
            <summary>
            Spacing between columns in the X direction of the tower
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLYSP">
            <summary>
            Spacing between columns in the Y direction of the tower
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMBOO">
            <summary>
            Boolean Combination
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMM">
            <summary>
            Comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMMST">
            <summary>
            Comment string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMNT">
            <summary>
            Comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMPEN">
            <summary>
            Compensate bending activities for springback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMPRE">
            <summary>
            Supported component reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMPTY">
            <summary>
            Type of component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMSTR">
            <summary>
            User Command String
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMUID">
            <summary>
            TROUCO Reference at relevant Site
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMUST">
            <summary>
            Upgrade flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONAM">
            <summary>
            Cutout name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONARR">
            <summary>
            Connection array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONATS">
            <summary>
            List of attachment connected to attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONBRA">
            <summary>
            List of branches connected to branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONCD">
            <summary>
            Connection code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COND">
            <summary>
            Access Control Logical condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONDES">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONDGR">
            <summary>
            No of Conductor Groups
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNCH">
            <summary>
            Connections for all descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNE">
            <summary>
            Segment end connection flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNEC">
            <summary>
            Connections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNER">
            <summary>
            Connection error message
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNRE">
            <summary>
            References to other element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNS">
            <summary>
            Segment start connection flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONSIS">
            <summary>
            Position consistency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONSUP">
            <summary>
            All connected supports to the element tree under an element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONTRA">
            <summary>
            List of trays connected to branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONTYP">
            <summary>
            Connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COPI">
            <summary>
            Number of copies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COPYDB">
            <summary>
            Copies of this database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORA">
            <summary>
            Corrosion thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORCGR">
            <summary>
            cable core conductor group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORCON">
            <summary>
            COR Configurations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORNUM">
            <summary>
            Corner number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORNUV">
            <summary>
            Corner point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORROS">
            <summary>
            Tube corrosion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORRUG">
            <summary>
            True if corrugation is defined on the plate part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORTAG">
            <summary>
            cable core tag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COUN">
            <summary>
            Counter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COWN">
            <summary>
            Comparator POINTER TO ITS OWNER
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPAI">
            <summary>
            Comparator POINTS TO THE SHEET ELEMENT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPAR">
            <summary>
            Catalogue parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPEN">
            <summary>
            Pen for internal columns
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPFA">
            <summary>
            Array of Ports this points to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPLO">
            <summary>
            Plot (in catalogue)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPOF">
            <summary>
            Leaderline connection point wrt. text origin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPOFTX">
            <summary>
            Leaderline connection point text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPOS">
            <summary>
            conditioning position for curve geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPRO">
            <summary>
            Spot value of property C
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPUL">
            <summary>
            Cold pull - translational
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPUT">
            <summary>
            Cold pull - twist
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRCANG">
            <summary>
            Turning angle for least circumscribed rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRCLW">
            <summary>
            Length and width of least circumscribed rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRCY">
            <summary>
            Concurrency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRDATE">
            <summary>
            Date element created in current DB or if extract in ascendant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CREANC">
            <summary>
            Create ancestors
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CREF">
            <summary>
            Connection reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CREXTR">
            <summary>
            Extract element created in current DB or if extract in ascendant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRFA">
            <summary>
            Connection reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRINFO">
            <summary>
            DB creation information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRIT">
            <summary>
            Selection criteria (used to define tag + rep. rules)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRSESS">
            <summary>
            Session element created in current DB or if extract in ascendant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRSF">
            <summary>
            Change ruleset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRUSER">
            <summary>
            User created element in current DB or if extract in ascendant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSESS">
            <summary>
            Comment entered for specified session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSFBR">
            <summary>
            Spooling marker for components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSGBOX">
            <summary>
            CSG-Calculated box volume in world coordinates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSIZ">
            <summary>
            Comparator SIZE OF THE SHEET ELEMENT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSPA">
            <summary>
            Character spacing factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSPATX">
            <summary>
            Character spacing factor text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSPC">
            <summary>
            Isodraft Compipe: Specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSPE">
            <summary>
            Comparator SPECIFICATION OF THE CONNECTION POINT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSTA">
            <summary>
            Catalogue Standard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSTR">
            <summary>
            Constraint reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTCREF">
            <summary>
            Cable tray component ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHATP">
            <summary>
            Commenting attachment purpose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHCFC">
            <summary>
            Closed LOV reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHCFO">
            <summary>
            Open LOV reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHCTP">
            <summary>
            Commenting content type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHICK">
            <summary>
            Coating thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHID">
            <summary>
            Thread Id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHLIS">
            <summary>
            List of attached comment threads
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHMAS">
            <summary>
            Commenting world Master reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHREF">
            <summary>
            Comment Element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHSEL">
            <summary>
            Selection expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHSTA">
            <summary>
            Commenting thread state (Open/Close)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHSTT">
            <summary>
            Thread state text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHTEX">
            <summary>
            Commenting text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHTOL">
            <summary>
            List elements assigned to a comment threads
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTHWLI">
            <summary>
            List of Commenting worlds
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTSPE">
            <summary>
            Cable tray specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTTYP">
            <summary>
            Cable tray typ
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTXT">
            <summary>
            Card text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTYA">
            <summary>
            Attached connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTYE">
            <summary>
            End connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTYO">
            <summary>
            Owning connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTYP">
            <summary>
            Connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTYPLI">
            <summary>
            List of COCO Ctypes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTYS">
            <summary>
            Start connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURD">
            <summary>
            Current DBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURF">
            <summary>
            Curve fitting code: 1 default, 2 cubicfit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURLOC">
            <summary>
            True current location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURREN">
            <summary>
            Current
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURRFU">
            <summary>
            List of current DBs in MDB, expanding DBsets
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURTYP">
            <summary>
            Curve type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURVED">
            <summary>
            True if curved plate part.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUSVAL">
            <summary>
            Delimited Custom Value List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTB">
            <summary>
            Cutback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTL">
            <summary>
            Cut length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTLAR">
            <summary>
            Cut Length Array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTNAM">
            <summary>
            Full name of element, truncated to n characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTNMN">
            <summary>
            Full name of element (without leading slash) truncated to n characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTP">
            <summary>
            Cutting plane normal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWEI">
            <summary>
            Total component weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWHEAD">
            <summary>
            Cableway Head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWHPOS">
            <summary>
            Cableway path head point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWIDTH">
            <summary>
            Clearance Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWJUSL">
            <summary>
            Cable Way Justification Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWLIST">
            <summary>
            All cableways attached to route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWTAIL">
            <summary>
            Cableway Tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWTPOS">
            <summary>
            Cableway path tail point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBPOSA">
            <summary>
            First cut bridge definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBPOSB">
            <summary>
            Second cut bridge definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGEO">
            <summary>
            Cut free definition curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLLENA">
            <summary>
            First corner loop length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLLENB">
            <summary>
            Second corner loop length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLPOS">
            <summary>
            Corner loop definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLRAD">
            <summary>
            Corner loop radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMSTA">
            <summary>
            Comment string 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COSTES">
            <summary>
            Cost estimator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPARTS">
            <summary>
            Connection parts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSTMER">
            <summary>
            Customer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CSTMRN">
            <summary>
            Customer number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLSREF">
            <summary>
            TRNCLS Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATLO">
            <summary>
            Category Lists Order
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATNAM">
            <summary>
            Category name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATUSR">
            <summary>
            Category owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONATT">
            <summary>
            Referenced conceptual model attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNREF">
            <summary>
            References to clones of this element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONERF">
            <summary>
            Connection End Ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONSRF">
            <summary>
            Connection Start Ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNSTRF">
            <summary>
            Connector style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLANAM">
            <summary>
            Class Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLAURI">
            <summary>
            Class URI
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMIDL">
            <summary>
            Unique system ID of user claiming element (long)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPRIND">
            <summary>
            Connection point instance repeat index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPSRCR">
            <summary>
            Connection point instance source reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CASENM">
            <summary>
            Case Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CATANO">
            <summary>
            Text storing unique display name for Cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLSNAM">
            <summary>
            Class Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORGRP">
            <summary>
            Core Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORSZ">
            <summary>
            Size of the core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORTYP">
            <summary>
            Core type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUALWD">
            <summary>
            Indicates compare update window is allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CAPTIO">
            <summary>
            Caption
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CAXISE">
            <summary>
            Coordinate axis enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CAXISI">
            <summary>
            Coordinate axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CGROFF">
            <summary>
            Grid position offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CGRPOS">
            <summary>
            Coordinate grid positions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COMPID">
            <summary>
            Component identity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COVHOL">
            <summary>
            Cover hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CVALS">
            <summary>
            Coordinate values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHCRGB">
            <summary>
            RGB dimension crosshairs colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHCRGP">
            <summary>
            RGB dimension crosshairs colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMRGB">
            <summary>
            RGB column colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMRGP">
            <summary>
            RGB column colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNRGB">
            <summary>
            RGB centreline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNRGP">
            <summary>
            RGB centreline colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLRGB">
            <summary>
            RGB colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COLRGP">
            <summary>
            RGB colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CBSTAT">
            <summary>
            Cable routing status text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWJBLS">
            <summary>
            Cableway branches and junction boxes list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWPPJB">
            <summary>
            Cableway branches and pull pits and junction boxes list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CWPPLS">
            <summary>
            Cableway branches and pull pits list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONREF">
            <summary>
            References to other connected element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CANDRM">
            <summary>
            Can drum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CIMPED">
            <summary>
            Conductor impedance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CREACT">
            <summary>
            Conductor reactance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CRESIS">
            <summary>
            Conductor resistance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTALW">
            <summary>
            Cutting allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CUTMIN">
            <summary>
            Cutting allowance minimum length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CFGTAV">
            <summary>
            Configuration text array value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABCOL">
            <summary>
            Cable colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONMTL">
            <summary>
            Conductor material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORCOD">
            <summary>
            Core code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CORCOM">
            <summary>
            Core composition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CDIST">
            <summary>
            CurveDistance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.COFF">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CURNAM">
            <summary>
            Curve Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CASELI">
            <summary>
            List of cases set for a UDA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CHKSUM">
            <summary>
            MD5 checksum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLALEN">
            <summary>
            clamping length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLHO">
            <summary>
            clearance hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CONNID">
            <summary>
            Connect service ID of the uploaded project in cloud
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPHASE">
            <summary>
            Reference to Construction Phase
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CCOREF">
            <summary>
            Cable core set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CPRIO">
            <summary>
            Connector priority flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABLAY">
            <summary>
            Cable layout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABSWA">
            <summary>
            Cable swapping
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CABTOU">
            <summary>
            Can cable touch other cables
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CENRAD">
            <summary>
            Centreline Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTXPSP">
            <summary>
            Connector Text Position Physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CTXTPS">
            <summary>
            Connector Text Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLCUTO">
            <summary>
            Cutting length cutouts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLEIB">
            <summary>
            Cutting length end, no bevel or butt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLEVB">
            <summary>
            Cutting length end, V bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLEXB">
            <summary>
            Cutting length end, X bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLEYB">
            <summary>
            Cutting length end, Y bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLGRND">
            <summary>
            Total grinding length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLHOLE">
            <summary>
            Cutting length holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLNOTC">
            <summary>
            Cutting length notches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLTOT">
            <summary>
            Total cutting length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CENGRA">
            <summary>
            Factory Standard Part Centre of Gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CMNTID">
            <summary>
            Detailing Comment ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CNTYPE">
            <summary>
            Contour Type Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CLMPLN">
            <summary>
            Clamping length of manufactured profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.CASENAME">
            <summary>
            Case Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.D">
            <summary>
            Position downing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACC">
            <summary>
            Database access
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACCLA">
            <summary>
            True if DAC allows element to be claimed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACCOH">
            <summary>
            True if DAC allows element hierarchy to be copied to another DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACCOP">
            <summary>
            True if DAC allows element to be copied to another DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACCRE">
            <summary>
            True if DAC allows element to be created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACDEL">
            <summary>
            True if DAC allows element to be deleted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACDRO">
            <summary>
            True if DAC allows element to be dropped
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACERR">
            <summary>
            Returns the DAC error
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACEXH">
            <summary>
            True if DAC allows element hierarchy to be exported
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACEXP">
            <summary>
            True if DAC allows element to be exported
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACISS">
            <summary>
            True if DAC allows element to be issued
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACMOD">
            <summary>
            True if DAC allows attribute of element to be modified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACOUH">
            <summary>
            True if DAC allows element hierarchy to be output
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DACOUT">
            <summary>
            True if DAC allows element to be output
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DAEXLL">
            <summary>
            Dimension auto external line length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DAREF">
            <summary>
            Reference of associated dataset area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DARREF">
            <summary>
            Design area reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DASSCI">
            <summary>
            Reference Array of all direct associates with constraints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DASSOS">
            <summary>
            Reference Array of all associations with constraints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATASO">
            <summary>
            DBView or DBViewSet reference array for Datasheet Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATCON">
            <summary>
            Date as a text string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATE">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATEAK">
            <summary>
            Date command Acknowledged
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATECM">
            <summary>
            Date command Completed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATECR">
            <summary>
            Date command Created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATEFO">
            <summary>
            Date format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATEMS">
            <summary>
            Date message created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATEND">
            <summary>
            Date command Stopped
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATERD">
            <summary>
            Date command ready
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATERK">
            <summary>
            Date command Reply Acknowledged
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATERN">
            <summary>
            Date command running
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATERP">
            <summary>
            Date command Replied
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATESL">
            <summary>
            Date command last Stalled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATESN">
            <summary>
            Date command Sent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATIM">
            <summary>
            LMI Date/time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATINT">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATONE">
            <summary>
            Date 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATTWO">
            <summary>
            Date 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATTXT">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBAC">
            <summary>
            DB Access, MULTIWRITE or UPDATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBALL">
            <summary>
            List of DBs allocated to location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBATT">
            <summary>
            Database attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBCL">
            <summary>
            DB Claim
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBCNTL">
            <summary>
            True if element is in a control DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBCRIT">
            <summary>
            Crteria(expression) for DBs in the DBset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBELET">
            <summary>
            Element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBEXNO">
            <summary>
            DB Extract Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBF">
            <summary>
            Database reference attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBFI">
            <summary>
            DB filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBFN">
            <summary>
            DB file number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBLC">
            <summary>
            List of LOCs belonging to a DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBLNKP">
            <summary>
            Linked Documents (DB) distribution flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBLS">
            <summary>
            List of DBs belonging to MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBLSFU">
            <summary>
            List of DBs belonging to MDB, expanding DBsets
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBMO">
            <summary>
            Read/Write mode of DBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBNA">
            <summary>
            DB name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBNO">
            <summary>
            DB number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBNU">
            <summary>
            DB Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBOT">
            <summary>
            Bottom diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBPR">
            <summary>
            List of DBs Primary at location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBRBEG">
            <summary>
            DB range start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBREF">
            <summary>
            DB reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBREND">
            <summary>
            DB range end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSESS">
            <summary>
            Last DB session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSETL">
            <summary>
            List of DbSets in MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSHIE">
            <summary>
            Database hierarchy within a DBSET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSLEV">
            <summary>
            Databases at a level within a DBSET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSLIS">
            <summary>
            Databases within a DBSET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSSTP">
            <summary>
            DBs in a stamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBSTF">
            <summary>
            Database set reference attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBTE">
            <summary>
            DB Text Encoding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBTY">
            <summary>
            DB type (DESI, CATA etc)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBUSER">
            <summary>
            Current Users in the system using this DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBUSRX">
            <summary>
            Current Users in the system using this DB or any extract descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBVAR">
            <summary>
            True if element is in a variant DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBVWST">
            <summary>
            Database View Set reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBWRIT">
            <summary>
            True if element is in a writable DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCLA">
            <summary>
            Database claim mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCLNCO">
            <summary>
            Default Ceiling Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCLNHE">
            <summary>
            Default Ceiling Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCLNTY">
            <summary>
            Default Ceiling Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCODE">
            <summary>
            Direction code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCON">
            <summary>
            Design PPoint connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCORRO">
            <summary>
            Derived corrosion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCRFA">
            <summary>
            Array of Design datasets for Design Code/Criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCSTYF">
            <summary>
            Design change style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCTILT">
            <summary>
            Default Ceiling Tile Thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDDF">
            <summary>
            Default Design data value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDEF">
            <summary>
            Port distance flexibility defaults
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDEG">
            <summary>
            Dimension line angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDEGTX">
            <summary>
            Radial dimension angle text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDEP">
            <summary>
            Database depth within hierarchy (World is 0)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDES">
            <summary>
            Design parameters as distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDIR">
            <summary>
            Design PPoint spherical direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDNM">
            <summary>
            Design element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDNMX">
            <summary>
            DDNM X position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDNMXY">
            <summary>
            DDNM XY position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDNMY">
            <summary>
            DDNM Y position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDNX">
            <summary>
            Design element as text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDOORS">
            <summary>
            Default Door Sill
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDPR">
            <summary>
            Design data property value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DDRFA">
            <summary>
            Array of default design datasets (for template)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEALAL">
            <summary>
            True if location locked due to deallocation of dbs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEALDB">
            <summary>
            Reference array for locations where DB id being deallocated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECGAP">
            <summary>
            Decoration Gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECMOD">
            <summary>
            Decoration Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECOFF">
            <summary>
            Decoration offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECP">
            <summary>
            Decimal places
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECREP">
            <summary>
            Decoration Repeat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECSIZ">
            <summary>
            Decoration Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFA">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFATT">
            <summary>
            Default List of all attributes for element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFERD">
            <summary>
            Deferred DBs in MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFHOM">
            <summary>
            Default allocation home
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFLNK">
            <summary>
            Link to terrain definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFSLO">
            <summary>
            Default pipe slope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFSPK">
            <summary>
            Default Reference of SPEC for branch members
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELANG">
            <summary>
            Angle applied to repeat elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELDSG">
            <summary>
            Delivery Designation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELP">
            <summary>
            D-position in structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELPE">
            <summary>
            Easting of D-Position in STRUC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELPN">
            <summary>
            Northing of D-position in STRUC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELPU">
            <summary>
            Upping of D-position in STRUC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELTAE">
            <summary>
            Easterly Offset applied to repeat elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELTAN">
            <summary>
            Northerly Offset applied to repeat elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELTAU">
            <summary>
            Vertical Offset applied to repeat elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEMIX">
            <summary>
            Index of Demote Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEMRDY">
            <summary>
            Flag to signify the completion of demolition definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEMVOL">
            <summary>
            References to Volumes to be demolished referenced laser survey
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DENS">
            <summary>
            Spot value of density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPATT">
            <summary>
            Attributes that a rule or catalogue parameterised expression is dependent upon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPCOU">
            <summary>
            Number of dependencies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPD">
            <summary>
            Default value of local design property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPEND">
            <summary>
            Commands on which this is dependent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPL">
            <summary>
            List of local design properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPPNT">
            <summary>
            Internal Pointer Attributes that a rule or catalogue parameterised expression is dependent upon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPR">
            <summary>
            Local design property value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPREF">
            <summary>
            List of elements connected to branch tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPTH">
            <summary>
            Depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEPTYP">
            <summary>
            Commands on which this is dependent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESC">
            <summary>
            Description of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESELE">
            <summary>
            Reference to Design Object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESGEO">
            <summary>
            Design geometrical dependencies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESLNK">
            <summary>
            Connectivity Design Model Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESLOC">
            <summary>
            Destination Location for the command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESMOD">
            <summary>
            Design Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESP">
            <summary>
            Design parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESREF">
            <summary>
            Design reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEST">
            <summary>
            Destination
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESXCL">
            <summary>
            Design Outfitting excluded Geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DETA">
            <summary>
            Detail flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DETR">
            <summary>
            Detailing text reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFBRAD">
            <summary>
            Default bend radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFFL">
            <summary>
            Displacement force flexibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFHOME">
            <summary>
            Get default home element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLA">
            <summary>
            Radial dimension type flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLF">
            <summary>
            Translational spring values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLRCO">
            <summary>
            Default Floor Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLRHE">
            <summary>
            Default Floor Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLRTY">
            <summary>
            Default Floor Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLT">
            <summary>
            Default value for the attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLTA">
            <summary>
            Defaults for Type 1 annotation - special attribute for use by ADP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLTB">
            <summary>
            Defaults for Type 2 annotation - special attribute for use by ADP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLTC">
            <summary>
            Defaults for Type 3 annotation - special attribute for use by ADP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFLTD">
            <summary>
            Defaults for Type 4 annotation - special attribute for use by ADP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFNM">
            <summary>
            Document filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFON">
            <summary>
            Dimension text font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFONTN">
            <summary>
            Dimension text font name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFUN">
            <summary>
            Default unit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DHTEST">
            <summary>
            Test locator expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DHTEXT">
            <summary>
            Default home identifier expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIAGXP">
            <summary>
            X position of the symbol on Visio drawing in mm
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIAGYP">
            <summary>
            Y position of the symbol on Visio drawing in mm
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIAM">
            <summary>
            Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIAREF">
            <summary>
            Diagram reference array for schematic elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIME">
            <summary>
            DRAFT user defined symbol dimension flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIMPOS">
            <summary>
            Derived 3D dimension position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIMTXT">
            <summary>
            Dimensions text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DINTER">
            <summary>
            Default Interference class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DINTHK">
            <summary>
            Default insulation thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIR">
            <summary>
            Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIRCOD">
            <summary>
            Direction Coding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIREV">
            <summary>
            Direction evaluation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIRXP">
            <summary>
            Direction expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISCIF">
            <summary>
            Reference of DISCIPLINE Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISP">
            <summary>
            Translation displacements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIST">
            <summary>
            Distances
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISTAG">
            <summary>
            Display tag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISTFH">
            <summary>
            Distance from head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISTFN">
            <summary>
            Distance from next point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISTFP">
            <summary>
            Distance from previous point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISTM">
            <summary>
            Distances to M1 and M2 curves
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DKEY">
            <summary>
            Data Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLCNMI">
            <summary>
            Dimension line continuous mode integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLCNTM">
            <summary>
            Dimension line continuous mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLCOLO">
            <summary>
            Dimension line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLCONU">
            <summary>
            Dimension line colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLEV">
            <summary>
            Drawing level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLFG">
            <summary>
            Linear/Angular dimension line flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLIM">
            <summary>
            Displacement limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLIST">
            <summary>
            List of all possible dist att types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLPN">
            <summary>
            Dimension line pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLSTRE">
            <summary>
            Dimension linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLSTYL">
            <summary>
            Dimension linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMFA">
            <summary>
            ISODRAFT Reference Dimension attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMFL">
            <summary>
            Displacement moment flexibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMOD">
            <summary>
            Default mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMODID">
            <summary>
            Dynamic LMI Model ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMSP">
            <summary>
            Lower limit to spacing between parallel dimensions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMSPTX">
            <summary>
            Dimension spacing text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMSTRF">
            <summary>
            Dimension style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMTX">
            <summary>
            Dimension text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DMTY">
            <summary>
            ISODRAFT Reference Dimension attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DNAME">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DNST">
            <summary>
            Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOCNUM">
            <summary>
            Document Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOCREF">
            <summary>
            Document reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOCXRF">
            <summary>
            Return reference from Design element to DOCITM element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOFF">
            <summary>
            Dimension line offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOFIL">
            <summary>
            Drawing Object filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOUPGR">
            <summary>
            True if element is recommended to be upgraded in current db
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPBO">
            <summary>
            Design point bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPCO">
            <summary>
            Design point connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPCOU">
            <summary>
            Number of valid design points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPDI">
            <summary>
            Design point direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPFN">
            <summary>
            ISODRAFT dynamic detail plotfile name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPGR">
            <summary>
            Design Point Gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPGRID">
            <summary>
            ISODRAFT dynamic detail grid reference attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPKEY">
            <summary>
            Draft derived Pline identifier key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPLS">
            <summary>
            List of valid design points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPOINX">
            <summary>
            Design point information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPOS">
            <summary>
            Dimension line/arc position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPOSCA">
            <summary>
            DRAFT cached sheet position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPPS">
            <summary>
            Design point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPREMA">
            <summary>
            Design pres. max
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPREMI">
            <summary>
            Design pres. min
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPRO">
            <summary>
            Parameterised Property Expression (Default)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPSF">
            <summary>
            Design PPointset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPVI">
            <summary>
            List of visible design points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRAD">
            <summary>
            Radial offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRAWNO">
            <summary>
            Drawing number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DREA">
            <summary>
            Default value if real
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DREVAY">
            <summary>
            DRWG revisions array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRFILE">
            <summary>
            Drawing File Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRFNUM">
            <summary>
            Drawing File Numbers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRFTYP">
            <summary>
            Drawing File Types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRGP">
            <summary>
            Drawing priority (used to determine how to draw SCTN)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRMXTL">
            <summary>
            Draft general max text length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRNE">
            <summary>
            Plane normal at end of SCTN/GENSEC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRNS">
            <summary>
            Plane normal at start of SCTN/GENSEC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRPS">
            <summary>
            Derived position for steelwork
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRPSE">
            <summary>
            Easting of Derived Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRPSN">
            <summary>
            Northing of Derived Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRPSU">
            <summary>
            Upping of Derived Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRRF">
            <summary>
            Old spooler drawing reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRSSRE">
            <summary>
            Draft Symbol set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRTITL">
            <summary>
            Drawing title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRTMPR">
            <summary>
            Draft template reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRWGN">
            <summary>
            Drawing number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSCO">
            <summary>
            Design code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSESS">
            <summary>
            Date of specified session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSET">
            <summary>
            Displacement limits set flag - ignore values if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSGNTN">
            <summary>
            Designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSHANG">
            <summary>
            Draft absolute sheet angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSHEET">
            <summary>
            Detail sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSHPOS">
            <summary>
            Draft sheet position derived from 3d
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSHTRE">
            <summary>
            Reference equivalent of DSHEET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSIAST">
            <summary>
            Datasheet Instance assigned tags reference array for Datasheet Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSIFIL">
            <summary>
            Datasheet Instance filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSNO">
            <summary>
            Datasheet number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSPLDG">
            <summary>
            USED INTERNALLY TO HELP WITH UPDATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSSUBT">
            <summary>
            Datasheet sub title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTITL">
            <summary>
            Datasheet title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTNCE">
            <summary>
            Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTREF">
            <summary>
            Datasheet Template reference for Datasheet Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTY">
            <summary>
            Radial dimension style flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTADEG">
            <summary>
            Dimension Text Angle Degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTADGP">
            <summary>
            Dimension Text Angle Degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTAN">
            <summary>
            Dimension text angle flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANSA">
            <summary>
            Dimension text angle flag style angular DTANSA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANSL">
            <summary>
            Dimension text angle flag style linear DTANSL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANSR">
            <summary>
            Dimension text angle flag style radiant DTANSR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCH">
            <summary>
            Dimension text character height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCHTX">
            <summary>
            Dim text char height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCOLO">
            <summary>
            Dimension text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCONU">
            <summary>
            Dimension text colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTER">
            <summary>
            Dimension terminator code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTERID">
            <summary>
            Dimension terminator ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTERSA">
            <summary>
            Dimension term. code style angular DTERSA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTERSL">
            <summary>
            Dimension term. code style linear DTERSL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTERSR">
            <summary>
            Dimension term. code style radiant DTERSR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFL">
            <summary>
            Dimension text radius flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTIT">
            <summary>
            Data Title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLELE">
            <summary>
            Datal Elements list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLH">
            <summary>
            Dimension text letter height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLLIS">
            <summary>
            Datal Attributes List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLTST">
            <summary>
            Datal Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMPMA">
            <summary>
            Design temp. max
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMPMI">
            <summary>
            Design temp. min
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTOF">
            <summary>
            Dimension text offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTOFTX">
            <summary>
            Dimension text offset text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTOP">
            <summary>
            Top diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPN">
            <summary>
            Dimension text pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRA">
            <summary>
            Dimension text radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRATX">
            <summary>
            Dimension text radius text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRE">
            <summary>
            Data set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTUL">
            <summary>
            Dimension text underlining flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWTCL">
            <summary>
            Date of weight/cog calculation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTXR">
            <summary>
            RTEXT of detailing text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTXS">
            <summary>
            STEXT of detailing text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTXT">
            <summary>
            TTEXT of detailing text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTYP">
            <summary>
            Default type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUCTHE">
            <summary>
            Default duct height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUCTSH">
            <summary>
            Default duct shape
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUCTWI">
            <summary>
            Default duct width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUNI">
            <summary>
            Distance units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUNIO">
            <summary>
            DRAFT element union detail flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUPLIC">
            <summary>
            Duplicates of the current element with the same attribute values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DUTY">
            <summary>
            Duty
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DVENID">
            <summary>
            Dynamic LMI Vendor ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DVFL">
            <summary>
            ADP detail views flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DVSCL">
            <summary>
            ADP detail view allowable scale list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DVTH">
            <summary>
            ADP detail views threshold
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DWALLT">
            <summary>
            Derive wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DWDIR">
            <summary>
            Draft world direction for pline or ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DWGF">
            <summary>
            DWG filename (No suffix)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DWID">
            <summary>
            Width offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DWINSI">
            <summary>
            Default Window Sill
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DWPOS">
            <summary>
            Draft world position for pline or ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DX">
            <summary>
            Cartesian X offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DXL">
            <summary>
            Incremental X length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DY">
            <summary>
            Cartesian Y offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DYDATE">
            <summary>
            Dynamic name of DATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DYL">
            <summary>
            Incremental Y length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DYUDNA">
            <summary>
            Dynamic user defined name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DELDAT">
            <summary>
            Delivery Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESCAL">
            <summary>
            Descaling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRAFTM">
            <summary>
            Draftsman
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECPRC">
            <summary>
            Decimal precision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DECSEP">
            <summary>
            Decimal separator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISCIS">
            <summary>
            Associated disciplines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DICCPC">
            <summary>
            Compaction number of DICEd DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DICSES">
            <summary>
            Last session number of DICEd DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DILSSD">
            <summary>
            Last Self Similar Date of DICEd DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTAPN">
            <summary>
            Datasheet Additional Page Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTAPT">
            <summary>
            Datasheet Additional Page Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCONFI">
            <summary>
            Draw Connector Flags Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCONFL">
            <summary>
            Draw Connector Flags
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEXREF">
            <summary>
            External element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPOFF">
            <summary>
            Dimension point offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLHTX">
            <summary>
            Dimension text letter height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRTYPE">
            <summary>
            Drawing type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DNOTCP">
            <summary>
            Draw Note Current Command Line Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSTYPE">
            <summary>
            Datasheet type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DSUPCA">
            <summary>
            Drawing Engine suppress caching
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DXYOFF">
            <summary>
            DRAW 2D Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPNAME">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFTATT">
            <summary>
            Attribute on default location to use for default
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFTEXP">
            <summary>
            Expression used to calculate default
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DFTLOC">
            <summary>
            Attribute to follow to get default location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBBLOB">
            <summary>
            Database Binary Large Object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DCMPID">
            <summary>
            Definition component identity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLNRGB">
            <summary>
            RGB dimension line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DLNRGP">
            <summary>
            RGB dimension line colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DPDIST">
            <summary>
            Draw proportional distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRSTYP">
            <summary>
            Drawing subtype
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRSTYT">
            <summary>
            Drawing subtype table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRTYPT">
            <summary>
            Drawing type Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTXRGB">
            <summary>
            RGB dimension text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTXRGP">
            <summary>
            RGB dimension text colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DAENAB">
            <summary>
            Enable Autolabels for view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DAENI">
            <summary>
            Enable Design Element Auto Labelling for view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DARSF">
            <summary>
            Design Element Auto Labelling rule set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIMPAT">
            <summary>
            Imported attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRUMLN">
            <summary>
            Drum length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRFLOI">
            <summary>
            Draw Flow Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DRFLOW">
            <summary>
            Draw Flow (ByVStyle, None, Forward, Back)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DATREF">
            <summary>
            Data reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFREF">
            <summary>
            Reference to a definition element.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOUHOL">
            <summary>
            Doubling hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISPNM">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DISPNN">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBPRDA">
            <summary>
            Products available for databases
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBPRDW">
            <summary>
            Flag determining whether product can write to DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBPROD">
            <summary>
            Product associated with this DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DEFLEN">
            <summary>
            Fixed length of the weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESELM">
            <summary>
            References to Design Elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DESSTR">
            <summary>
            Design Structure Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGABMA">
            <summary>
            Helper Line Distance Start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGABME">
            <summary>
            Helper Line Distance End
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGABPA">
            <summary>
            Detailing Dimensioning Start Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGABPE">
            <summary>
            Detailing Dimensioning End Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGABRE">
            <summary>
            Detailing Graphic Measure Line Absolute relativ flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGACCU">
            <summary>
            Detailing Graphic Units Accuracy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGADDM">
            <summary>
            Detailing Graphic Additional Measure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGADDT">
            <summary>
            Detailing Graphic Additional Measure Type Options
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGALPO">
            <summary>
            Deatiling Graphics Arc Length Postfix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGALPR">
            <summary>
            Deatiling Graphics Arc Length Prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGALTI">
            <summary>
            Deatiling Graphics Arc Length Title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGANCH">
            <summary>
            Detailing Graphic Anchor Point Option
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGANPT">
            <summary>
            Detailing Graphic Anchor Point Dx / Dy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGARLT">
            <summary>
            Detailing Graphic Arc Length Dimension type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGBAST">
            <summary>
            Triangle Base Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGBOLD">
            <summary>
            Detailing Graphic Text Attribute Bold
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGCENT">
            <summary>
            Detailing Graphic Flag Text centred
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGCPOP">
            <summary>
            Detailing Graphics Arc Length Center Point Option
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGCRAD">
            <summary>
            Detailing Graphic Circle Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGCRST">
            <summary>
            Detailing Graphic Polyline Attribute Creation sub type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGCRTY">
            <summary>
            Detailing Graphic Attribute Creation Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDARK">
            <summary>
            Detailing Graphic Display Criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBEA">
            <summary>
            Detailing Graphic Polyline Attribute Drawback end angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBED">
            <summary>
            Drawback End Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBEL">
            <summary>
            Detailing Graphic Polyline Attribute Drawback end length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBET">
            <summary>
            Detailing Graphic Symbol Attribute Drawback end type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBGN">
            <summary>
            Detailing Graphic Group number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBSA">
            <summary>
            Detailing Graphic Polyline Attribute Drawback start angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBSD">
            <summary>
            Drawback Start Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBSL">
            <summary>
            Detailing Graphic Polyline Attribute Drawback start length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDBST">
            <summary>
            Detailing Graphic Symbol Attribute Drawback start type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDISL">
            <summary>
            Detailing Graphic Distance to Dimension Line (longitudinal)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDIST">
            <summary>
            Detailing Graphic Distance to Dimension Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDLOL">
            <summary>
            Detailing Graphic Distance Line Overlength
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDLPO">
            <summary>
            Detailing Graphic Radius Dimension Position on Dimension Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDLTR">
            <summary>
            Reference to DGDLT Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDLTX">
            <summary>
            Detailing Graphic Polyline Attribute Delta X
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDLTY">
            <summary>
            Detailing Graphic Polyline Attribute Delta Y
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDOLF">
            <summary>
            Detailing Graphic Dimension Line Overlength (Front)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDOLR">
            <summary>
            Detailing Graphic Dimension Line Overlength (Rear)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDTDP">
            <summary>
            Detailing Graphic Elevation Attribute Distance to dimension point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGDTES">
            <summary>
            Detailing Graphic Elevation Attribute Distance to elevation symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGEBPA">
            <summary>
            Detailing Graphic Flag Parallel Planes Only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGELVT">
            <summary>
            Elevation Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGEXB">
            <summary>
            Detailing Graphic Distance to extension line begin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGEXE">
            <summary>
            Detailing Graphic Distance to extension line end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGEXET">
            <summary>
            Detailing Graphic Polyline Attribute Type of execution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFANG">
            <summary>
            Fill Angle Index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFCOL">
            <summary>
            Detailing Graphic Fill Color
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFDIS">
            <summary>
            Fill Distance Index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFILL">
            <summary>
            Detailing Graphic Fill flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFLTV">
            <summary>
            Detailing Graphic Line Pattern Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFONT">
            <summary>
            Detailing Graphic Font Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFORM">
            <summary>
            Detailing Graphic Value Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFPAD">
            <summary>
            Pattern Repeat Factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFPAN">
            <summary>
            Fill Pattern Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFPFA">
            <summary>
            Fill Pattern Factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFPTY">
            <summary>
            Pattern Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFRME">
            <summary>
            Detailing Graphic Text frame
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGFSHA">
            <summary>
            Detailing Graphic Shading Opacity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGGAD">
            <summary>
            Detailing Graphic global angle direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGGONP">
            <summary>
            Deatiling Graphics Gon Postfix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHASL">
            <summary>
            Detailing Graphic Elevation Attribute Has second line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHGTH">
            <summary>
            Detailing Graphic Text Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHLDI">
            <summary>
            Detailing Graphic Distance to Help Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHLLE">
            <summary>
            Detailing Graphic Symbol Attribute Helpline Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHLLO">
            <summary>
            Detailing Graphic Help Line Length Option
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHLLV">
            <summary>
            Detailing Graphic Help Line Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHLOL">
            <summary>
            Detailing Graphic Help Line Overlength
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHLPO">
            <summary>
            Detailing Graphic Radius Dimension Position on Help Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGHWR">
            <summary>
            Detailing Graphic Text Height-to-Width ratio
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGISCL">
            <summary>
            Detailing Graphic Symbol Attribute Is Closed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGISEA">
            <summary>
            Automatic Placement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGITAL">
            <summary>
            Detailing Graphic Text Attribute Italics
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGJOIN">
            <summary>
            Detailing parent element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGJOIS">
            <summary>
            Detailing child element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLAYN">
            <summary>
            Detailing Graphic Layer Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLCLO">
            <summary>
            Close Polyline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLDAN">
            <summary>
            Detailing Graphic Leader Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLDFA">
            <summary>
            Detailing Graphic Elevation Attribute Factor for line distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLDLE">
            <summary>
            Detailing Graphic Leader Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLDOP">
            <summary>
            Detailing Graphics Leader Line Option
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLDTY">
            <summary>
            Detailing Graphic Leader Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLEN">
            <summary>
            Detailing Graphic Polyline Attribute Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLFIL">
            <summary>
            Fill Polyline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLLIN">
            <summary>
            Detailing Graphic Multi-line Text Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLLEN">
            <summary>
            Text Line Lengths
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLLTY">
            <summary>
            Detailing Graphic Elevation Attribute Type of leader line values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLPFL">
            <summary>
            Detailing Graphic Line pitch first line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLPIA">
            <summary>
            Detailing Graphic Line pitch absolute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLSPA">
            <summary>
            Line Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTA">
            <summary>
            Detailing Graphic Line termination angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTIV">
            <summary>
            Detailing Graphic Line Type invisible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTL">
            <summary>
            Detailing Graphic Line termination length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTR">
            <summary>
            Reference to DGLTYP Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTSB">
            <summary>
            Detailing Graphic Line termination begin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTSE">
            <summary>
            Detailing Graphic Line termination end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLTVI">
            <summary>
            Detailing Graphic Visible Line Type number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLVSD">
            <summary>
            Level Symbol Docking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGLVST">
            <summary>
            Level Symbol Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMALI">
            <summary>
            Detailing Graphic mark line flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMATT">
            <summary>
            Detailing Graphic Measure Line Text type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMBAS">
            <summary>
            Detailing Dimensioning Base Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMBEG">
            <summary>
            Detailing Dimensioning Origin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMDIS">
            <summary>
            Detailing Graphic Distance to Dimension Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMFMT">
            <summary>
            Detailing Graphic Value Formatting Option
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMKDX">
            <summary>
            Delta X
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMKDY">
            <summary>
            Delta Y
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMLAT">
            <summary>
            Detailing Graphic Angle Measure Line type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMLEG">
            <summary>
            Detailing Dimensioning Leg End Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMLL">
            <summary>
            Detailing Graphic Marker Line Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMODE">
            <summary>
            Detailing Graphic Polyline Attribute Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMORA">
            <summary>
            Detailing Dimensioning Start Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMORB">
            <summary>
            Detailing Dimensioning End Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMPTD">
            <summary>
            Detailing Graphic Minimum Point Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMTRL">
            <summary>
            Detailing Graphic Triangle Measure Line length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMTRT">
            <summary>
            Detailing Graphic Triangle Measure Line type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMTXT">
            <summary>
            Deatiling Graphics Measure Option Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGMTYP">
            <summary>
            Detailing Graphic Angle Measure Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGNINV">
            <summary>
            Detailing Graphic Number of invisible characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGNLIN">
            <summary>
            Number of Lines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGNOSI">
            <summary>
            Detailing Graphic Symbol Attribute Number of sides
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGOLIN">
            <summary>
            Number of Lines above Marker
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGONEC">
            <summary>
            Detailing Graphic Symbol Attribute Text 1 Content
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGONES">
            <summary>
            Detailing Graphic Symbol Attribute Text 1 selected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGORAN">
            <summary>
            Orientation Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGORIE">
            <summary>
            Detailing Graphic Text Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGORTY">
            <summary>
            Detailing Graphic Radius Dimension Orientation Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPAAN">
            <summary>
            Pattern Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPACK">
            <summary>
            Detailing Graphic Packed Word
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPATT">
            <summary>
            Detailing Graphic Line Pattern repeat factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPDDR">
            <summary>
            Reference to DGPDD Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPEN">
            <summary>
            Detailing Graphic Dimension Pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPICK">
            <summary>
            Detailing Graphic Pick Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPIV">
            <summary>
            Detailing Graphic Pen invisible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPTYP">
            <summary>
            Detailing Graphic Polyline Attribute Polyline Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPVI">
            <summary>
            Detailing Graphic Pen visible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPXY">
            <summary>
            Detailing Graphic 2D Points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGPXYZ">
            <summary>
            Detailing Graphic 3D Points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGRADI">
            <summary>
            List of radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGRDP">
            <summary>
            Detailing Graphic Radius dimension position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGRDT">
            <summary>
            Detailing Graphic Radius dimension type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGREPR">
            <summary>
            Detailing Graphic Symbol Attribute Representation Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSCAL">
            <summary>
            Scaling Factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSEGT">
            <summary>
            Detailing Graphic Segment Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSHAD">
            <summary>
            Shading
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSIDI">
            <summary>
            Detailing Graphic Polyline Attribute Side displacement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSLBA">
            <summary>
            Detailing Graphic Slope Base Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSLCO">
            <summary>
            Detailing Graphic Elevation Attribute Content of second line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSMH">
            <summary>
            Detailing Graphic Sm_Sysm height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGSMW">
            <summary>
            Detailing Graphic Sm_Sysm width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTALI">
            <summary>
            Detailing Graphic text alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTANG">
            <summary>
            Detailing Graphic text angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTAR">
            <summary>
            Reference to DGTXAT Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTARC">
            <summary>
            Detailing Graphic Arc Attribute Type of arc
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTATB">
            <summary>
            Detailing Graphic Text Attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTCOL">
            <summary>
            Detailing Graphic Text Color
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTPLP">
            <summary>
            Text Position on Level Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTPOS">
            <summary>
            Detailing Graphic Text position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTRDY">
            <summary>
            Detailing Graphic Slope Triangle DY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTTOM">
            <summary>
            Detailing Graphic text position related to mark out point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTWOC">
            <summary>
            Production Phase
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTWOS">
            <summary>
            Detailing Graphic Symbol Attribute Text 2 selected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXAD">
            <summary>
            Detailing Graphic Symbol Attribute Text Adjustment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXAN">
            <summary>
            Detailing Graphic Text Anchor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXB">
            <summary>
            Detailing Graphic Distance to text begin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXE">
            <summary>
            Detailing Graphic Distance to text end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXLI">
            <summary>
            Detailing Graphic Flag for the lift of the last decimal number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXRF">
            <summary>
            Reference to DTTXTS Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXST">
            <summary>
            Detailing Graphic Text Attribute style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXT">
            <summary>
            Display Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTXTL">
            <summary>
            Detailing Graphics Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGTYPE">
            <summary>
            Detailing Graphic Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGUNIT">
            <summary>
            Detailing Graphics Units system
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGUSOF">
            <summary>
            Detailing Graphic underscore offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGVIEW">
            <summary>
            Detailing Graphic View Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWASI">
            <summary>
            Wave Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWCIR">
            <summary>
            Girth Weld Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWFLG">
            <summary>
            Shop Weld Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWFRM">
            <summary>
            Detailing Graphic Symbol Attribute Draw with frame
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWNTX">
            <summary>
            Number of Weld Spec Texts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWNUM">
            <summary>
            Number of Waves
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWSCA">
            <summary>
            Z3 Window Scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWSLS">
            <summary>
            Detailing Graphic Welding Symbol Left side flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWSOS">
            <summary>
            Detailing Graphic Welding Symbol Other side flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGWSSN">
            <summary>
            Detailing Graphic Welding Symbol Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DGZART">
            <summary>
            Detailing Graphic Drawing Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIRX">
            <summary>
            grid limit in x direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DIRY">
            <summary>
            grid limit in x direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTADDR">
            <summary>
            Detailing Job Address
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTADDT">
            <summary>
            Additional Text Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTADHO">
            <summary>
            Bolting: Additional hole type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTADPU">
            <summary>
            Bolting Centre Punch Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANFL">
            <summary>
            Detailing Fabrication Item / Angle of cut - Flange/Left
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANFR">
            <summary>
            Detailing Fabrication Item / Angle of cut - Flange/Right
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANWL">
            <summary>
            Detailing Fabrication Item / Angle of cut - Web/Left
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANWR">
            <summary>
            Detailing Fabrication Item / Angle of cut - Web/Right
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTAOBV">
            <summary>
            Number of bolting vectors
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTAREA">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTAUTW">
            <summary>
            Clamping Length Balancing Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBCKD">
            <summary>
            Detailing Job Backup Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBCOA">
            <summary>
            Detailing Base Coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBDIA">
            <summary>
            Detailing Element Border Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBDR">
            <summary>
            Reference to a bolt definition element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBNAM">
            <summary>
            Detailing Model Bolt Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBNDB">
            <summary>
            Detailing Model Bolt Name for Database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBNDR">
            <summary>
            Detailing Model Bolt Name for Drawings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBSET">
            <summary>
            Bolt Set Composition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBSR">
            <summary>
            Reference to a bolt set definition element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCATR">
            <summary>
            Bolt Set Component Catalogue Numbers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCITY">
            <summary>
            Detailing Address City
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCKEY">
            <summary>
            Bocad Detailing Comment Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLAS">
            <summary>
            Bocad Detailing Element Class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLHO">
            <summary>
            Bolt Hole Clearance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLIP">
            <summary>
            Clamping Length Calculation Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLMA">
            <summary>
            Bolt Clamping Length (maximum)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLMI">
            <summary>
            Bolt Clamping Length (minimum)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLML">
            <summary>
            Bolt Clamping Length (calculated)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCLWA">
            <summary>
            Bolting Washer Clearance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCNST">
            <summary>
            Detailing Zone/Phase Designer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCNTC">
            <summary>
            Detailing Job Customer Contact Person
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCNTY">
            <summary>
            Detailing Address Country
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCNUM">
            <summary>
            Bocad Detailing Comment Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCOLA">
            <summary>
            Primary Color
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCOLB">
            <summary>
            External Color
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCOLN">
            <summary>
            Nested Drawing Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCORF">
            <summary>
            Reference to Bocad Detailing Comment Container
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSAG">
            <summary>
            Sink Hole Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSDA">
            <summary>
            Sink Hole Diameter 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSDB">
            <summary>
            Sink Hole Diameter 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSDC">
            <summary>
            Sink Hole Diameter 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSHD">
            <summary>
            Sink Hole Dimension Head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSIV">
            <summary>
            Countersunk Bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCSNU">
            <summary>
            Sink Hole Dimension Nut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCTLN">
            <summary>
            Detailing Item Cut Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCUST">
            <summary>
            Detailing Job Customer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCUTY">
            <summary>
            Detailing Fabrication Item / Type of cut, 0 = no, 1 = standard cuts, 2 = cutouts-notch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDBST">
            <summary>
            Detailing Job Database State
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDDTE">
            <summary>
            Detailing Job Delivery Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDESI">
            <summary>
            Designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDESR">
            <summary>
            Reference to Bolt Set Designation Container
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDINN">
            <summary>
            Detailing Element DIN Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDLIM">
            <summary>
            Blind Hole Bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDMAT">
            <summary>
            Clamp Length Calculation Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDTEN">
            <summary>
            Detailing End Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDTST">
            <summary>
            Detailing Start Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDVIS">
            <summary>
            Visible in base dimetry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTEDAT">
            <summary>
            Detailing Model Element Attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTEMAL">
            <summary>
            Detailing Person eMail Address
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTETYP">
            <summary>
            Detailing Element External Type Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFCOA">
            <summary>
            Detailing Final Coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFEAG">
            <summary>
            Reference to a Feature Group/Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFEAR">
            <summary>
            Reference to a Feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFEAS">
            <summary>
            References to Feature Values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFLWB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Flange/Left/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFLWT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Flange/Left/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFLXB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Flange/Left/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFLXT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Flange/Left/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFPHN">
            <summary>
            Detailing Person FAX Phone number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFPO">
            <summary>
            Final painting 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFPT">
            <summary>
            Final painting 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFREA">
            <summary>
            Bocad Detailing Free Attribute 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFREB">
            <summary>
            Bocad Detailing Free Attribute 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFREC">
            <summary>
            Bocad Detailing Free Attribute 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFRED">
            <summary>
            Bocad Detailing Free Attribute 4
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFREE">
            <summary>
            Bocad Detailing Free Attribute 5
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFRWB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Flange/Right/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFRWT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Flange/Right/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFRXB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Flange/Right/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFRXT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Flange/Right/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFSIZ">
            <summary>
            Detailing Model Folder Sizes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFTHK">
            <summary>
            Detailing Element Flange Thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFUNC">
            <summary>
            Detailing Element Function Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGALV">
            <summary>
            Detailing Galvanisation Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGATT">
            <summary>
            Detailing Model Attributes Real part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGCNT">
            <summary>
            Detailing Element Generated Count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGEND">
            <summary>
            Detailing Element Generation Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGID">
            <summary>
            Detailing Model geoemetry ident number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGLEN">
            <summary>
            Detailing Element Generation Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGNIF">
            <summary>
            Bolt Hole Orientation Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGRAD">
            <summary>
            Detailing Material Grade
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGRDS">
            <summary>
            References to Detailing Job Grid Definitions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGTRI">
            <summary>
            Detailing Creation Tripod
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTGTYP">
            <summary>
            Detailing Element Geometry Type Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTHDHE">
            <summary>
            Bolt Header Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTHEIG">
            <summary>
            Detailing Element Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTHGTH">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTHOTY">
            <summary>
            Bolting Hole Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTIDAT">
            <summary>
            Detailing Model Attributes Integer part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTITYP">
            <summary>
            Detailing Element Internal Type Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTJDSC">
            <summary>
            Detailing Job Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTJLOC">
            <summary>
            Detailing Job Location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTJNUM">
            <summary>
            Bocad Detailing Job Number / Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTJREV">
            <summary>
            Detailing Job Revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLEN">
            <summary>
            Detailing Element Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLGTH">
            <summary>
            Detailing Fabrication Element Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLNAM">
            <summary>
            Detailing Item Length after Marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLNGE">
            <summary>
            Detailing Item generated Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLPDO">
            <summary>
            Reference to Original main part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLPDZ">
            <summary>
            References to Additional Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLPHN">
            <summary>
            Detailing Person Landline Phone number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMAT">
            <summary>
            Fabrication Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMDST">
            <summary>
            Modification Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMFKE">
            <summary>
            Detailing Element Manufacturing ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMFST">
            <summary>
            Manufacturing Status Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMIND">
            <summary>
            Bolt Connection Processing Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMKIN">
            <summary>
            Initial Mark Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMKPR">
            <summary>
            Previous Mark Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMKTX">
            <summary>
            Mark Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMLEV">
            <summary>
            Detailing Manufacturing Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMMDE">
            <summary>
            Detailing Element Marking Status / Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMODD">
            <summary>
            Detailing Element Modification Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMPAR">
            <summary>
            Reference to original mirror element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMPHN">
            <summary>
            Detailing Person Mobile Phone number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMTYP">
            <summary>
            M3 Connection Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNAME">
            <summary>
            Detailing Item Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNBEN">
            <summary>
            Detailing Fabrication Item / Quantity of bends
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNCHA">
            <summary>
            Detailing Fabrication Item / Quantity of chamfers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNHOL">
            <summary>
            Detailing Fabrication Item / Quantity of holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNICO">
            <summary>
            Detailing Fabrication Item / Quantity of inner contours
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNMOD">
            <summary>
            Detailing Fabrication Item / Quantity of modification on the geometry. Notches, Cuts, Cutoffs...
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNMPO">
            <summary>
            Detailing Fabrication Item / Quantity of marking points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNNOT">
            <summary>
            Detailing Fabrication Item / Quantity of notches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNSEL">
            <summary>
            Detailing Fabrication Item / Quantity of superelevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNSHO">
            <summary>
            Detailing Fabrication Item / Quantity of slotted holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNSWE">
            <summary>
            Detailing Fabrication Item / Quantity of welds, site
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNUMB">
            <summary>
            Detailing Model Element ident number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNWWE">
            <summary>
            Detailing Fabrication Item / Quantity of welds, workshop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTOHDD">
            <summary>
            Outside Bolt Header Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTOPOS">
            <summary>
            Detailing Element Order Item Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTOREL">
            <summary>
            Reference to Original Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPART">
            <summary>
            Bolt Set Component References
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPBOX">
            <summary>
            Detailing Model Address Post Box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPELM">
            <summary>
            Reference to Parent element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPFAM">
            <summary>
            Point Family
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPMAN">
            <summary>
            Detailing Job Project Manager
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPOSN">
            <summary>
            Detailing Element Item / Mark Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPPO">
            <summary>
            Primary painting 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPPT">
            <summary>
            Primary painting 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPREF">
            <summary>
            Mark Number Prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPRFL">
            <summary>
            Detailing Model Relation Primary Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPRIM">
            <summary>
            Reference to relation-carrying element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPRIN">
            <summary>
            Initial Profile Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPROT">
            <summary>
            Bolt Protrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPSTL">
            <summary>
            Reference to Parent Element BOM item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPUNI">
            <summary>
            Bolt Packing Unit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRADA">
            <summary>
            Detailing Element Fillet Radius 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRADB">
            <summary>
            Detailing Element Fillet Radius 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRADC">
            <summary>
            Detailing Element Fillet Radius 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRDAT">
            <summary>
            Detailing Model Attributes Real part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTREAS">
            <summary>
            Reference to element creating the relation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTREVH">
            <summary>
            Revision Index History
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTREVI">
            <summary>
            Revision Index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRFPA">
            <summary>
            Detailing Element Ref. Information 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRFPB">
            <summary>
            Detailing Element Ref. Information 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTROOA">
            <summary>
            Detailing Element Root Dimension 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTROOB">
            <summary>
            Detailing Element Root Dimension 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTROOC">
            <summary>
            Detailing Element Root Dimension 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRPAR">
            <summary>
            Reference to replacement element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRTRI">
            <summary>
            Detailing Reference Tripod
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRWHG">
            <summary>
            Detailing Element Remaining Webbing Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSAAS">
            <summary>
            Detailing weld throat depth (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSAOS">
            <summary>
            Detailing weld throat depth other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSCAL">
            <summary>
            Detailing Scalding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSCAN">
            <summary>
            Bolt Hole Investigation Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSCST">
            <summary>
            Detailing Job System Data / Customer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSDTE">
            <summary>
            Detailing Start Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSECS">
            <summary>
            Reference to parts in the relation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSEFL">
            <summary>
            Detailing Model Relation Secondaries Flags
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSET">
            <summary>
            Bolt Set Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSHTR">
            <summary>
            Reference to Shop Transformation element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSIZE">
            <summary>
            Detailing Model BLOB Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSKEY">
            <summary>
            Bolt Standard Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSLEN">
            <summary>
            Saw Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSMAT">
            <summary>
            Include Bolt Mounting Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSNUM">
            <summary>
            Section number (cladding)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSPOS">
            <summary>
            Start number for marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSRCE">
            <summary>
            Reference to Source Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSTAT">
            <summary>
            Detailing Element Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSTRE">
            <summary>
            Detailing Model Street Address
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSTTE">
            <summary>
            Detailing Address Element State
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSTYP">
            <summary>
            Detailing Element Shape Type Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSURF">
            <summary>
            Detailing Surface Treatment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTAPE">
            <summary>
            Tapered Washer Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTCNT">
            <summary>
            Detailing Element Total Count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTDAT">
            <summary>
            Bocad Detailing Element Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTKMO">
            <summary>
            Detailing Element Model ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTLNU">
            <summary>
            Number of truck load
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTOTL">
            <summary>
            Total Bolt Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTSNR">
            <summary>
            Detailing Element Phase Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTXNX">
            <summary>
            Fabrication model element text sequence number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTXRF">
            <summary>
            Bocad Detailing Text Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTXT">
            <summary>
            Bocad Detailing text data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTTYPE">
            <summary>
            Detailing model item type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTUKST">
            <summary>
            Documentation ID Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTULKE">
            <summary>
            Detailing Element Documentation ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTUNIT">
            <summary>
            Bolt Dimension Units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTUWGH">
            <summary>
            User weight (ruberband method)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTVALI">
            <summary>
            Detailing Feature Value Index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTVBKY">
            <summary>
            Bolt Fastener Table Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTVIDD">
            <summary>
            Bolt always as 3D body
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTVOLM">
            <summary>
            Assembly volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWDTH">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWGHT">
            <summary>
            Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWIDT">
            <summary>
            Detailing Element Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWLDR">
            <summary>
            Reference to a weld definition element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWLWB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Web/Left/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWLWT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Web/Left/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWLXB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Web/Left/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWLXT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Web/Left/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWRWB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Web/Right/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWRWT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - angle Web/Right/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWRXB">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Web/Right/bottom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWRXT">
            <summary>
            Detailing Fabrication Item / Partial cut/cutout  - x value Web/Right/top
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWSIZ">
            <summary>
            Bolt Header Wrench Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWTHK">
            <summary>
            Detailing Element Webbing Thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTXVEC">
            <summary>
            Detailing View Volume X-Axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTYVEC">
            <summary>
            Detailing View Volume Y-Axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTZGRD">
            <summary>
            Detailing Zone Primary Grid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTZIPC">
            <summary>
            Detailing Model Address ZIP code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTZNUM">
            <summary>
            Bocad Detailing Zone Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTZPLN">
            <summary>
            Detailing Zone View Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTZPOS">
            <summary>
            Z Offset of the view plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTZVEC">
            <summary>
            Detailing View Volume Z-Axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DBHASP">
            <summary>
            Has a product been associated with this DB?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTANGZ">
            <summary>
            Angle to Zero Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTBREV">
            <summary>
            Reference to Revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCDAT">
            <summary>
            Detailing Drawing Creation Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDISA">
            <summary>
            Section Distance 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDISB">
            <summary>
            Section Distance 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDRST">
            <summary>
            Detailing Drawing Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTDRTY">
            <summary>
            Detailing Drawing Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTFLTY">
            <summary>
            BMF Folder Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTINAX">
            <summary>
            Seamline in Axis Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTLEAD">
            <summary>
            Reference to Lead Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMDFD">
            <summary>
            Modified Date/Time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTMODF">
            <summary>
            Modfied by
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNSEA">
            <summary>
            Number of Seam Angles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTNSEC">
            <summary>
            Number of Seamline Sections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPCNO">
            <summary>
            Number of raw Contour Points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPCNT">
            <summary>
            Number of Points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPRTS">
            <summary>
            References to auxiliary node elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPTCN">
            <summary>
            Bolt Set Part Count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPTSQ">
            <summary>
            Bolt Set Part Sequence Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRLEN">
            <summary>
            Factory Standard Part Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSANG">
            <summary>
            Seamline Section Angles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTSECN">
            <summary>
            Seamline Section Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTVERS">
            <summary>
            Job Element Version Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTWLRF">
            <summary>
            Reference to Weld Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DOCCHG">
            <summary>
            Reference to changed related documents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTCOGC">
            <summary>
            Centre of Gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTPARE">
            <summary>
            Plane Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.DTRWGH">
            <summary>
            REALWeight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.E">
            <summary>
            Position easting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EASTIN">
            <summary>
            Easting part expressed as a position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCE">
            <summary>
            Eccentricity (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCJ">
            <summary>
            Eccentricity of joint (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECLASS">
            <summary>
            Access Control Element class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECRFA">
            <summary>
            Equipment connection reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDGELE">
            <summary>
            Edge Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDISTA">
            <summary>
            Vertical Distance of End
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDPUV">
            <summary>
            End point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EFAC">
            <summary>
            E-factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EFOR">
            <summary>
            End force vector components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELCXRF">
            <summary>
            Return reference from CABLE element to ELCONN element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELDATA">
            <summary>
            data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELDSZ">
            <summary>
            DataSize
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELECRC">
            <summary>
            True if created since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELECRE">
            <summary>
            True if created since given session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEDEC">
            <summary>
            True if deleted since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEDEL">
            <summary>
            True if deleted since given session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEL">
            <summary>
            Types of elements, including UDETs, to which this applies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEMOC">
            <summary>
            True if modified since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEMOD">
            <summary>
            True if modified since given session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEPTR">
            <summary>
            Elemp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELESZ">
            <summary>
            Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEVAT">
            <summary>
            Elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEVID">
            <summary>
            Elevation starting index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEVLA">
            <summary>
            Label for Elevation grid planes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEVV">
            <summary>
            Is Elevation View
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELRATI">
            <summary>
            Electrical Rating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELRF">
            <summary>
            Reference to element it refers to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELTYPC">
            <summary>
            Element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELVRSN">
            <summary>
            Element version
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EMOM">
            <summary>
            End moment components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENCODB">
            <summary>
            DB Encoding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDA">
            <summary>
            End angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDELE">
            <summary>
            End Elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDOFF">
            <summary>
            Offset of the end of section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDPOI">
            <summary>
            Cable End connection point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDPOS">
            <summary>
            End Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDREF">
            <summary>
            Cable End reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDRFA">
            <summary>
            ENDATUM reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENDTIM">
            <summary>
            Date command Stopped
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENGLNK">
            <summary>
            Engineering Element Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENGTYP">
            <summary>
            Datasheet engineering type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENTIME">
            <summary>
            Time of entry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPARAM">
            <summary>
            Evaluated parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPKDI">
            <summary>
            Proportional distance of end point along Pline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPOSTO">
            <summary>
            End post tangent offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EQCLAS">
            <summary>
            Equipment class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EQTYPE">
            <summary>
            Equipment class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EREC">
            <summary>
            Erection class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EREL">
            <summary>
            End releases (packed)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ETEX">
            <summary>
            Example text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EVITCA">
            <summary>
            Evaluated intelligent text cache
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EVITCP">
            <summary>
            Evaluated intelligent text cache for dim projection line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EVITXP">
            <summary>
            Evaluated intelligent text for projection line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EVITXT">
            <summary>
            Evaluated intelligent text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EVOL">
            <summary>
            Enclosing box volume in given coordinates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXBTEX">
            <summary>
            Expanded annotation text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCESS">
            <summary>
            Excess
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLCH">
            <summary>
            Exclusion Character List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLEL">
            <summary>
            Logically deleted from the project
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLEN">
            <summary>
            Length of excess intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLFR">
            <summary>
            True if element claimed from this extract. Only True for Primary elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLFT">
            <summary>
            Excess on left side of seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLHI">
            <summary>
            Primary elements in descendant hierarchy claimed to this extract(includes this element)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLPA">
            <summary>
            True if element claimed to Parent extract. Only True for Primary elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCLTO">
            <summary>
            True if element claimed to this extract. Only True for Primary elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCNUM">
            <summary>
            Number of excess intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCPRM">
            <summary>
            Primary locations of extract children
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCRGT">
            <summary>
            Excess on right side of seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCTLF">
            <summary>
            Excess type on left side of seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXCTRG">
            <summary>
            Excess type on right side of seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXDIST">
            <summary>
            Exit Top Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXDMTX">
            <summary>
            Expanded dimension text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXECA">
            <summary>
            Exec file after DB propagation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXECB">
            <summary>
            Exec file before DB propagation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXEXTE">
            <summary>
            Exit Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXEXTN">
            <summary>
            Exit Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXFI">
            <summary>
            Extract file number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXHCNC">
            <summary>
            As EXTCNC, but repeat test for all descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXHCNN">
            <summary>
            As EXTCNN, but repeat test for all descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXHCON">
            <summary>
            As EXTCON, but repeat test for all descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXHEIG">
            <summary>
            Exit Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXHRCN">
            <summary>
            As EXRCN, but repeat test for all descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXHRCO">
            <summary>
            As EXTRCO, but repeat test for all descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXMOC">
            <summary>
            As EXMOD but ignoring changes to "noclaim" attributes and member lists
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXMOD">
            <summary>
            True if element modified in this extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXNCLH">
            <summary>
            Primary elements in descendant hierarchy not claimed to this extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXOPRM">
            <summary>
            Primary location of extract owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPA">
            <summary>
            Spot value of expansion coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPIRY">
            <summary>
            Protected DB Expiry date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPLTX">
            <summary>
            Expanded projection line text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPMOC">
            <summary>
            As EXPMOD but ignoring changes to "noclaim" attributes and member lists
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPMOD">
            <summary>
            True if primary and element or non-primary descendants have been modified in this extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPR">
            <summary>
            PML or XPath Expression to be executed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXPTYP">
            <summary>
            Expression syntax. Either PML or XPath
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXREFS">
            <summary>
            Externally held References from Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTALS">
            <summary>
            Extract ancestors
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTANT">
            <summary>
            Tolerance angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTBOA">
            <summary>
            Extrusion branch OD A
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTBOB">
            <summary>
            Extrusion branch OD B
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTBOD">
            <summary>
            Extrusion branch outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTBOX">
            <summary>
            Extended block box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTCLS">
            <summary>
            Extract children
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTCNC">
            <summary>
            As EXTCON but excluding non modified elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTCNN">
            <summary>
            As EXTCON but excluding modified elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTCON">
            <summary>
            Primary elements connected/disconnected from element or non primary descendants in extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTDES">
            <summary>
            Extract descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTDIR">
            <summary>
            Direction of ladder exit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTEAA">
            <summary>
            Minimum distance from an extrusion to the next extrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTEAB">
            <summary>
            Minimum distance from centre of an extrusion to next bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTEAH">
            <summary>
            Extrusion collar height (from the top of tube to the end of collar)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTEAK">
            <summary>
            Minimum distance from an extrusion to the pipe end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTEHE">
            <summary>
            Height of extrusion machine
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTFAM">
            <summary>
            Extract family
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTHI">
            <summary>
            Location extract number range, high limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTIME">
            <summary>
            Time of Execution for Command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTLO">
            <summary>
            Location extract number range, low limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTMAS">
            <summary>
            Extract master
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTMRE">
            <summary>
            Extrusion machine reference.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTNO">
            <summary>
            Extract number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTNSN">
            <summary>
            Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTOFF">
            <summary>
            Exit Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTOWN">
            <summary>
            Extract owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTRC">
            <summary>
            Name of extract claiming element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTRCN">
            <summary>
            As EXTCNN, but applied recursively to each connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTRCO">
            <summary>
            As EXTCON, but applied recursively to each connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTREF">
            <summary>
            References to exit level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXWIDT">
            <summary>
            Exit Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EZDI">
            <summary>
            End load point in section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDGGRD">
            <summary>
            True if any edge should be grinded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ELEGAL">
            <summary>
            Electrogalvanise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENHOOK">
            <summary>
            End hook reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENTYCD">
            <summary>
            Type code for end of start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPREPV">
            <summary>
            True if V-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPREPX">
            <summary>
            True if X-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPREPY">
            <summary>
            True if Y-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTEMP">
            <summary>
            True if element is in exclusion list and children are not to be
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECORSZ">
            <summary>
            Size of the earth core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDEREF">
            <summary>
            End reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDGLST">
            <summary>
            Edge list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDGREF">
            <summary>
            Reference to an edge in a PFACE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDSREF">
            <summary>
            Start reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCFR">
            <summary>
            Engineering canvas connection from
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCTO">
            <summary>
            Engineering canvas connection to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECDNAM">
            <summary>
            Engineering Canvas display name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECOPCR">
            <summary>
            Engineering Canvas OPC References
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECPREF">
            <summary>
            Engineering Canvas page reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECREF">
            <summary>
            Engineering Canvas reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECSHRE">
            <summary>
            Engineering canvas sheet reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECSREF">
            <summary>
            Engineering canvas symbol reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTARR">
            <summary>
            Engineering Canvas Types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTFML">
            <summary>
            Engineering canvas text formula
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTREF">
            <summary>
            Engineering Canvas Type Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EIMPED">
            <summary>
            Earth impedance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EREACT">
            <summary>
            Earth reactance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ERESIS">
            <summary>
            Earth resistance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECIREF">
            <summary>
            Engineering Canvas template index reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECMDAT">
            <summary>
            Sequence Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDOCRF">
            <summary>
            Engineering Referenced Document
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDOCRV">
            <summary>
            Engineering Document Revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCPDR">
            <summary>
            Engineering canvas connection point type definition reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCPRE">
            <summary>
            Engineering canvas connection point graphics reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECCPTR">
            <summary>
            Engineering canvas connection point template reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGTYP">
            <summary>
            Engineering Canvas Glyphtype
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECLCLR">
            <summary>
            Engineering Canvas Line Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECLTYP">
            <summary>
            Engineering Canvas Linetype
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECBSRE">
            <summary>
            Engineering canvas backing sheet reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECNUMB">
            <summary>
            Engineering Canvas number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTPLO">
            <summary>
            Template only flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENGDOC">
            <summary>
            Reference to related documents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECSTTY">
            <summary>
            Symbol template type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ENGCHG">
            <summary>
            Changed since Issue
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECRLEN">
            <summary>
            User defined row length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECSTR">
            <summary>
            Engineering canvas symbol template reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTCL">
            <summary>
            Engineering table cell link reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTCR">
            <summary>
            Engineering table cell reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECPGRP">
            <summary>
            Engineering Canvas Palette Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EXTVOL">
            <summary>
            Volume for material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECTREG">
            <summary>
            Engineering canvas template region
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECSTD">
            <summary>
            Engineering Canvas Standard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGHPA">
            <summary>
            Engineering Canvas Grid Horizontal Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGHST">
            <summary>
            Engineering Canvas Grid Horizontal Start Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGHTA">
            <summary>
            Engineering Canvas Grid Horizontal Text Ascending
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGHTF">
            <summary>
            Engineering Canvas Grid Horizontal Text Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGOFF">
            <summary>
            Engineering Canvas Grid Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGPOS">
            <summary>
            Engineering Canvas Grid 2D Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGREF">
            <summary>
            Engineering Canvas Grid Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGSIZ">
            <summary>
            Engineering Canvas Grid Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGVPA">
            <summary>
            Engineering Canvas Grid Vertical Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGVST">
            <summary>
            Engineering Canvas Grid Vertical Start Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGVTA">
            <summary>
            Engineering Canvas Grid Vertical Text Ascending
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGVTF">
            <summary>
            Engineering Canvas Grid Vertical Text Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGTXH">
            <summary>
            Engineering Canvas Grid Text Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EPREPC">
            <summary>
            True if Varying bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECDER">
            <summary>
            Engineering canvas draw entity reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECRMSU">
            <summary>
            Engineering Canvas Revision Mark Subject
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECPIRE">
            <summary>
            Engineering Canvas palette item reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECADAV">
            <summary>
            Attribute Driven Symbol - Attribute Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECADST">
            <summary>
            Engineering Canvas Symbol Templates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ECGUAR">
            <summary>
            Engineering Canvas Guard Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EDOCOR">
            <summary>
            Stores Document order values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EFMFR">
            <summary>
            Engineering Feed Mapping From
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EFMFUN">
            <summary>
            Engineering Feed Mapping Functional Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.EFMTO">
            <summary>
            Engineering Feed Mapping To
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FAAN">
            <summary>
            Skew angle for font file
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FACODE">
            <summary>
            Facode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FAILCO">
            <summary>
            FailCond
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FAREA">
            <summary>
            Construction area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCDATE">
            <summary>
            File creation date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCENTR">
            <summary>
            Centre of fillet arc
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCLXSP">
            <summary>
            Spacing between stair flights in the X direction of the tower
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCLYSP">
            <summary>
            Spacing between stair flights in the Y direction of the tower
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCMEAS">
            <summary>
            Flange correction measure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCODE">
            <summary>
            Face code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCOE">
            <summary>
            Friction coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCOLOU">
            <summary>
            Fill colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCONUM">
            <summary>
            Fill colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCPY">
            <summary>
            Forward copy reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FDBF">
            <summary>
            Reference of FROM DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FDEPD">
            <summary>
            Formatted Local Design Property Default Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FDEPR">
            <summary>
            Formatted Local Design Property Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FDRA">
            <summary>
            Isometric drawing number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEDEXS">
            <summary>
            Feed excess values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEMCOL">
            <summary>
            FEM image object colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEND">
            <summary>
            Fillet arc position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEQDES">
            <summary>
            From Equipment Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFCOLO">
            <summary>
            Front-face colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFCONU">
            <summary>
            Front-face colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFLEXT">
            <summary>
            Edge Extension Around Floor layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFPN">
            <summary>
            Front-face pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFSTRE">
            <summary>
            Front-face linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFSTYL">
            <summary>
            Front-face linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FGAP">
            <summary>
            First offset distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FGRF">
            <summary>
            Reference to boundary faces
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FIHE">
            <summary>
            Project name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILCHK">
            <summary>
            FILCHK (true if fill level check is enabled )
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILEDB">
            <summary>
            DB filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILEEX">
            <summary>
            True if DB file exists and is valid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILL">
            <summary>
            DRAFT user defined symbol fill flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILLDI">
            <summary>
            Fill direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILREF">
            <summary>
            Sorted references to attachment points with ascending order of fill level greater then 0
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILTOP">
            <summary>
            Filter operator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILTVA">
            <summary>
            Filter value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FINO">
            <summary>
            File number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FINPUT">
            <summary>
            Input by
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FIRE">
            <summary>
            Fire resistance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FIRERA">
            <summary>
            Fire rating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FISSUE">
            <summary>
            Current pipe spec issue
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FITLEN">
            <summary>
            Length of branch fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FIXT">
            <summary>
            Structural fixity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLALLO">
            <summary>
            Flange allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLATYP">
            <summary>
            Flange type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLCARE">
            <summary>
            Floor cover area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLCSTH">
            <summary>
            Floor cover thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLCVOL">
            <summary>
            Floor cover volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLEN">
            <summary>
            External file name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLEVEL">
            <summary>
            Fill level at route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLIM">
            <summary>
            Force limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLLARE">
            <summary>
            Floor layer area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLLTHK">
            <summary>
            Floor layer thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLLVOL">
            <summary>
            Floor layer volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLNM">
            <summary>
            Full name of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLNN">
            <summary>
            Name of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLOFFS">
            <summary>
            Flange offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLOW">
            <summary>
            Flow direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLRCOD">
            <summary>
            Floor Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLRECC">
            <summary>
            Flare Eccentricity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLRELE">
            <summary>
            Floor Elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLRELV">
            <summary>
            Floor elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLRHEI">
            <summary>
            Floor Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLROFF">
            <summary>
            Flare Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLRTYP">
            <summary>
            Floor Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLTDIR">
            <summary>
            Stairflight Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLUR">
            <summary>
            Fluid reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLWA">
            <summary>
            DRAFT user defined symbol flow arrow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FMID">
            <summary>
            Middle point of fillet arc
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNAM">
            <summary>
            Filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCCD">
            <summary>
            Functional description code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCTXT">
            <summary>
            Functional description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNMA">
            <summary>
            Standard font file name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNMB">
            <summary>
            Bold font file name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNTD">
            <summary>
            Font directory
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FOLDED">
            <summary>
            True if folded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FONT">
            <summary>
            Text font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FONTG">
            <summary>
            GLabel style text font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FONTN">
            <summary>
            Font name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FOOTRO">
            <summary>
            Foot Room
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FORC">
            <summary>
            Force vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FORDAT">
            <summary>
            Date Format Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FOREDB">
            <summary>
            DB foreign/local
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPATH">
            <summary>
            File path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPEN">
            <summary>
            Fill pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPLINE">
            <summary>
            Process line number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPON">
            <summary>
            FROM port number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPRDE">
            <summary>
            Formatted property default
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPROP">
            <summary>
            Formatted property value from dataset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRAD">
            <summary>
            Fillet radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRDR">
            <summary>
            Reference drawings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FREF">
            <summary>
            Fitting reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FREV">
            <summary>
            Isometric drawing revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRMSCL">
            <summary>
            Form scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRPO">
            <summary>
            Eye point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRSTW">
            <summary>
            Reference of first world of given DB type in current MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSPOST">
            <summary>
            Distance to the first post
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTART">
            <summary>
            Fillet start position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTAT">
            <summary>
            Fstatus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTNUM">
            <summary>
            Fill style number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTREF">
            <summary>
            Fill style Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTYLE">
            <summary>
            Fill style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTYNO">
            <summary>
            Fill Style Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTCDD">
            <summary>
            Formatted Current Design Property Default Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTCDP">
            <summary>
            Formatted Current Design Property Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTER">
            <summary>
            First dimension terminator code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTERID">
            <summary>
            First terminator ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTERSA">
            <summary>
            Dimension first term. code style angular FTERSA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTERSL">
            <summary>
            Dimension first term. code style linear FTERSL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTHICK">
            <summary>
            Stair Flight Thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTSPID">
            <summary>
            First terminator physical style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FULL">
            <summary>
            type of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FULLID">
            <summary>
            Full ID Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FULSYS">
            <summary>
            Type of the element, ignoring UDET, not truncated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FUNC">
            <summary>
            Function
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FUNI">
            <summary>
            FUNIT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FURNRF">
            <summary>
            Furniture Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FABLOC">
            <summary>
            Fabrication location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FASTYP">
            <summary>
            Fastener Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FBCOAT">
            <summary>
            First base coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCOAT">
            <summary>
            Coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FDESIG">
            <summary>
            Fastener Designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFCOAT">
            <summary>
            First finish coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FGRADE">
            <summary>
            Fastener material grade
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLENG">
            <summary>
            Fastener length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSETWE">
            <summary>
            Fastener Set Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSTAND">
            <summary>
            Fastener Standard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FWEI">
            <summary>
            Fastener Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRSTCK">
            <summary>
            First Check Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FASIOW">
            <summary>
            Fabrication assembly item referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FASOWN">
            <summary>
            Fabrication assembly referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FASREF">
            <summary>
            Fabrication assembly item reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FASSEQ">
            <summary>
            Fabrication assembly sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FPHASE">
            <summary>
            Fabrication unit/phase
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FIXLEN">
            <summary>
            Flag to notify if length of the attribute is fixed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLPATH">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FLTYPE">
            <summary>
            File Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FAAAWT">
            <summary>
            Type of area world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FAATYP">
            <summary>
            Type of area world as enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FACREF">
            <summary>
            Reference to a face in a PFACE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FICHOL">
            <summary>
            Fictitious hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCAA">
            <summary>
            Returns an adjoining area given a point and location vector.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCAFP">
            <summary>
            Returns the functional area that contains the given point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCCL">
            <summary>
            Returns the closest limit to a point within an area.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCCOA">
            <summary>
            Centre of Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCLOB">
            <summary>
            Length of boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCTAR">
            <summary>
            Total area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFCRGB">
            <summary>
            RGB front face colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FFCRGP">
            <summary>
            RGB front face colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILRGB">
            <summary>
            RGB fill colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FILRGP">
            <summary>
            RGB fill colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCACWT">
            <summary>
            Type of curve world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FCATYP">
            <summary>
            Type of curve world as enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FHIER">
            <summary>
            References to functional model hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FNCLCB">
            <summary>
            Length of curve branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FABRIC">
            <summary>
            Shop or Site fabrication status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEANAM">
            <summary>
            Detailing Feature Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEASNM">
            <summary>
            Detailing Feature Set Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FEAVAL">
            <summary>
            Detailing Feature Values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTA">
            <summary>
            Free Text Attribute 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTB">
            <summary>
            Free Text Attribute 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTC">
            <summary>
            Free Text Attribute 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTD">
            <summary>
            Free Text Attribute 4
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTE">
            <summary>
            Free Text Attribute 5
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTF">
            <summary>
            Free Text Attribute 6
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTG">
            <summary>
            Free Text Attribute 7
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FRTXTH">
            <summary>
            Free Text Attribute 8
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FREFID">
            <summary>
            Reference information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FTVALS">
            <summary>
            t Values for nesting components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FULLEN">
            <summary>
            Total length of manufactured profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSPMNU">
            <summary>
            Factory Standard Part Mark Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSPREF">
            <summary>
            Reference to Factory Standard Part element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.FSPTXT">
            <summary>
            Factory Standard Part Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GANGLE">
            <summary>
            General Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPALL">
            <summary>
            Gap Allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPF">
            <summary>
            First offset distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPI">
            <summary>
            Intermediate offset distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPS">
            <summary>
            Projection line gap array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAREA">
            <summary>
            Ceiling Grid Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GASTIG">
            <summary>
            Gas Tight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GATECO">
            <summary>
            Gate Configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GATEHE">
            <summary>
            Gate Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GATESI">
            <summary>
            Gate Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GATEWD">
            <summary>
            Gate Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GBOX">
            <summary>
            Box gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GBOXTX">
            <summary>
            Box gap text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GCOF">
            <summary>
            Gross centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GDEFIN">
            <summary>
            Glyph Outline Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GDIAM">
            <summary>
            Glyph Circle Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GENGT">
            <summary>
            Geometry type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GENSTR">
            <summary>
            General strings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GENTYP">
            <summary>
            Type of geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GEODEP">
            <summary>
            Direct geometrical dependencies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GEODIF">
            <summary>
            True if geometry has changed for an element since comparison session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GEOHEI">
            <summary>
            Elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GEOM">
            <summary>
            Geometry Modified- Not directly queryable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GFIL">
            <summary>
            Comparator FILE NAME USED FOR GRAPHICS STORAGE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GFILLD">
            <summary>
            Glyph Primitive Filled Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GHEIGH">
            <summary>
            Gate Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GLBSTR">
            <summary>
            True if Project has Global structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GLBVER">
            <summary>
            Global version string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GLINKP">
            <summary>
            Project has Linked Documents distribution enabled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GLYNO">
            <summary>
            Glyph Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GLYNUM">
            <summary>
            Glyph Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GLYREF">
            <summary>
            Glyph Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GMOF">
            <summary>
            Gross moments of inertia
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GMRE">
            <summary>
            Geometry set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GOBREF">
            <summary>
            Generating reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GOFFS">
            <summary>
            Glyph Primitive offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GOING">
            <summary>
            Tread Going
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPIC">
            <summary>
            Comparator PICTURE NUMBER FOR THIS SHEET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPPRXS">
            <summary>
            Group proxy items referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPREF">
            <summary>
            Group item reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPRFTY">
            <summary>
            Group item reference type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPSTR">
            <summary>
            General purpose strings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPSTRA">
            <summary>
            General purpose string 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPSTRB">
            <summary>
            General purpose string 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPSTRC">
            <summary>
            General purpose string 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPSTRD">
            <summary>
            General purpose string 4
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRAD">
            <summary>
            Steel grade
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRAXE">
            <summary>
            Grid axes (internal)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDAXE">
            <summary>
            Grid axes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDDIR">
            <summary>
            Grid direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDE">
            <summary>
            Gradient of implied tube. Gradient is the vertical rise(fall) divided by the horizontal distance.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDID">
            <summary>
            Grid plane index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDLBL">
            <summary>
            Planes Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDLID">
            <summary>
            Gridline Identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDLXP">
            <summary>
            Proportion along X gridline from Gridline ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDLYP">
            <summary>
            Proportion along Y gridline from Gridline ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDOFF">
            <summary>
            Grid offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDPOS">
            <summary>
            Grid Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDREF">
            <summary>
            Grid reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDXSP">
            <summary>
            Grid X Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDYSP">
            <summary>
            Grid Y Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDNM">
            <summary>
            Design grid reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDNX">
            <summary>
            Design element as text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDX">
            <summary>
            Grid X position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDXP">
            <summary>
            X position of the symbol according to the gridding definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDY">
            <summary>
            Grid Y position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDYP">
            <summary>
            Y position of the symbol according to the gridding definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIDZ">
            <summary>
            Grid Z position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRILEN">
            <summary>
            Length of grinding intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIND">
            <summary>
            Grinding info
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRINUM">
            <summary>
            Number of grinding intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRIP">
            <summary>
            Minimum distance between bends
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GROUPS">
            <summary>
            GPSETs in which element occurs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRPRF">
            <summary>
            Reference to group (owner of location)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRSYS">
            <summary>
            Grid system reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GSRF">
            <summary>
            Gross surface area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GSTR">
            <summary>
            Structural geometry set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GTAREA">
            <summary>
            All areas whose bounding box fully or partially enclose element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GTEXAR">
            <summary>
            All areas that fully or partially enclose element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GTGROU">
            <summary>
            All groups that fully enclose element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GTROOM">
            <summary>
            All rooms that fully enclose element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GTXT">
            <summary>
            Text storing rule to generate Inventory List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GTYP">
            <summary>
            Generic type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GVOL">
            <summary>
            Gross volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GWEI">
            <summary>
            Gross weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GWIDTH">
            <summary>
            Gate Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GXLEN">
            <summary>
            Glyph Rectangle XLength
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GXYOFF">
            <summary>
            Grid XY Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GYLEN">
            <summary>
            Glyph Rectangle YLength
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPPOS">
            <summary>
            Gap definition points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPWID">
            <summary>
            Gap width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GOVCOM">
            <summary>
            Baseline governing component reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRREL">
            <summary>
            Governing revision relationship type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRPSCR">
            <summary>
            Indicates screened or shielded group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRPSEQ">
            <summary>
            Core group sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRPTYP">
            <summary>
            Text storing group type for cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GAPLEN">
            <summary>
            Gap length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GENIX">
            <summary>
            generation information for x direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GENIY">
            <summary>
            generation information for y direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GENIZ">
            <summary>
            generation information for z direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPENH">
            <summary>
            pen for hidden lines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPENV">
            <summary>
            pen for visible lines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDAC">
            <summary>
            Detailing Model Grid Access Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDNUM">
            <summary>
            grid number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDTYP">
            <summary>
            grid type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GRDVIS">
            <summary>
            visibility of the grid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.GPRTRE">
            <summary>
            Gpart reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HANEXP">
            <summary>
            HANCI expected position wrt the start of the COMPRE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HANGLE">
            <summary>
            Hatching Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HANICO">
            <summary>
            HANCI INTERNAL CACHED OFFSET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HANICP">
            <summary>
            INTERNAL HANCI cached position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HANOFF">
            <summary>
            HANCI cached position offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HANPOS">
            <summary>
            Support cached position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HARDTY">
            <summary>
            Hard type of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HAZARD">
            <summary>
            Hazard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HAZTYP">
            <summary>
            Hazard Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HBLBOX">
            <summary>
            Block box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HBOR">
            <summary>
            Head bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HCCNT">
            <summary>
            Header/Extract list changes count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HCOFG">
            <summary>
            computed hull item centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HCON">
            <summary>
            Head connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HCORRO">
            <summary>
            Head Corrosion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HCREF">
            <summary>
            Head connections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDBREF">
            <summary>
            Generic Hull DB Ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDCONN">
            <summary>
            List of elements connected to branch head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDIR">
            <summary>
            Head direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDIST">
            <summary>
            Horizontal Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDMF">
            <summary>
            ISODRAFT Reference Dimension attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDMT">
            <summary>
            ISODRAFT Reference Dimension attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDREF">
            <summary>
            List of attachment connected to attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HDUPLI">
            <summary>
            Duplicates of the current element (checking members)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEADCL">
            <summary>
            Head Clearance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEADRO">
            <summary>
            Headroom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEATT">
            <summary>
            Heat Treatment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEIARR">
            <summary>
            Height array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEID">
            <summary>
            Default Height value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEIF">
            <summary>
            Height attractor factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEIG">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEIL">
            <summary>
            Height limits (Min/Max)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEIS">
            <summary>
            Height set flag - ignore Height values if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEND">
            <summary>
            Connection at other end of HREF (HEAD or TAIL)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HGHT">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HGSIDE">
            <summary>
            Hinge side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHBO">
            <summary>
            Hanger head bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHBP">
            <summary>
            Bottom of hanger head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHCO">
            <summary>
            Hanger head connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHDR">
            <summary>
            Hanger head direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHGR">
            <summary>
            Hanger head gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHOD">
            <summary>
            Hanger head outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHPO">
            <summary>
            Hanger head position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HHTP">
            <summary>
            Top of hanger head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HIER">
            <summary>
            Structural connections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HIST">
            <summary>
            History of sessions in which element or specified attribute were made
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HLCOLO">
            <summary>
            Hull Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HLIS">
            <summary>
            List of all possible types in owning hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HLSTRE">
            <summary>
            Hatching linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HLSTYL">
            <summary>
            Hatching linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HMAV">
            <summary>
            Average humidity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HMMA">
            <summary>
            Maximum humidity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HMMI">
            <summary>
            Minimum humidity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HNCKEY">
            <summary>
            Hole Notch Cutout Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HNODEL">
            <summary>
            Hnode list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOFFSE">
            <summary>
            Hatching Line Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOLGRD">
            <summary>
            True if any hole in the part should be grinded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOOPSP">
            <summary>
            Hoop Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOST">
            <summary>
            Host Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HPATNO">
            <summary>
            Hatch Pattern Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HPOS">
            <summary>
            Head position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HPOSE">
            <summary>
            Easting of head position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HPOSN">
            <summary>
            Northing of head position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HPOSU">
            <summary>
            Upping of head position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HPREF">
            <summary>
            Head point reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRDPRX">
            <summary>
            References from all constituent elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HREF">
            <summary>
            Head reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HREL">
            <summary>
            Branch Member Head relative flag (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRFCMP">
            <summary>
            Components refed by this object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRFOBJ">
            <summary>
            Referencing objects
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRJUSL">
            <summary>
            Handrail Justification Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HROBS">
            <summary>
            Handrail Obstruction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HROFF">
            <summary>
            Handrail Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRSDIS">
            <summary>
            Handrail Start Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRSF">
            <summary>
            Hatch ruleset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRSTAR">
            <summary>
            Handrail Start Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSARFA">
            <summary>
            HVACSpool arrive references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSEPAR">
            <summary>
            Hatching Line Separation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSLRFA">
            <summary>
            HVACSpool leave references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSPE">
            <summary>
            Hanger specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSRFA">
            <summary>
            Computed Hull item surface area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSRO">
            <summary>
            Headrod specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSTU">
            <summary>
            Head tube specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSTYF">
            <summary>
            Hatch style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTBO">
            <summary>
            Hanger tail bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTBP">
            <summary>
            Bottom of hanger tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTCO">
            <summary>
            Hanger tail connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTDR">
            <summary>
            Hanger tail direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTGR">
            <summary>
            Hanger tail gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTOD">
            <summary>
            Hanger tail outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTPO">
            <summary>
            Hanger tail position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTPREF">
            <summary>
            Topology reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTTP">
            <summary>
            Top of hanger tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HTYP">
            <summary>
            Hanger type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUBRF">
            <summary>
            Reference to the hub location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUEXPS">
            <summary>
            The exposed side elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUGENS">
            <summary>
            The generating side elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HULAPP">
            <summary>
            Hull applicable Geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HULCNT">
            <summary>
            Size of hull array/collection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HULLDE">
            <summary>
            True if element is a hull design item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HULLOB">
            <summary>
            Hull object reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HULLPR">
            <summary>
            True if element is a hull production item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HULOC">
            <summary>
            Location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUMIDI">
            <summary>
            Design Humidity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUMIRR">
            <summary>
            True if mirrored in local v-axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUMVW">
            <summary>
            Model View
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUREFL">
            <summary>
            Reflected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUREPL">
            <summary>
            Replica
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HUSYMM">
            <summary>
            Symmetrical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HVOLU">
            <summary>
            Computed Hull Item volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HWALLT">
            <summary>
            Head wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HWEIG">
            <summary>
            computed analytic hull item weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HWRF">
            <summary>
            Head Working Point (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYACTV">
            <summary>
            Actual value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYAEAP">
            <summary>
            Aft end of Ls aft of AP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYAIDX">
            <summary>
            Attained index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYALKT">
            <summary>
            Above water line KG2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYAOPS">
            <summary>
            Active opening states
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYARAT">
            <summary>
            Area ratio
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYASSE">
            <summary>
            Assessment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYAWLA">
            <summary>
            Above water line area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBDAE">
            <summary>
            Aft extent of bay
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBDFE">
            <summary>
            Fwd extent of bay
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBEMO">
            <summary>
            Bending moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBHAT">
            <summary>
            Breadth of hatch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBHFC">
            <summary>
            Bulkhead factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBML">
            <summary>
            BMl
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBMT">
            <summary>
            BMt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBPPM">
            <summary>
            % of max allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBUIL">
            <summary>
            Builder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBVAL">
            <summary>
            b value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYBWL">
            <summary>
            Breadth in water line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCAST">
            <summary>
            Damage case + state
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCB">
            <summary>
            Block coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCBWL">
            <summary>
            Block coefficient calc in water line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCBX">
            <summary>
            CB including volume for shell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCLET">
            <summary>
            Call letters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCM">
            <summary>
            Midship area coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCMWL">
            <summary>
            Midship area coefficient calc in water line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCOLR">
            <summary>
            Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCOMP">
            <summary>
            Compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCONA">
            <summary>
            Condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCONB">
            <summary>
            Condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCOND">
            <summary>
            Loading condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCP">
            <summary>
            Prismatic coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCPCA">
            <summary>
            Compartment category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCPER">
            <summary>
            Probabilistic permeability values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCPID">
            <summary>
            Compartment ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCPNA">
            <summary>
            Compartment name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCPWL">
            <summary>
            Prismatic coefficient calc in water line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRCA">
            <summary>
            Critical case
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRDA">
            <summary>
            Damage stability criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRIC">
            <summary>
            Intact stability criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRIT">
            <summary>
            Criterion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRIV">
            <summary>
            Critical value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRKG">
            <summary>
            Critical KGf
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCROW">
            <summary>
            Crowding lever
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCRPR">
            <summary>
            Probabilistic damage stability criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTBT">
            <summary>
            Bay Title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTCT">
            <summary>
            Container type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTNA">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTNO">
            <summary>
            Number of containers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTRM">
            <summary>
            Trim
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTTI">
            <summary>
            Loading set title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTTR">
            <summary>
            Tier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTTY">
            <summary>
            Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCTYP">
            <summary>
            Intact/Damaged
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCVCG">
            <summary>
            Critical VCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCVOL">
            <summary>
            Cargo volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCW">
            <summary>
            Water plane area coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYCWWL">
            <summary>
            Water plane area coefficient calc in water line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDAP">
            <summary>
            Draft at AP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDATP">
            <summary>
            Damage type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDCID">
            <summary>
            Damage case
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDCMP">
            <summary>
            Damaged compartments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDECK">
            <summary>
            Deck
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDEFW">
            <summary>
            Deadweight Fresh water
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDEIM">
            <summary>
            Deck edge immersion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDENS">
            <summary>
            Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDESC">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDESD">
            <summary>
            Design draft moulded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDESW">
            <summary>
            Deadweight Salt water
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDFP">
            <summary>
            Draft at FP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDHGT">
            <summary>
            Height (H)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDHMX">
            <summary>
            Hmax
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDIFW">
            <summary>
            Displacement Fresh water
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDISP">
            <summary>
            Displacement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDISW">
            <summary>
            Displacement Salt water
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDLCF">
            <summary>
            Draft at LCF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDLOA">
            <summary>
            Loading condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDLOD">
            <summary>
            Displacement at load draft
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDMAX">
            <summary>
            Draft marks aft x
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDMAZ">
            <summary>
            Draft marks aft z
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDMCA">
            <summary>
            Damage cases compartment is part of
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDMFX">
            <summary>
            Draft marks fwd x
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDMFZ">
            <summary>
            Draft marks fwd z
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDNAM">
            <summary>
            Descriptive name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDOBU">
            <summary>
            Date of build
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDORI">
            <summary>
            Distance from origin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDOWN">
            <summary>
            Downflood
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDPCA">
            <summary>
            Depth of cargo
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDPTH">
            <summary>
            Depth moulded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDRAF">
            <summary>
            Draft
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDRAM">
            <summary>
            Draft aft at marks
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDRAP">
            <summary>
            Draft AP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDREF">
            <summary>
            Damage case ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDRFM">
            <summary>
            Draft fwd at marks
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDRFP">
            <summary>
            Draft FP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDS">
            <summary>
            DS
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDTOL">
            <summary>
            Draft tolerance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYDWTM">
            <summary>
            Deadweight moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYEFUL">
            <summary>
            Weight full
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYEVCG">
            <summary>
            VCG Empty
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYEXTR">
            <summary>
            Hydrostatics calculated to extreme/moulded drafts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFAGL">
            <summary>
            Flood angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFANG">
            <summary>
            Flood angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFBDP">
            <summary>
            Freeboard depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFBRD">
            <summary>
            Freeboard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFLAG">
            <summary>
            Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFRAM">
            <summary>
            Frames
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFRFR">
            <summary>
            From frame
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFRSP">
            <summary>
            Frame spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFSC">
            <summary>
            FSC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFSM">
            <summary>
            Free surface moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYFVCG">
            <summary>
            VCG Full
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGCMP">
            <summary>
            Compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGHGT">
            <summary>
            Height of water above grounding point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGHIN">
            <summary>
            Stability calculations heel increment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGHMO">
            <summary>
            Allowable Grain Heeling Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGIRD">
            <summary>
            Girder depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGM">
            <summary>
            GM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGMT">
            <summary>
            GMt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGRAN">
            <summary>
            Grain angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGTON">
            <summary>
            Gross tonnage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGZ">
            <summary>
            GZ
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGZAR">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGZMA">
            <summary>
            Max GZ
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGZMD">
            <summary>
            Max GZ at degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYGZRA">
            <summary>
            GZ-range
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHABV">
            <summary>
            Height above
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHAFR">
            <summary>
            Heel angle from
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHAMD">
            <summary>
            Hatch height over moulded depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHATO">
            <summary>
            Heel angle to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHEEL">
            <summary>
            Heel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHEEM">
            <summary>
            Critical Heel moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHGHT">
            <summary>
            Height KG2 - KG1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHGTH">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHINC">
            <summary>
            Balancing tolerance heel increment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHMOM">
            <summary>
            Horizontal Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHOBM">
            <summary>
            Hog bending moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHOSA">
            <summary>
            Hog(+ve)/Sag(-ve)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYHWLE">
            <summary>
            Heavy weights lever
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYICGM">
            <summary>
            Int Cr. GMf
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYICKG">
            <summary>
            Int Cr. KGf
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYIL">
            <summary>
            IL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYIMO">
            <summary>
            IMO Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYIMST">
            <summary>
            Immersion status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYISCR">
            <summary>
            Intact stability criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYISTP">
            <summary>
            Inner structure type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYIT">
            <summary>
            IT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYKG">
            <summary>
            KG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYKGF">
            <summary>
            KGf
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYKML">
            <summary>
            KML
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYKMT">
            <summary>
            KMT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYKN">
            <summary>
            KN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYKTHK">
            <summary>
            Keel plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLBHS">
            <summary>
            Longitudinal bulkhead(s)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLBP">
            <summary>
            Length between perpendiculars
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLCB">
            <summary>
            LCB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLCF">
            <summary>
            LCF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLCG">
            <summary>
            LCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLGTH">
            <summary>
            Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLISD">
            <summary>
            Lightest service draft (d0)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLLID">
            <summary>
            ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLOA">
            <summary>
            Length over all
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLOAL">
            <summary>
            Loadline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLSEP">
            <summary>
            Longitudinal separation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLSKG">
            <summary>
            Lightship KG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLSW">
            <summary>
            Lightship weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWAE">
            <summary>
            Aft extent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWFE">
            <summary>
            Fwd extent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWGT">
            <summary>
            Lightship weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWIT">
            <summary>
            Item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWL">
            <summary>
            Length in water line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWWA">
            <summary>
            Weight aft
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYLWWF">
            <summary>
            Weight fwd
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMAXX">
            <summary>
            Max X
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMAXY">
            <summary>
            Max Y
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMAXZ">
            <summary>
            Max Z
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMDMI">
            <summary>
            Mean draft at midships
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMINX">
            <summary>
            Min X
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMINY">
            <summary>
            Min Y
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMINZ">
            <summary>
            Min Z
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMITR">
            <summary>
            Max number of iterations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMNGR">
            <summary>
            Manager
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMTC">
            <summary>
            MTC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMVCG">
            <summary>
            Minimum VCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYMVOL">
            <summary>
            Moulded volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYNTON">
            <summary>
            Net tonnage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYNVSF">
            <summary>
            neg ve shear force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYOFAP">
            <summary>
            Origin from AP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYOFNR">
            <summary>
            Official number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYOPHG">
            <summary>
            Opening height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYOPNS">
            <summary>
            Openings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPASS">
            <summary>
            Pass?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPAWT">
            <summary>
            A * wt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPCTF">
            <summary>
            Percentage full
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPDCK">
            <summary>
            Deck(s)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPDIA">
            <summary>
            Propeller diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPERM">
            <summary>
            Permeability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPODC">
            <summary>
            Downflood compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOID">
            <summary>
            Position ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOLO">
            <summary>
            Location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPORE">
            <summary>
            Port of registry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOSA">
            <summary>
            Position 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOSB">
            <summary>
            Position 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOSI">
            <summary>
            Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOST">
            <summary>
            Active opening states
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOSX">
            <summary>
            Position x
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOSY">
            <summary>
            Position y
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOSZ">
            <summary>
            Position z
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOTP">
            <summary>
            Position type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOXD">
            <summary>
            Positive x-direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPOYD">
            <summary>
            Positive y-direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPPSA">
            <summary>
            Pivot point swing angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPPTX">
            <summary>
            Pivot point x-pos
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPPTY">
            <summary>
            Pivot point y-pos
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPPTZ">
            <summary>
            Pivot point z-pos
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRIM">
            <summary>
            Propeller required immersion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRLA">
            <summary>
            Propeller location fwd of AP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRP">
            <summary>
            p
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRR">
            <summary>
            r
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRS">
            <summary>
            s
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRV">
            <summary>
            v
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRVW">
            <summary>
            p*r*v*wt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPRWT">
            <summary>
            wt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPSHH">
            <summary>
            Propeller shaft height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPTHK">
            <summary>
            Shell plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYPVSF">
            <summary>
            pos ve shear force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYRARE">
            <summary>
            Required Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYREGI">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYRIDX">
            <summary>
            Required index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSABM">
            <summary>
            Sag bending moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSARE">
            <summary>
            Shifted Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSBDL">
            <summary>
            Subdivision Length (Ls)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSCOR">
            <summary>
            Correction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSDLE">
            <summary>
            Subdivision length (Ls)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSDLL">
            <summary>
            Subdivision Load line (ds)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSFBD">
            <summary>
            Summer Freeboard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSHFO">
            <summary>
            Shearing force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSHNA">
            <summary>
            Ship Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSHTP">
            <summary>
            Ship Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSLCG">
            <summary>
            Shifted LCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSLOP">
            <summary>
            Slope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSNOT">
            <summary>
            Note on setting and content
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSOUN">
            <summary>
            Sounding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSPER">
            <summary>
            Permeability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSPPM">
            <summary>
            % of max allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSTAP">
            <summary>
            AP is at station
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSTAT">
            <summary>
            Stations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSTCG">
            <summary>
            Shifted TCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSTFP">
            <summary>
            FP is at station
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSTGZ">
            <summary>
            Stepped GZ curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSULD">
            <summary>
            Summer load draft
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSUZO">
            <summary>
            Sub Zone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSVAL">
            <summary>
            s-value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYSVCG">
            <summary>
            Shifted VCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTBHA">
            <summary>
            Transverse bulkhead aft
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTBHF">
            <summary>
            Transverse bulkhead fwd
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTCB">
            <summary>
            TCB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTCF">
            <summary>
            TCF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTCG">
            <summary>
            TCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTEMP">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTFSM">
            <summary>
            Total free surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTHMO">
            <summary>
            Trimmed Horizontal Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTLIQ">
            <summary>
            Total hatch length inside L/4
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTMOM">
            <summary>
            Transverse moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTORS">
            <summary>
            Torsion moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTOWL">
            <summary>
            Towing lever
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTPC">
            <summary>
            TPC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTRIM">
            <summary>
            Trim
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTSEP">
            <summary>
            Transverse separation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTTOL">
            <summary>
            Trim tolerance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTURN">
            <summary>
            Turning lever
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTVMO">
            <summary>
            Trimmed Vertical Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYTYPE">
            <summary>
            Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYUHMO">
            <summary>
            Untrimmed Horizontal Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYULKO">
            <summary>
            Under water line KG1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYULLA">
            <summary>
            Ullage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYUVMO">
            <summary>
            Untrimmed Vertical Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYUWLA">
            <summary>
            Under water line area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVARM">
            <summary>
            Vertical Area Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVCB">
            <summary>
            VCB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVCG">
            <summary>
            VCG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVMOM">
            <summary>
            Vertical Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVOID">
            <summary>
            Void depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVOLU">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVSEP">
            <summary>
            Vertical separation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYVVAL">
            <summary>
            v value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWADE">
            <summary>
            Sea water density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWDTH">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWEIT">
            <summary>
            Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWEMP">
            <summary>
            Weight empty
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWGHT">
            <summary>
            Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWIND">
            <summary>
            Wind lever
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWLHG">
            <summary>
            Water line heights
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWLLE">
            <summary>
            Waterline length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWLRA">
            <summary>
            WL Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWODH">
            <summary>
            Water on deck height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWODS">
            <summary>
            Water on deck significant wave height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWPA">
            <summary>
            WPA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWSA">
            <summary>
            WSA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYWTSU">
            <summary>
            Wetted surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYYAFT">
            <summary>
            y-aft
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYYANO">
            <summary>
            Yard number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYYFWD">
            <summary>
            y-fwd
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HYZONE">
            <summary>
            Zone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOOGEO">
            <summary>
            Hook definition curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOOTYP">
            <summary>
            Hook type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HSVLD">
            <summary>
            HVACspool valid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEADH">
            <summary>
            Head duct height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HEADW">
            <summary>
            Head duct width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HZAXI">
            <summary>
            head Z axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOLDES">
            <summary>
            Hole Designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HOLTYP">
            <summary>
            Detailing Model Hole Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.HRCLE">
            <summary>
            HANDRAIL CLEAR WIDTH
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IAKEY">
            <summary>
            Integer attribute key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IALIGN">
            <summary>
            Integer vertical alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IBLNAM">
            <summary>
            Name of idealised block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICAT">
            <summary>
            Insulation catalogue reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICLASS">
            <summary>
            Interference class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICLMO">
            <summary>
            Centreline mode as integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICON">
            <summary>
            ICON
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICONL">
            <summary>
            ICONL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICONN">
            <summary>
            COMMS connection type (0/1 = on/off-line)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICONS">
            <summary>
            ICONS
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICOTYP">
            <summary>
            Icon used for element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ICURF">
            <summary>
            Integer curve fitting code: 1 default, 2 cubicfit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDENT">
            <summary>
            Panel identification string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDET">
            <summary>
            Insulation detail text reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDFLA">
            <summary>
            Integer radial dimension type flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLABL">
            <summary>
            Length of label idle movement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLFAC">
            <summary>
            Idle movement factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLFG">
            <summary>
            Integer linear/angular dimension line flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLL">
            <summary>
            Burning idle length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLLEN">
            <summary>
            Non-burning idle length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLN">
            <summary>
            Drawlist name reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLX">
            <summary>
            Drawlist name (as text)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDNM">
            <summary>
            Design data or catalogue component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDNX">
            <summary>
            Design data or catalogue component (as text)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDPLAN">
            <summary>
            ID Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDPREF">
            <summary>
            ID Prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDRT">
            <summary>
            Insulation detail RTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDSPU">
            <summary>
            Specified unique identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDST">
            <summary>
            Insulation detail STEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDSTY">
            <summary>
            Integer radial dimension style flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTAN">
            <summary>
            Integer dimension text angle flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTANA">
            <summary>
            Integer dim. text angle flag style angular
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTANL">
            <summary>
            Integer dim. text angle flag style linear
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTANR">
            <summary>
            Integer dim. text angle flag style radiant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTER">
            <summary>
            Integer dimension terminator code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTFL">
            <summary>
            Integer dimension text radius flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTT">
            <summary>
            Insulation detail TTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDTUL">
            <summary>
            Integer dimension text underlining flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IFTER">
            <summary>
            Integer first dimension terminator code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IGAP">
            <summary>
            Intermediate offset distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IGNDUN">
            <summary>
            Ignore DUnion flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IJUST">
            <summary>
            Integer justification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILPBUA">
            <summary>
            Return Integrator Build Area derived from Area Limit Point Labels
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILPDLB">
            <summary>
            Integrator Area Limit Point downstream label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILPOFF">
            <summary>
            Integrator Area Limit Point offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILPPOI">
            <summary>
            Integrator Area Limit Point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILPSCH">
            <summary>
            Integrator Area Limit Point schematic element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILPULB">
            <summary>
            Integrator Area Limit Point upstream label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILSHA">
            <summary>
            Leader shape code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ILTER">
            <summary>
            Integer label terminator code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMAT">
            <summary>
            Insulation material text reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMGDAT">
            <summary>
            Image data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMGSCA">
            <summary>
            Image scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMPED">
            <summary>
            Impedance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMXT">
            <summary>
            Insulation material XTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMYT">
            <summary>
            Insulation material YTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IMZT">
            <summary>
            Insulation material ZTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INARCO">
            <summary>
            Number of integers in Argument list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INBY">
            <summary>
            Comparator USER WHO IMPORTED THE TRANSFER FILE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCBOR">
            <summary>
            Inch Nominal Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCFLU">
            <summary>
            Additional elements to include for flush
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCL">
            <summary>
            Inclination angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCO">
            <summary>
            Array of integers for ROUTER internal points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCPRO">
            <summary>
            Additional elements to include for data propagation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCSTA">
            <summary>
            Input Command Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCWRK">
            <summary>
            Increment at working revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INDA">
            <summary>
            Comparator DATE OF IMPORT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INFA">
            <summary>
            Client info - Project Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INFB">
            <summary>
            Comment - Project Message
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INFG">
            <summary>
            Insulation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INFOTE">
            <summary>
            Infotext
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INIVAL">
            <summary>
            Initial Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INLEN">
            <summary>
            Insulation length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INMTRF">
            <summary>
            INSMAT Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INPIND">
            <summary>
            Insulation pin density (Area)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INPINL">
            <summary>
            Pin length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INPINT">
            <summary>
            Insulation pin type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INPRTR">
            <summary>
            Inside paint reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INRE">
            <summary>
            Insulation reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INRF">
            <summary>
            Array of Inventory Items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSARE">
            <summary>
            Insulation requirement area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSC">
            <summary>
            Inspection schedule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSL">
            <summary>
            DRAFT user defined symbol insulation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSTNC">
            <summary>
            Bracket instance name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSTOP">
            <summary>
            Installation Options
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSURE">
            <summary>
            Reference to a INSCMP element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSUTY">
            <summary>
            Insulation type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSYST">
            <summary>
            Reference Array of all SYSGRPs Elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INTARG">
            <summary>
            Arguments for command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INTHK">
            <summary>
            Insulation thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INTSEN">
            <summary>
            Installation Sense - true if clockwise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INTY">
            <summary>
            Inventory item type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INUDTG">
            <summary>
            Is in Udtg
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INVF">
            <summary>
            Array of Inventory Items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INVI">
            <summary>
            Visibility state
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INVMAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INVREF">
            <summary>
            T/F on attributes that are invalid references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IOCOD">
            <summary>
            Hashed origin code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPAR">
            <summary>
            Parameters of the insulation catalogue component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPATNA">
            <summary>
            Integer pattern Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPJUST">
            <summary>
            Integer pjustification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPMOD">
            <summary>
            Plane mode as integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPRBLN">
            <summary>
            Integer primitive blanking flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPRE">
            <summary>
            Internal pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IPTAN">
            <summary>
            Integer projection line text angle flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IRCOD">
            <summary>
            Integer direction of region vertical on sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IRNO">
            <summary>
            ISO-IR number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISALLO">
            <summary>
            True if database is allocated at this location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISCOPY">
            <summary>
            True if a copy DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISDBFR">
            <summary>
            True if database is foreign
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISDBPR">
            <summary>
            True if database is primary for global working
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISDRDB">
            <summary>
            True if database has drawings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISECPT">
            <summary>
            Intersection point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISENS">
            <summary>
            Integer sense
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISEXAP">
            <summary>
            True if extract ancestry is primary here
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISEXCP">
            <summary>
            True if all extract children are primary here
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISEXFP">
            <summary>
            True if extract family is primary here
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISEXMP">
            <summary>
            True if extract master is primary here
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISEXOP">
            <summary>
            True if extract owner is primary here
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISEXTR">
            <summary>
            True if an extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISFOR">
            <summary>
            True if database is foreign
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISIDES">
            <summary>
            Frame side visibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISKEYD">
            <summary>
            Does ukey incorporate DB number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISLNKD">
            <summary>
            True if database may have Linked documents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISLOAD">
            <summary>
            True if Sheet is loaded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISMAST">
            <summary>
            True if a Master DB, i.e. top level extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISNAME">
            <summary>
            True if element is named
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISOH">
            <summary>
            Isohidden flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISOLT">
            <summary>
            Location isolation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISPE">
            <summary>
            Insulation spec reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISPICF">
            <summary>
            Picture has File
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISPR">
            <summary>
            Insulation specification component reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISPRIM">
            <summary>
            True if database is primary at this location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISSEXT">
            <summary>
            States to issue extracts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISSTEN">
            <summary>
            Is start ENDATUM; order depending on owned FIXING
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISSUE">
            <summary>
            True if drawing has been issued
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISTYP">
            <summary>
            Database type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISUPGD">
            <summary>
            True if Upgrade is required for DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISWORK">
            <summary>
            True if a working extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITCOD">
            <summary>
            Hashed origin code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITLE">
            <summary>
            Length of implied tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITLN">
            <summary>
            Comparator (PIPE)LINE OF THE ITEM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITMTBL">
            <summary>
            Table linking AITEMS elements to piping components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITOW">
            <summary>
            Comparator OWNER OF THE ITEM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITPD">
            <summary>
            Comparator POINTS TO SHEET ELEMENT WHICH BELONGS TO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITPS">
            <summary>
            Position of implied tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITRE">
            <summary>
            Comparator REVISION STATUS OF THE ITEM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITSI">
            <summary>
            Comparator SIZE OF THE ITEM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITSP">
            <summary>
            Comparator SPEC OF THE ITEM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITTY">
            <summary>
            Comparator (PIPE)LINE SPECIFICATION
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ITXALI">
            <summary>
            Integer text vertical alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IVTYP">
            <summary>
            Integer type of design view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IWDORF">
            <summary>
            Weld owners attribute on IWELD elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IWDOWN">
            <summary>
            Table linking IWELD elements to piping components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IGNBRK">
            <summary>
            Ignore isometric spec break
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLIEV">
            <summary>
            Evaluated list of idlist elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INUNIQ">
            <summary>
            Flag to notify if attribute is used in uniqueness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INTEMP">
            <summary>
            Insulation temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INCANG">
            <summary>
            Inclination angles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSHOL">
            <summary>
            Insert hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IFCUID">
            <summary>
            Universally unique identifier from external sources (in IFC format)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INNSHD">
            <summary>
            Inner sheath diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSLEV">
            <summary>
            Insulation level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSMTL">
            <summary>
            Insulation material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISHMTL">
            <summary>
            Inner sheath material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSCOL">
            <summary>
            Insulation colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSRAD">
            <summary>
            Inside Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSTLV">
            <summary>
            Installation level of cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.IDLELN">
            <summary>
            Length of idle movement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSREF">
            <summary>
            Raw material instance reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.INSMET">
            <summary>
            Installation method of cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ISCHGD">
            <summary>
            True if hull model is modified/changed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JFRE">
            <summary>
            If YES attached section alignment may change
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JLIN">
            <summary>
            Joining line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JLNE">
            <summary>
            Joining line end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JLNS">
            <summary>
            Joining line start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JMAX">
            <summary>
            Maximum joint number in current spool drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTBEV">
            <summary>
            Joint part bevel code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTC">
            <summary>
            Joint Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTCOM">
            <summary>
            Welded joint comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTNAM">
            <summary>
            Welded joint name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTNUM">
            <summary>
            Joint number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTORF">
            <summary>
            Joint owners attribute on IJOINT elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTOWN">
            <summary>
            Table linking IJOINT elements to piping components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTREF">
            <summary>
            Return reference from Ppoint to ijoint element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTTHK">
            <summary>
            Joint part thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTTSL">
            <summary>
            Total welded joint suspension length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTTWL">
            <summary>
            Total welded joint length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNTTYP">
            <summary>
            Welded joint type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JNUM">
            <summary>
            Old spooler joint number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JOIE">
            <summary>
            End joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JOIP">
            <summary>
            Old spooler joint number prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JOIS">
            <summary>
            Start joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JSPOSE">
            <summary>
            Justifications End point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JSPOSS">
            <summary>
            Justifications Start point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JUSL">
            <summary>
            Justification Pline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JUST">
            <summary>
            Justification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JUMGLY">
            <summary>
            Jumping Glyph
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JUMSIZ">
            <summary>
            Jumping glyph physical size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JBLIST">
            <summary>
            Junction boxes list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.JSONID">
            <summary>
            JSON service ID of the uploaded project in Dabacon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.KNUANG">
            <summary>
            Knuckle angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.KNUCKL">
            <summary>
            True if knuckled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAAREF">
            <summary>
            Laser Area reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LABOFF">
            <summary>
            Label offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LABPOS">
            <summary>
            Label position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LABST">
            <summary>
            Number of starts for label signing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LACR">
            <summary>
            Access Control on/off switch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LACTIV">
            <summary>
            True if selectable : false = limbospec
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LADCOL">
            <summary>
            Laser Drawing colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LADRES">
            <summary>
            Laser Drawing Resolution (dpi)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LADSTY">
            <summary>
            Laser Drawing Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LALCAB">
            <summary>
            List arriving leaving cables on attached point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LALLAN">
            <summary>
            Leave Ppoint allowed angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAMDIS">
            <summary>
            True if Lam Displ
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAMINA">
            <summary>
            Name of first laminate code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAMINB">
            <summary>
            Name of second laminate code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAMWTH">
            <summary>
            Width of laminate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LASTM">
            <summary>
            Date of last modification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAUTHU">
            <summary>
            Login Authentication on/off switch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAVORF">
            <summary>
            Reference to laser volume set, containing the complete definition of the laser representation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAXE">
            <summary>
            Local axes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAYARF">
            <summary>
            Annotation Layer ruleset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAYDRF">
            <summary>
            Design Layer ruleset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAYOUT">
            <summary>
            TRUE if element is layout mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LAYTBF">
            <summary>
            Layer Table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBBORE">
            <summary>
            TRUE if Minor/Branch bore is in nominal bore table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBGIMG">
            <summary>
            Background image flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBOP">
            <summary>
            Bottom of leave pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBOR">
            <summary>
            Leave bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBSTRF">
            <summary>
            Label style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCAS">
            <summary>
            Load case number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCHA">
            <summary>
            Chain flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCIRCR">
            <summary>
            Least circumscribed rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCKPSW">
            <summary>
            Lock passwords for general users
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCLAIM">
            <summary>
            Access Control Claim flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCLM">
            <summary>
            True if element is claimed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCLMH">
            <summary>
            True if element and hierarchy claimed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCLOSE">
            <summary>
            Is this entity closed?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCNFA">
            <summary>
            Array of elements with local names
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCNLN">
            <summary>
            Lengths of packed local names stored on template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCNMA">
            <summary>
            Local names (packed) stored on template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCON">
            <summary>
            Leave connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCONSU">
            <summary>
            Consumer Extract database flag, can be refreshed when read-only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCORRO">
            <summary>
            Leave corrosion allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCPOVW">
            <summary>
            Location Overwrite DB Users policy flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCTROL">
            <summary>
            Controlled DB Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCUTDI">
            <summary>
            Lower Extension Cutting Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDELDS">
            <summary>
            True if part numbering by delivery designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDFLT">
            <summary>
            logical default value for a UDA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDIR">
            <summary>
            Leave direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDISP">
            <summary>
            Display property flag for design datasets: True if property is shown on form
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDPR">
            <summary>
            Local design dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDRDIR">
            <summary>
            Ladder Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEAFS">
            <summary>
            Number of door leafs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEAHEI">
            <summary>
            Leave height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEAV">
            <summary>
            Leave Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEAWID">
            <summary>
            Leave width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEND">
            <summary>
            Line end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LENDTI">
            <summary>
            Time out period for commands
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LENG">
            <summary>
            Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LENINS">
            <summary>
            Initial tube length inside bending machine.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LENOUT">
            <summary>
            Initial tube length outside bending machine
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LENSEG">
            <summary>
            Length of segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LETTER">
            <summary>
            Letter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEVE">
            <summary>
            Drawing level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEVENL">
            <summary>
            Time interval for Event Loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEVRFA">
            <summary>
            References to levels serviced by stairwell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEXCES">
            <summary>
            Leave excess for leave tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEXTNS">
            <summary>
            Lower Extension Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFADIR">
            <summary>
            Flight A Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFAOFF">
            <summary>
            Landing Flight A Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFBDIR">
            <summary>
            Landing Flight B Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFBOFF">
            <summary>
            Landing Flight B Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFCOLG">
            <summary>
            Glabel style frame colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFCOLO">
            <summary>
            Label frame colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFCONU">
            <summary>
            Label frame colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFDP">
            <summary>
            Local design dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFPN">
            <summary>
            Label frame pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFRA">
            <summary>
            Frame flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFSTRE">
            <summary>
            Label frame linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFSTYG">
            <summary>
            GLabel style frame line type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFSTYL">
            <summary>
            Label frame linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LGAP">
            <summary>
            Last offset distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LGOING">
            <summary>
            Lower Tread Going
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LGRD">
            <summary>
            Leave Ppoint gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LGTYPC">
            <summary>
            Generic type is closed flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LHBORE">
            <summary>
            TRUE if Major/Header bore is in nominal bore table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LHEA">
            <summary>
            Logical head flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LHEI">
            <summary>
            Letter height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LHIDE">
            <summary>
            Hide flag for catalogue datasets: True if property is not shown on form
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LIGHTI">
            <summary>
            Lighting requirements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LIGTCA">
            <summary>
            Logical ignore EVITCA flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LIGTCP">
            <summary>
            Logical ignore EVITCP flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LIMI">
            <summary>
            Volume of interest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LIMNUM">
            <summary>
            Order number of limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LINE">
            <summary>
            LINE of inter-user message
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LINIT">
            <summary>
            Location initialisation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LINKRE">
            <summary>
            Link reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LINKS">
            <summary>
            Linked elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LINKSN">
            <summary>
            Linked session on parent extract
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LINKXR">
            <summary>
            Referencing elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LISS">
            <summary>
            True if drawing has been issued
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LIST">
            <summary>
            List of all possible member types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LJCB">
            <summary>
            Linear joint cutback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LKIN">
            <summary>
            Comparator POINTS TO THE CONNECTION IN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LKLN">
            <summary>
            Comparator (PIPE)LINE THE LINK BELONGS TO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LKOU">
            <summary>
            Comparator POINTS TO THE CONNECTION OUT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LKSI">
            <summary>
            Comparator SIZE OF THE LINK
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LKSP">
            <summary>
            Comparator SPECIFICATION OF THE LINK
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLCL">
            <summary>
            Leader line clearance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLCLTX">
            <summary>
            Leader line clearance text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLCOLG">
            <summary>
            GLabel style leader colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLCOLO">
            <summary>
            Leader line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLCONU">
            <summary>
            Label leader colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLDIAG">
            <summary>
            Line list diagrams
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLEA">
            <summary>
            Leader line flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLENG">
            <summary>
            Leave length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLENTR">
            <summary>
            Is a line list entry - true or false
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLFROM">
            <summary>
            From column text for a line list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLIS">
            <summary>
            List of all possible types in member hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLPN">
            <summary>
            Label leader pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLSTRE">
            <summary>
            Label leader linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLSTYG">
            <summary>
            GLabel style leader line type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLSTYL">
            <summary>
            Leader line linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLTBRA">
            <summary>
            Line list tail branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLTO">
            <summary>
            To column text for a line list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMAXTR">
            <summary>
            Maximum number of retries for command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMDREF">
            <summary>
            Back reference to demolition packages referencing laser survey
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMDSES">
            <summary>
            Session number of back reference to demolition packages referencing laser survey
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMDSYN">
            <summary>
            Synchronisation state of AVEVA and laser survey databases
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMERDL">
            <summary>
            Enable automatic merge of transaction db
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMERFA">
            <summary>
            Number of days Failed commands persist in Trans dB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMERSU">
            <summary>
            Number of days Successful commands persist in Trans dB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMERTI">
            <summary>
            Frequency of Auto Merge of Transaction DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LMIRR">
            <summary>
            True if Mirroring required
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNAME">
            <summary>
            Local name as stored on template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNDLEV">
            <summary>
            Landing levels from owning element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNFA">
            <summary>
            Hidden Reference Array for linked Vertices
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKALI">
            <summary>
            All invalid HANCI refs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKALL">
            <summary>
            All HANCI refs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKCLS">
            <summary>
            Classes referencing a DocLink
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKDOC">
            <summary>
            DocLinks referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKELE">
            <summary>
            Elements referencing a DocLink
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKIRA">
            <summary>
            Invalid HANCI reference array attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKLNK">
            <summary>
            Proxy reference to model/lnclas element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKPRP">
            <summary>
            TRUE if item pointed to by descriptor should be propagated by Global
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKREF">
            <summary>
            Reference internal document (drawing/sheet)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKRFA">
            <summary>
            HANCI reference array attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKRX">
            <summary>
            Reference to first location of a link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKRY">
            <summary>
            Reference to second location of a link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKURL">
            <summary>
            LNKURL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKUSE">
            <summary>
            Link Descriptor Usage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKVFA">
            <summary>
            Individual support valid flags array attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNKWV">
            <summary>
            Link weighting value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNLST">
            <summary>
            List of local names for current template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNOUPD">
            <summary>
            DB propagation suppressed flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNPRXS">
            <summary>
            Proxy items referring to element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNSP">
            <summary>
            Comparator (PIPE)LINE SPECIFICATION
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNTP">
            <summary>
            Line type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCA">
            <summary>
            Location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCID">
            <summary>
            Location identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCK">
            <summary>
            True if element is locked
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCKID">
            <summary>
            Lock Id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCPR">
            <summary>
            List of LOCs Primary at location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCRF">
            <summary>
            Location reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCTYP">
            <summary>
            Location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOD">
            <summary>
            Leave Ppoint outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOFF">
            <summary>
            Offline flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOGEV">
            <summary>
            Logical value evaluation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOGFN">
            <summary>
            COMMS log file name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOGIN">
            <summary>
            Login Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOGLV">
            <summary>
            COMMS log file level of detail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOGMS">
            <summary>
            COMMS log file active/inactive flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOGXP">
            <summary>
            Logical expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOHE">
            <summary>
            PLOOP height - from first PLOOP in owning panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOOS">
            <summary>
            Loose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOWGAP">
            <summary>
            Lower Gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOWPOS">
            <summary>
            Point nearest workshop floor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOWREF">
            <summary>
            References to lower exit level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPASS">
            <summary>
            DB Password Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPITCH">
            <summary>
            Ladder Pitch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPOS">
            <summary>
            Leave position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPOSE">
            <summary>
            Easting of leave position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPOSN">
            <summary>
            Northing of leave position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPOSU">
            <summary>
            Upping of leave position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPRCRE">
            <summary>
            Discipline Created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPRDEL">
            <summary>
            Interdisciplinary Project Element is deletable Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPRINT">
            <summary>
            Printability flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPRMOD">
            <summary>
            Interdisciplinary Project Element is modifiable Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LPROT">
            <summary>
            Protected DB Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LQAANG">
            <summary>
            Angle between alignment direction of leave Ppoint and next
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LQANG">
            <summary>
            Angle between leave Ppoint and next component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LQBORE">
            <summary>
            TRUE if leave Ppoint has same bore as next
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LQCON">
            <summary>
            TRUE if leave Ppoint has Correct connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LQOFF">
            <summary>
            Offset between leave Ppoint and next component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LRBORE">
            <summary>
            TRUE if bores is in reducer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LREF">
            <summary>
            Link reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LREFO">
            <summary>
            Database holds Reference data only flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LREGN">
            <summary>
            Does this view represent a 2d region
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LRISE">
            <summary>
            Lower Tread Rise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LRUNG">
            <summary>
            Last rung flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSCSLS">
            <summary>
            Logical sheet changed since last save
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSELEC">
            <summary>
            True if can be set Directly in Design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSFBR">
            <summary>
            Spooling marker for leave tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSHA">
            <summary>
            Leader shape code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSPA">
            <summary>
            Text line spacing factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSPATX">
            <summary>
            Character height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSRO">
            <summary>
            Leave rod specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTR">
            <summary>
            Stress flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTU">
            <summary>
            Leave tube reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTYNO">
            <summary>
            Line Style Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSVHIS">
            <summary>
            Database save history from compaction flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSWID">
            <summary>
            Line Style Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSWKEY">
            <summary>
            Line Style Width Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTAI">
            <summary>
            Logical tail flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTBORE">
            <summary>
            TRUE if bores is in branch (tee) table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTCORR">
            <summary>
            Leave tube corrosion allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTER">
            <summary>
            Label terminator code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTERID">
            <summary>
            Label terminator ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTHICK">
            <summary>
            Door leaf thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTIMEI">
            <summary>
            Time Interval between retries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTITL">
            <summary>
            Representation layer title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTLE">
            <summary>
            Length of leave implied tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTOP">
            <summary>
            Top of leave pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTST">
            <summary>
            Leave Tube Stock Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTWALL">
            <summary>
            Leave tube wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTWREF">
            <summary>
            Leave tube wall thickness reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LUNRED">
            <summary>
            Notification Unread flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LVAR">
            <summary>
            Variant Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LVDWPO">
            <summary>
            TRUE if valid Draft pline point or ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LVIS">
            <summary>
            Visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LVOL">
            <summary>
            Enclosing box volume in local coordinates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LVQUAL">
            <summary>
            Laser Volume Quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LWAITD">
            <summary>
            Time interval between re-sending commands
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LWALLT">
            <summary>
            Leave wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LWIDTH">
            <summary>
            Line Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LWP">
            <summary>
            Lower Working Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYCOL">
            <summary>
            AutoCAD Layer Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYCVFR">
            <summary>
            AutoCAD Layer Current Viewport Freeze
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYDIR">
            <summary>
            Leave Y axis direction on point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYFRZE">
            <summary>
            AutoCAD Layer Freeze flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYLOCK">
            <summary>
            AutoCAD Layer Lock flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYLTYP">
            <summary>
            AutoCAD Layer LineType
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYLWT">
            <summary>
            AutoCAD Layer LineWeight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYNVFR">
            <summary>
            AutoCAD Layer New Viewport Freeze
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYPFG">
            <summary>
            AutoCAD Layer Plotting flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYPSTY">
            <summary>
            AutoCAD Layer Plotter Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LYVIS">
            <summary>
            AutoCAD Layer Visibility Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZCOLO">
            <summary>
            Layer 0 colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZDIR">
            <summary>
            Leave alignment direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZLSTY">
            <summary>
            Layer 0 linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZLSTZ">
            <summary>
            Layer 0 linestyle zero is solid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZNPRI">
            <summary>
            Layer 0 no printability flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZNVIS">
            <summary>
            Layer 0 no visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZPRIN">
            <summary>
            Layer 0 printability flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZVIS">
            <summary>
            Layer 0 visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLIND">
            <summary>
            Blind hole flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LACTYP">
            <summary>
            Labelled action
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLANG">
            <summary>
            Labelling angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLDIR">
            <summary>
            Labelling direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLHGT">
            <summary>
            Labelling height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLMIR">
            <summary>
            Labelling reflection code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLPOS">
            <summary>
            Labelling definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLTXT">
            <summary>
            Labelled text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBRPOS">
            <summary>
            Labelling reference point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LANG">
            <summary>
            Language tag as described in BCP 47 - Tags for Identifying Languages  http://tools.ietf.org/html/bcp47)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LTAPER">
            <summary>
            True if Gensec can be tapered
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTCDF">
            <summary>
            Column definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTCFL">
            <summary>
            Column filtering
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTCSM">
            <summary>
            Column summaries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTCSR">
            <summary>
            Column items can be sorted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTDBV">
            <summary>
            Database view associated with list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTDFS">
            <summary>
            Definition set name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTDGL">
            <summary>
            DataGrid layout definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTDSC">
            <summary>
            List description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTFDT">
            <summary>
            Filter database type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTGP">
            <summary>
            Show the grouping panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTLS">
            <summary>
            Show leading slash for names
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTMSF">
            <summary>
            Multi-select filter style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTNAM">
            <summary>
            List name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTPIN">
            <summary>
            Show column pins in column headers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTPUB">
            <summary>
            Can be published to AVEVA NET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTRID">
            <summary>
            Column Row ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTSLT">
            <summary>
            SubList layout definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTSUB">
            <summary>
            SubList definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTUIH">
            <summary>
            Show units in headers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTUN">
            <summary>
            Show Unset Nulref values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTVIS">
            <summary>
            Visible in list dropdown
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTWTH">
            <summary>
            Wrap text in column headers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTZF">
            <summary>
            Zoom factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTDST">
            <summary>
            Logical Value For List Datasheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LANREF">
            <summary>
            Linked annotation element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LHEITX">
            <summary>
            Letter height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCPREF">
            <summary>
            Linked connection point reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LADRGB">
            <summary>
            RGB laser drawing colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LADRGP">
            <summary>
            RGB laser drawing colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFGRGB">
            <summary>
            RGB glabel style frame colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFGRGP">
            <summary>
            RGB glabel style frame colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFRRGB">
            <summary>
            RGB label frame colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LFRRGP">
            <summary>
            RGB label frame colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLGRGB">
            <summary>
            RGB glabel style leader colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLGRGP">
            <summary>
            RGB glabel style leader colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLNRGB">
            <summary>
            RGB leader line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LLNRGP">
            <summary>
            RGB leader line colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZERGB">
            <summary>
            RGB layer 0 colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LZERGP">
            <summary>
            RGB layer 0 colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCONFL">
            <summary>
            Local Connection Point Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LCKNUT">
            <summary>
            Detailing Bolt Set Lock Nut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LRFLSY">
            <summary>
            Reflectable Symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LROTSY">
            <summary>
            Rotatable Symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LODIMG">
            <summary>
            Original image data flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCOLO">
            <summary>
            Loop line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCRGB">
            <summary>
            Loop RGB colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOCRGP">
            <summary>
            Loop RGB colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LOSTYL">
            <summary>
            Loop linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LEXREF">
            <summary>
            Draw Linked External Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSCSYM">
            <summary>
            Scale With Symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LDIAM">
            <summary>
            Loop diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBFACT">
            <summary>
            Labelling along factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLID">
            <summary>
            Labelling reference id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBLSID">
            <summary>
            Labelling side of part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBPOME">
            <summary>
            Labelling position method
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBRINF">
            <summary>
            Reference information for labelling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBSPOS">
            <summary>
            Labelled symbol text position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBTRAN">
            <summary>
            True if rotation, translation and reflection is allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBTVAL">
            <summary>
            Labelling at intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LBTYPE">
            <summary>
            Reference information for labelling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LNGVAR">
            <summary>
            Language Variant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.LSTWTC">
            <summary>
            Wrap text in cells of a grid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MACRID">
            <summary>
            Clip macro ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAINTE">
            <summary>
            Maintenance level radiation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAKER">
            <summary>
            Maker
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANBLK">
            <summary>
            Name of owner block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANCOG">
            <summary>
            Center of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANLEN">
            <summary>
            Length of manual intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANNUM">
            <summary>
            Number of manual intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANPAN">
            <summary>
            Name of owner panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANTRA">
            <summary>
            Transformation from local coordinate system
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANTYP">
            <summary>
            Manufactured type e.g. Plane, Curved,...
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANU">
            <summary>
            Manufacturer Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANWGH">
            <summary>
            Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAPCSV">
            <summary>
            Map catalogue session vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAPEXS">
            <summary>
            Map extract and session number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAPV">
            <summary>
            Map values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MARK">
            <summary>
            Mark number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MARKRF">
            <summary>
            Cable Mark points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MARPTT">
            <summary>
            Marine picture type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MARPTY">
            <summary>
            Marine picture type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATANG">
            <summary>
            Material Lay Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATDEN">
            <summary>
            Material density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATDIR">
            <summary>
            Material direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATID">
            <summary>
            Material ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATLEN">
            <summary>
            Material Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATN">
            <summary>
            Material Note
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATOVE">
            <summary>
            Material Overlap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATOWN">
            <summary>
            Maturity Owning Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATPUR">
            <summary>
            Material purpose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATR">
            <summary>
            Material reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATURF">
            <summary>
            Reference of Maturity Level Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATWID">
            <summary>
            Material Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATX">
            <summary>
            Material text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXA">
            <summary>
            Maximum answer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXARE">
            <summary>
            Maximum area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXB">
            <summary>
            Maximum bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXD">
            <summary>
            DB hierarchy depth of lowest level item beneath element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXFIL">
            <summary>
            Maximum percentage fill level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXHUM">
            <summary>
            Maximum Humidity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXLP">
            <summary>
            Maximum length of pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXMIN">
            <summary>
            Maximum and minimum values of design property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXOD">
            <summary>
            Maximum Outer Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXPLN">
            <summary>
            Maximum Plane Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXPRE">
            <summary>
            Maximum Pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXREP">
            <summary>
            Maximum number of Repeat items created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXSLO">
            <summary>
             Maximum pipe slope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXTEM">
            <summary>
            Maximum Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXTRY">
            <summary>
            Maximum Number of Retries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXU">
            <summary>
            Maximum number of user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXVOL">
            <summary>
            Maximum Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXWAT">
            <summary>
            Maximum Water Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MBACK">
            <summary>
            Members in reverse order
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MBUFS">
            <summary>
            Preferred buffer size in MBytes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCBENT">
            <summary>
            Machine bent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCMX">
            <summary>
            Maximum permitted macro number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCNA">
            <summary>
            Macro number bit array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCNO">
            <summary>
            Macro file number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCOLOU">
            <summary>
            Marker colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCONUM">
            <summary>
            Marker colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MCOU">
            <summary>
            Number of Element Members of Given type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MDBCLS">
            <summary>
            List of MDBs in which DB is current
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MDBF">
            <summary>
            Current MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MDBLS">
            <summary>
            List of MDBs to which DB belongs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MDSYSF">
            <summary>
            Reference Array of Model and Design Elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MELRFA">
            <summary>
            All components (non-tube) in the PipePiece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MEMB">
            <summary>
            All members, or members of specific type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MEMDAB">
            <summary>
            Dabacon members
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MEML">
            <summary>
            Member line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MEMNAM">
            <summary>
            Member name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MEMTYP">
            <summary>
            Member type array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MESNUM">
            <summary>
            Message Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MESQUA">
            <summary>
            Message Qualifier Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MESREF">
            <summary>
            Message data reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MFAR">
            <summary>
            Model Function Word array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MFFIND">
            <summary>
            Find Manufacturingpackage folder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MFLA">
            <summary>
            Obsolete message flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MFLG">
            <summary>
            Master link flag - SLAVE if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MHCOUN">
            <summary>
            Number of Elements of Given type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MID">
            <summary>
            Return identified members
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDBK">
            <summary>
            Return identified members in reverse order
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDP">
            <summary>
            Section midpoint (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINARE">
            <summary>
            Minimum area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINBEN">
            <summary>
            Minimum Bend Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINFED">
            <summary>
            Minimum feed values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINFIL">
            <summary>
            Min Fill level on Cableway and Cabletray components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINHUM">
            <summary>
            Minimum Humidity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINLP">
            <summary>
            Minimum length of pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINOD">
            <summary>
            Minimum Outer Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINPLN">
            <summary>
            Minimum Plane Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINPOS">
            <summary>
            Smallest position number of nested plate parts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINPRE">
            <summary>
            Minimum Pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINSLO">
            <summary>
             Minimum pipe slope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINTEM">
            <summary>
            Minimum Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINVER">
            <summary>
            Minimum vertical pipe slope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINVOL">
            <summary>
            Minimum Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIRROR">
            <summary>
            True if mirrored in local v-axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLEF">
            <summary>
            Minimum length excluding flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLIF">
            <summary>
            Minimum length including flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLIM">
            <summary>
            Moment limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNCOL">
            <summary>
            Member-line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNCON">
            <summary>
            Member-line colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNP">
            <summary>
            Member line pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNSTR">
            <summary>
            Member-line linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNSTY">
            <summary>
            Member-line linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLRF">
            <summary>
            Reference to a user entry in comms db
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLVREF">
            <summary>
            Reference to the Shared Maturity Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MMBOR">
            <summary>
            MM Nominal Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MMRF">
            <summary>
            Reference of TO TEAM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODATT">
            <summary>
            True if attribute of element can be modified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODDEL">
            <summary>
            True if element can be deleted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODE">
            <summary>
            Database mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODERR">
            <summary>
            Returns the error text that would occur if attribute was modified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODF">
            <summary>
            Reference of current module
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODID">
            <summary>
            Used by laser driver to identify external laser data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODREF">
            <summary>
            Model references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODU">
            <summary>
            Module
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MOFI">
            <summary>
            Moment of Inertia
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MOME">
            <summary>
            Moment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MOULEN">
            <summary>
            Mould length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MPEN">
            <summary>
            Marker pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MPFIND">
            <summary>
            Find Manufacturingpackage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MPKGFD">
            <summary>
            Find Manufacturingpackage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MPKGFI">
            <summary>
            Manufacturing Package Filter Expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MPKGRF">
            <summary>
            Manufacturing Package Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRGF">
            <summary>
            ADP merge flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRGL">
            <summary>
            ADP merge level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRKLEN">
            <summary>
            Total marking length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRKR">
            <summary>
            3 way component marker
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRKST">
            <summary>
            Number of starts for marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSDTXT">
            <summary>
            Message Data text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSESS">
            <summary>
            Last session number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSLOC">
            <summary>
            Location Origin of Message
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSSENT">
            <summary>
            Message Sent to relevant site
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTAMP">
            <summary>
            MDB Stamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTEXT">
            <summary>
            Message text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTPID">
            <summary>
            Marker physical style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTPSZ">
            <summary>
            Marker physical size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTREF">
            <summary>
            Marker style Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTYID">
            <summary>
            Marker style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTYLE">
            <summary>
            Marker style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTYPE">
            <summary>
            Reference of TROUCO/TROPER creating this POSTOP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSTYSZ">
            <summary>
            Marker size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTBE">
            <summary>
            Material tube start. The first component, excluding ATTSs, for whom the LOFF is invalid or false
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTCL">
            <summary>
            Material tube centreline length.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTEN">
            <summary>
            Material tube end. The first component, excluding ATTSs, for whom the LOFF is invalid or false
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLCHE">
            <summary>
            Matchline text character height as text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLCOL">
            <summary>
            Matchline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLE">
            <summary>
            Material tube length for TUBI. Includes preceding bend length if bend is offline.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLFON">
            <summary>
            Matchline text font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLLST">
            <summary>
            Matchline linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLSTZ">
            <summary>
            Matchline line type zero is ByStyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLTCH">
            <summary>
            Matchline text character height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLTCO">
            <summary>
            Matchline text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLVIS">
            <summary>
            Matchline visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOC">
            <summary>
            Material list control for components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOH">
            <summary>
            Material list control for head tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOL">
            <summary>
            Material List Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOPAR">
            <summary>
            Additional spooling item part numbers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOQ">
            <summary>
            Material take off quantity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOR">
            <summary>
            Extra material list spec references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOT">
            <summary>
            Material list control for components leave tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOX">
            <summary>
            Old spooler addition items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTXR">
            <summary>
            Material text reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTXX">
            <summary>
            XTEXT of material text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTXY">
            <summary>
            YTEXT of material text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTXZ">
            <summary>
            ZTEXT of material text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MULT">
            <summary>
            Multiplier factor (unit definition)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MURF">
            <summary>
            Reference to a user entry in system db
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVCEXP">
            <summary>
            Model View content expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVER">
            <summary>
            Reference to Master Vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVMDRF">
            <summary>
            Model view definition reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVANG">
            <summary>
            Viewing angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVBEA">
            <summary>
            Viewing bearing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCAO">
            <summary>
            Clip plane all off status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCAS">
            <summary>
            Cap status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCCO">
            <summary>
            Cap colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCLS">
            <summary>
            Clip status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCOR">
            <summary>
            Clipbox direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCPO">
            <summary>
            Clipbox position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCTP">
            <summary>
            Camera type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVCTR">
            <summary>
            Viewing centre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDIR">
            <summary>
            Viewing direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDLC">
            <summary>
            Drawlist color
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDLE">
            <summary>
            Drawlist edges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDLR">
            <summary>
            Drawlist references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDLT">
            <summary>
            Drawlist translucency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDLV">
            <summary>
            Drawlist visibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDSI">
            <summary>
            Drawlist integer settings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDSR">
            <summary>
            Drawlist real settings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVDTO">
            <summary>
            Distance to observer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVELV">
            <summary>
            Viewing elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVLIM">
            <summary>
            View limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MVVRAD">
            <summary>
            Viewing radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MYINSF">
            <summary>
            Surface Treatment Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MYOUSF">
            <summary>
            Surface Treatment Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MYSRFT">
            <summary>
            Surface Treatment Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MISDBN">
            <summary>
            DB number for incremental DICE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MISEXN">
            <summary>
            Extract number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDRHO">
            <summary>
            Minimum diameter of drilled holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEANG">
            <summary>
            Minimum angle for edge preparation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIFANG">
            <summary>
            Minimum end cut angle flanges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIRRCD">
            <summary>
            Nested part reflection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIWANG">
            <summary>
            Minimum end cut angle web
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MXDRHO">
            <summary>
            Maximum diameter of drilled holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MXEANG">
            <summary>
            Maximum angle for edge preparation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MXFANG">
            <summary>
            Maximum end cut angle flanges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MXWANG">
            <summary>
            Maximum end cut angle web
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIAUXF">
            <summary>
            Auxiliary function
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBAOS">
            <summary>
            Bevel angle other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBATO">
            <summary>
            Bevel angle two other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBATS">
            <summary>
            Bevel angle this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBATT">
            <summary>
            Bevel angle two this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBAWO">
            <summary>
            Bevel angle w other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBAWT">
            <summary>
            Bevel angle w this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBBDE">
            <summary>
            Bevel is defined
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBCHO">
            <summary>
            Bevel chamfer height other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBCHT">
            <summary>
            Bevel chamfer height this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBCOD">
            <summary>
            Bevel code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBCWO">
            <summary>
            Bevel chamfer width other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBCWT">
            <summary>
            Bevel chamfer width this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBDOS">
            <summary>
            Bevel depth other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBDTS">
            <summary>
            Bevel depth this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBEM">
            <summary>
            Bevel E measure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBSEG">
            <summary>
            Burn start end in gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBSHP">
            <summary>
            Burning shape
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBTYP">
            <summary>
            Bevel type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBVAR">
            <summary>
            Bevel variant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MICOMM">
            <summary>
            Movement instruction comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDATE">
            <summary>
            Cration date for movement instruction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDERM">
            <summary>
            Material id in the ERM system
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDESN">
            <summary>
            Movement instruction designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDIR">
            <summary>
            Movement direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDYAY">
            <summary>
            Distance Y1 and Y2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIGEVF">
            <summary>
            Geometry valid for
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMASL">
            <summary>
            Assembly name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMATT">
            <summary>
            Marking attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMPTH">
            <summary>
            Profile thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMSID">
            <summary>
            Material side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMTYP">
            <summary>
            Marking type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMUTP">
            <summary>
            Marking user type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMWLD">
            <summary>
            Marking of weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINAME">
            <summary>
            Movement instruction name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINUMH">
            <summary>
            Number of heads
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIPLTH">
            <summary>
            Plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIPTID">
            <summary>
            Internal part id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MISIDE">
            <summary>
            Movement instruction side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MITEXT">
            <summary>
            Label text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MITHEI">
            <summary>
            Label text height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MITPOS">
            <summary>
            Label text position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MITROT">
            <summary>
            Label text rotation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MITTYP">
            <summary>
            Label text type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANLNK">
            <summary>
            Manufacturing Element Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODNAM">
            <summary>
            Module name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MARKNG">
            <summary>
            Text storing marking for cable core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXVLT">
            <summary>
            Maximum voltage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINVLT">
            <summary>
            Minimum voltage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTHDLS">
            <summary>
            Method List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTHDNM">
            <summary>
            Method Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MGRADE">
            <summary>
            Material grade
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MNDIRE">
            <summary>
            Main direction enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MNDIRI">
            <summary>
            Main direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODDBR">
            <summary>
            Model Db Ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODNME">
            <summary>
            Model name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODTYP">
            <summary>
            Model type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTHICK">
            <summary>
            Material thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTOFF">
            <summary>
            Material offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNRGB">
            <summary>
            RGB member line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLNRGP">
            <summary>
            RGB member line colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRKRGB">
            <summary>
            RGB marker colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MRKRGP">
            <summary>
            RGB marker colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLRGB">
            <summary>
            RGB matchline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTLRGP">
            <summary>
            RGB matchline colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTTRGB">
            <summary>
            RGB matchline text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MTTRGP">
            <summary>
            RGB matchline text colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXCAB">
            <summary>
            Maximum Number of cables
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MAXLAY">
            <summary>
            Maximum Layers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MLLIN">
            <summary>
            Mll Include
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MSGUID">
            <summary>
            Universally unique identifier from external sources (in MS format)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MANUFR">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINRAD">
            <summary>
            Minimum bend radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MASSPL">
            <summary>
            Mass per unit Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MNSIDE">
            <summary>
            Main side enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MNSIDI">
            <summary>
            Mai side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MACHIN">
            <summary>
            Machine reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MBLLEN">
            <summary>
            Length of markblasting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIALPF">
            <summary>
            First alpha angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIALPS">
            <summary>
            Second alpha angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBECT">
            <summary>
            True if burning end cut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBETF">
            <summary>
            First beta angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBETS">
            <summary>
            Second beta angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBGAP">
            <summary>
            Edge preparation gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIBSPT">
            <summary>
            Point on edge prep. segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MICHAM">
            <summary>
            Chamfer angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MICHOA">
            <summary>
            Minimum area of cut holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MICOMP">
            <summary>
            Movement instruction valid for
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MICONA">
            <summary>
            Connection angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MICPWB">
            <summary>
            Distance closest point to web
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDESG">
            <summary>
            Designation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDGSD">
            <summary>
            Distance used for special marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDIMS">
            <summary>
            Dimention string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDLFT">
            <summary>
            Distance from the left to origin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDORI">
            <summary>
            Distance origin of feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDORV">
            <summary>
            Distance to origin from base line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIDOZP">
            <summary>
            Distance to origin from endcut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIECOD">
            <summary>
            End cut code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEMSK">
            <summary>
            End cut param mask
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEPRM">
            <summary>
            End cut parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIETYP">
            <summary>
            End cut type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEUDD">
            <summary>
            User defined end cut data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEUDN">
            <summary>
            Name of user defined end cut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEUDP">
            <summary>
            User defined end cut parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIEXCE">
            <summary>
            Excess on profile end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIFEXC">
            <summary>
            Fabrication excess
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIFPWB">
            <summary>
            Distance farthest point to web
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIFROT">
            <summary>
            Rotation of the feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIFTYP">
            <summary>
            Type code of feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIHFAC">
            <summary>
            Position of the nose as a factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIHFAD">
            <summary>
            Adjust factor for the nose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIHMEA">
            <summary>
            Position of the nose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIINCA">
            <summary>
            Inclination angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIINTA">
            <summary>
            Intersecting angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MILCPT">
            <summary>
            Distance closest point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MILFPT">
            <summary>
            Distance farthest point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MILFTV">
            <summary>
            Distance to v1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MILORI">
            <summary>
            Distance origin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMGSD">
            <summary>
            Marking of gsd
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMIRR">
            <summary>
            Mirrored feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIMPSD">
            <summary>
            Penetrating material side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINANG">
            <summary>
            Nose angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINLNA">
            <summary>
            First nose length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINLNB">
            <summary>
            Second nose length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MINOSE">
            <summary>
            Length of the nose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIOPEN">
            <summary>
            Instruction contour type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIPMSD">
            <summary>
            Marking side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIPNAM">
            <summary>
            Part name reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIPSID">
            <summary>
            Profile end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIRADA">
            <summary>
            Radius of arc part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIRADB">
            <summary>
            Radius of arc part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MISHAP">
            <summary>
            Instruction shape
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MISTSS">
            <summary>
            Stoss
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MIWORK">
            <summary>
            Movement instruction work type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MATTYP">
            <summary>
            Material type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MFIXRE">
            <summary>
            Merged Fixing Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MFREF">
            <summary>
            Merged Fixing Reference Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODSTA">
            <summary>
            Creation Status of Models as enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.MODSTY">
            <summary>
            Model Creation Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.N">
            <summary>
            Position northing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NACCNT">
            <summary>
            Non-additive changes count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NACKN">
            <summary>
            No. of times Acknowledged
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAME">
            <summary>
            Name of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMEDB">
            <summary>
            DB name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMESQ">
            <summary>
            Type. sequence number and name of element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMETY">
            <summary>
            Type and name of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMN">
            <summary>
            Name of the element (without leading slash)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMTOL">
            <summary>
            True if name is too long
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMTYP">
            <summary>
            Type and full name of element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NANGLE">
            <summary>
            North angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAPP">
            <summary>
            NAPPFLAG ( IN CATALOGUE )
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NARE">
            <summary>
            Reference to neutral axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBEVIT">
            <summary>
            Pathtime except starts, I-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBEVXT">
            <summary>
            Pathtime except starts, X-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBEVYT">
            <summary>
            Pathtime except starts, Y-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBORE">
            <summary>
            Allowable Nominal Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBYT">
            <summary>
            Number of bytes per multi-byte character
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCHAR">
            <summary>
            Number of label characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCOF">
            <summary>
            Nett centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCOL">
            <summary>
            Number of columns
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCONNE">
            <summary>
            Mismatched connections. i.e. no valid backpointer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCUTNT">
            <summary>
            Number of cutouts and notches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCUTS">
            <summary>
            Number of cuts in a mitred bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NDATIM">
            <summary>
            Notification Date/time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NDFLT">
            <summary>
            Numeric default value for a UDA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NDTINT">
            <summary>
            NC tape date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NDTTXT">
            <summary>
            NC tape date text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NEWEXF">
            <summary>
            Generated EXFILE value for current database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NEWUID">
            <summary>
            Generated UUID version string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NFSP">
            <summary>
            Pointer to next free space in block (assembly)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NGMR">
            <summary>
            Negative geometry set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NGSD">
            <summary>
            Number of GSDs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NHOLE">
            <summary>
            Number of holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NIDLAB">
            <summary>
            Pathtime except idle time for label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NIDLT">
            <summary>
            Pathtime except idle time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLCOLO">
            <summary>
            Note colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLCONU">
            <summary>
            Note colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLOA">
            <summary>
            Nominal load
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLOFF">
            <summary>
            Nosing Line Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLPN">
            <summary>
            Note/framing pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLSTRE">
            <summary>
            Note linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLSTRT">
            <summary>
            Number of label starts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLSTYL">
            <summary>
            Note linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NMODID">
            <summary>
            Notification Module ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NMOF">
            <summary>
            Nett moments of inertia
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOBJID">
            <summary>
            Notification Object ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOBJTP">
            <summary>
            Notification Object Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOCLIP">
            <summary>
            View no clipping flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOCOL">
            <summary>
            Number of pin jig columns
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NODIMS">
            <summary>
            No Dims Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NODREF">
            <summary>
            Revision Number Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOEXTC">
            <summary>
            Location extract create suppression flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOFF">
            <summary>
            Number off
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOFG">
            <summary>
            Link constraint inversion flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOHLRF">
            <summary>
            NoHLRFlag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOISEC">
            <summary>
            Noise category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOLNKP">
            <summary>
            Linked Documents distribution disabled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMARK">
            <summary>
            True if unmarked
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMBIN">
            <summary>
            List of valid Nominal bores in Inches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMBMM">
            <summary>
            List of valid Nominal bores in MM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMDIR">
            <summary>
            Nominal slope direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMREF">
            <summary>
            Nominal bore table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMXRF">
            <summary>
            Return reference from NOMTAB element to SPECs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOPGS">
            <summary>
            Number of openings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOPKND">
            <summary>
            Number Part Type: 1=alpha,2=number,3=custom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NORM">
            <summary>
            Plane normal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOROW">
            <summary>
            Number of pin jig rows
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NORTHI">
            <summary>
            Northing part expressed as a position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOSAVE">
            <summary>
            True if MDB is not going to be saved. Claiming is off.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOSOFF">
            <summary>
            Nosing Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOTF">
            <summary>
            Cross-reference to NOTE/VNOT/SYTM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOTIFY">
            <summary>
            Notification states
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOTREA">
            <summary>
            Number of treads
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOTTXT">
            <summary>
            Notification Message text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPDESC">
            <summary>
            List of non primary offspring
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPILL">
            <summary>
            Number of jig pillars
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLDFA">
            <summary>
            Nesting default file 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLDFB">
            <summary>
            Nesting default file 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLIST">
            <summary>
            All NATPs attached to route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLMIR">
            <summary>
            Quantity mirrored nested plates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLNOR">
            <summary>
            Quantity normal nested plates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLTOT">
            <summary>
            Total quantity nested plates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPOS">
            <summary>
            Position in owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPOSE">
            <summary>
            Easting of position wrt owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPOSN">
            <summary>
            Northing of position wrt owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPOSU">
            <summary>
            Upping of position wrt owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPPT">
            <summary>
            Ppoint number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPRJID">
            <summary>
            Notification Project ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPRSID">
            <summary>
            Side of nested profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPRVEC">
            <summary>
            Local rotation vector of part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPSIDE">
            <summary>
            Side of nested part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPXYP">
            <summary>
            Position of part(x,y)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NREL">
            <summary>
            Nodal releases
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NREPAK">
            <summary>
            No. of times Reply Acknowledged
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NREPLY">
            <summary>
            No. of times Replied
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NRETRY">
            <summary>
            Number of Retries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NROW">
            <summary>
            Number of rows
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NRPARM">
            <summary>
            Number of rest plate parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NRULEE">
            <summary>
            Number of rule inconsistencies on element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSESID">
            <summary>
            Notification Session ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSESS">
            <summary>
            Number of extant sessions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSIZ">
            <summary>
            Nominal size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSPE">
            <summary>
            Specification for NOZZLE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSRF">
            <summary>
            Nett surface area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTART">
            <summary>
            Number of non-burning starts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTD">
            <summary>
            Non-standard bolt length (reference to DTAB)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTFAC">
            <summary>
            Number of starts - factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTRT">
            <summary>
            Number of burning starts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTRTI">
            <summary>
            Number of burning starts I-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTRTX">
            <summary>
            Number of burning starts X-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTRTY">
            <summary>
            Number of burning starts Y-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NTEXT">
            <summary>
            Null text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NTOPIC">
            <summary>
            Notification Topic
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NTRLEN">
            <summary>
            Neutral length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUCDNA">
            <summary>
            Distance to nearest anchor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUCDNE">
            <summary>
            Distance to the Nearest Edge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUCDNR">
            <summary>
            Nearest Adjacent Anchor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NULLRE">
            <summary>
            T/F on attributes that are null value references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUMB">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUMCOR">
            <summary>
            Number of cores in a cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUMOFF">
            <summary>
            Number of Sheets in Drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUSED">
            <summary>
            Number of used raw plates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NUSERN">
            <summary>
            Unique user identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NVIEWF">
            <summary>
            Neutral viewer filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NVOL">
            <summary>
            Nett volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NWEI">
            <summary>
            Nett weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NWELDS">
            <summary>
            Number of attached welds on a piping component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTARL">
            <summary>
            Next Target Location for the command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTDBN">
            <summary>
            Next DB number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTDBU">
            <summary>
            Next Unique DB number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTEXN">
            <summary>
            Next DB extract number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTFDB">
            <summary>
            Next DB file and DB number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTFLN">
            <summary>
            Next DB file number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTHB">
            <summary>
            Reference to next (future) hub
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTKEY">
            <summary>
            next UDA/UDET key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCDATE">
            <summary>
            NC tape date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPLAOR">
            <summary>
            Nested part origin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSTTYP">
            <summary>
            Nesting Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NXTLOC">
            <summary>
            List of online neighbour LOCs for a LOC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NAMATT">
            <summary>
            Naming attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NULVAL">
            <summary>
            String to be used if the attribute is blank
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NRGRPS">
            <summary>
            Number of groups
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCORSZ">
            <summary>
            Size of the neutral core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOECOR">
            <summary>
            Number of earth cores
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOGRPS">
            <summary>
            Number of groups
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NONCOR">
            <summary>
            Number of neutral cores
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NANPT">
            <summary>
            Anopoint number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOCOPY">
            <summary>
            Detailing Feature Copy Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMDIA">
            <summary>
            Nominal Bolt Shank Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NOMLEN">
            <summary>
            Nominal Bolt Shank Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPOST">
            <summary>
            Number of Posts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBLS">
            <summary>
            Number of blastings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NBRNS">
            <summary>
            Number of burning starts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCHOLE">
            <summary>
            Number of cut holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCREAT">
            <summary>
            Creator of the nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NCUTOU">
            <summary>
            Number of cutouts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NDDRHO">
            <summary>
            Number of different diameters of drilled holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NDHOLE">
            <summary>
            Number of drilled holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NENDCT">
            <summary>
            Number of cutouts and notches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLABEL">
            <summary>
            Number of labels
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NLBL">
            <summary>
            Number of labels
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NMARK">
            <summary>
            Number of markings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NMBLS">
            <summary>
            Number of markblastings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NMKHOL">
            <summary>
            Number of marked holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NNOTCH">
            <summary>
            Number of notches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPRLEN">
            <summary>
            Nested profile length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NPRSTP">
            <summary>
            Nested profile starting position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSIHOL">
            <summary>
            Number of sink holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSLHOL">
            <summary>
            Number of slot holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NSSLHO">
            <summary>
            Number of different sizes of slot holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.NTHOLE">
            <summary>
            Number of threaded holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OANG">
            <summary>
            Overlay sheet angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBCOLO">
            <summary>
            Obscured face colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBCONU">
            <summary>
            Obscured face colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBFG">
            <summary>
            Obstruction flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBJCD">
            <summary>
            Object codes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBPN">
            <summary>
            Obscured face pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBSDEP">
            <summary>
            Obstruction Depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBST">
            <summary>
            Obstruction level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBSTRE">
            <summary>
            Obscured face linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBSTYL">
            <summary>
            Obscured face linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBSWID">
            <summary>
            Obstruction Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCCTYP">
            <summary>
            Occupancy Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCCUPA">
            <summary>
            Occupancy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCOD">
            <summary>
            Hashed origin code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCONE">
            <summary>
            Objectcode 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCONET">
            <summary>
            Objectcode 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCONEX">
            <summary>
            Objectcode 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OCTWO">
            <summary>
            Objectcode 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OD">
            <summary>
            Outer Diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ODES">
            <summary>
            Owning design parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ODWGF">
            <summary>
            Open DWG filename (No suffix)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFDIR">
            <summary>
            Offset direction applied to repeat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFDIS">
            <summary>
            Offset distance applied to repeat elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFSET">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFTOL">
            <summary>
            PPoint offset tolerance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFTYP">
            <summary>
            Offset type: DELTA, LINEAR, RADIAL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OGDSTS">
            <summary>
            Distances to openings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OGOING">
            <summary>
            Overall Going
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OHTYPE">
            <summary>
            Hard type of owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKCLA">
            <summary>
            True if element may be claimed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKCLH">
            <summary>
            True if element and hierarchy may be claimed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKDROP">
            <summary>
            True if element may be dropped
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKDRPH">
            <summary>
            Primary elements preventing hierarchy drop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKREL">
            <summary>
            True if element may be released
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKRLEH">
            <summary>
            Primary elements preventing hierarchy release
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKRLEX">
            <summary>
            True if element may be extract released
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKRLH">
            <summary>
            True if element and hierarchy may be released
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OKUPGD">
            <summary>
            True if a Master DB that can be upgraded here
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLCOLO">
            <summary>
            Outline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLCONU">
            <summary>
            Outline colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLDKEY">
            <summary>
            Old key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLDSPL">
            <summary>
            USED INTERNALLY TO HELP WITH UPDATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLENG">
            <summary>
            Overall length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLIS">
            <summary>
            List of all possible owner types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLOFFS">
            <summary>
            OffsetLine offset from baseline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLPEN">
            <summary>
            Outline pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLSTRE">
            <summary>
            Outline linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLSTYL">
            <summary>
            Outline linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OMITFG">
            <summary>
            Omission flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ONPJ">
            <summary>
            Owning neutral point of joint (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ONPO">
            <summary>
            ONTO Point, position of view in the region
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ONPS">
            <summary>
            Owning neutral point of section (steelwork)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPAR">
            <summary>
            Owning parameters - catalogue component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPCLA">
            <summary>
            Claim Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPCOP">
            <summary>
            Copy-From Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPCRE">
            <summary>
            Create Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPCREF">
            <summary>
            Offpage connector reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPDEL">
            <summary>
            Delete Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPDI">
            <summary>
            Origin plane direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPDRO">
            <summary>
            Drop Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPERAT">
            <summary>
            Operator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPEXP">
            <summary>
            Export Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPHEIG">
            <summary>
            Operational Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPISS">
            <summary>
            Issue Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPLENG">
            <summary>
            Operational Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPMOD">
            <summary>
            Modify Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPNSIZ">
            <summary>
            Opening size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPOS">
            <summary>
            Overlay sheet position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPOUT">
            <summary>
            Output (DATAL) Access Control Operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPREMA">
            <summary>
            Operating pres. max
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPREMI">
            <summary>
            Operating pres. min
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPSTAT">
            <summary>
            Operation Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPTBLO">
            <summary>
            Optional block name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPTEMP">
            <summary>
            Operational temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OPWIDT">
            <summary>
            Operational Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORGELM">
            <summary>
            Reference to Original Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORI">
            <summary>
            Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORIA">
            <summary>
            Orientation as angles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORIE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORIL">
            <summary>
            Orientation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORILOC">
            <summary>
            Original Location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORIN">
            <summary>
            DRAFT user defined symbol orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORISE">
            <summary>
            Overall Rising
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORNA">
            <summary>
            Originator text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORRF">
            <summary>
            Origin reference (for templates)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSDWG">
            <summary>
            AutoCAD overlay name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSET">
            <summary>
            Offset/VIEW position flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSFN">
            <summary>
            Overlay sheet file
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSHT">
            <summary>
            Overshoot
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSHTTX">
            <summary>
            Overshoot text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSLV">
            <summary>
            Overlay sheet view layers visible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSRF">
            <summary>
            Overlay sheet ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSTYPE">
            <summary>
            Short cut for "Type of owner"
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OTHLEN">
            <summary>
            Length of other intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OTHNUM">
            <summary>
            Number of other intervals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OTMPMA">
            <summary>
            Operating temp. max
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OTMPMI">
            <summary>
            Operating temp. min
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OTRUNG">
            <summary>
            Omit Top Rung
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUAREA">
            <summary>
            Outer area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUDA">
            <summary>
            Date when the process design was analysed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUPRTR">
            <summary>
            Outside paint reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTB">
            <summary>
            User who created the transfer file
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTD">
            <summary>
            Outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTFRF">
            <summary>
            Reference of matching outfit object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTSD">
            <summary>
            Outside shield diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTSTA">
            <summary>
            Output Command Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OVCWID">
            <summary>
            Overall cables width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OVRSH">
            <summary>
            Overshoot (d-measure) for unsymmetrical flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OWNC">
            <summary>
            Owning connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OWNER">
            <summary>
            Element owner in database hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OWNEXP">
            <summary>
            Owner expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OWNEXT">
            <summary>
            Owner expression type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OWNLST">
            <summary>
            Owning hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OWNREF">
            <summary>
            ENDATUM owner reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORDARE">
            <summary>
            Surface Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORDREF">
            <summary>
            Order reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORDWEI">
            <summary>
            Order Weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBJBOO">
            <summary>
            An RDF Statment Object representing a boolean
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBJDOU">
            <summary>
            An RDF Statment Object representing a double
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBJINT">
            <summary>
            An RDF Statment Object representing an integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBJREF">
            <summary>
            Reference to an RDF Statement Object element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OASCR">
            <summary>
            Indicates screened or shielded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ORDLIM">
            <summary>
            Ordered limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBFRGB">
            <summary>
            RGB obscured face colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OBFRGP">
            <summary>
            RGB obscured face colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLNRGB">
            <summary>
            RGB outline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OLNRGP">
            <summary>
            RGB outline colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OFFSRF">
            <summary>
            Model offset datum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OSHMTL">
            <summary>
            Outer sheath material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTSHD">
            <summary>
            Outer sheath diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.OUTRAD">
            <summary>
            Outside Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAAX">
            <summary>
            Direction of axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PACTDI">
            <summary>
            Ppoint actual direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PADDXP">
            <summary>
            PADD Filter Expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAFRCO">
            <summary>
            Plot action from colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAFRFT">
            <summary>
            Plot action from fillstyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAFRLT">
            <summary>
            Plot action from linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAGE">
            <summary>
            Page in diagram
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAINTO">
            <summary>
            Painting other side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAINTT">
            <summary>
            Painting this side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAIREF">
            <summary>
            Reference to a PAINT element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PALIG">
            <summary>
            Panel alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PALLAN">
            <summary>
            Ppoint allowed angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PANESI">
            <summary>
            Panel Size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PANG">
            <summary>
            Angle subtended
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PANREF">
            <summary>
            Panel reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PANSCD">
            <summary>
            Panel storing code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PANSID">
            <summary>
            Side of panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PANSTC">
            <summary>
            Panel storing code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARA">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARAL">
            <summary>
            True if tap parallel to referred seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARCOL">
            <summary>
            Parent column
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARE">
            <summary>
            Comparator NAME OF THE AREA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARENT">
            <summary>
            Reference of ascendant element of specified type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARM">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARNAM">
            <summary>
            Part name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARREF">
            <summary>
            Part reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARTNU">
            <summary>
            Part number of a spooled component or leave tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PASEXT">
            <summary>
            Password Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PASS">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PASSQ">
            <summary>
            Password Quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATADV">
            <summary>
            Line Pattern Advance value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATDEF">
            <summary>
            Pattern Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATH">
            <summary>
            Path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATHTM">
            <summary>
            Path time for selected burning machine
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATNAM">
            <summary>
            Pattern Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATOCO">
            <summary>
            Plot action to colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATOFF">
            <summary>
            Line Pattern Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATOFT">
            <summary>
            Plot action to fillstyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATOLT">
            <summary>
            Plot action to linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATREP">
            <summary>
            Pattern Repeat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATYPE">
            <summary>
            Plot action type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAXI">
            <summary>
            Axial direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBAX">
            <summary>
            Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBBT">
            <summary>
            Bottom B length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBDI">
            <summary>
            Distance to bottom surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBDM">
            <summary>
            Snout bottom diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBENDN">
            <summary>
            Spooling pulled bend number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBOF">
            <summary>
            B offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBOP">
            <summary>
            Bottom of pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBOR">
            <summary>
            Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSCMU">
            <summary>
            Flexible Explorer Context Menu
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSFML">
            <summary>
            Flexible Explorer Formula
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSFTY">
            <summary>
            Flexible Explorer Formula Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSGRB">
            <summary>
            Flexible Explorer Grouping Formula
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSHDE">
            <summary>
            Flexible Explorer Hide Empty Child Nodes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSICO">
            <summary>
            Flexible Explorer Icon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSPAR">
            <summary>
            Flexible Explorer Parameter Nodes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSQNO">
            <summary>
            Flexible Explorer Query Node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSRCR">
            <summary>
            Flexible Explorer Recurrent Node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSSRT">
            <summary>
            Flexible Explorer Sorting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSTXT">
            <summary>
            Flexible Explorer Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBSVAL">
            <summary>
            Flexible Explorer Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PBTP">
            <summary>
            Top B length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCAX">
            <summary>
            Direction of C offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCBT">
            <summary>
            Bottom C length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCODA">
            <summary>
            Precision code angles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCODE">
            <summary>
            Precision code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCODF">
            <summary>
            Precision code fractions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCODI">
            <summary>
            Precision code imperial
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCODM">
            <summary>
            Precision code metric
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCOF">
            <summary>
            C offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCON">
            <summary>
            Connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCONDE">
            <summary>
            Ppoint connection description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCONXF">
            <summary>
            Consumer Extract Database Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCORRO">
            <summary>
            P Tube corrosion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCPIDV">
            <summary>
            Enabled for project copy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCPSET">
            <summary>
            Enabled for project copy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCREF">
            <summary>
            Ppoint and ref of connected piping component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCRFA">
            <summary>
            All spools that contain this element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCTP">
            <summary>
            Top C length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PCWALL">
            <summary>
            Ppoint connect wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDAREF">
            <summary>
            Pipe data table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDEFI">
            <summary>
            Primitive Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDELE">
            <summary>
            Reference of matching hull object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDEREF">
            <summary>
            Pipe data element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDIA">
            <summary>
            Diameter parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDIR">
            <summary>
            Ppoint direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDIS">
            <summary>
            Distance parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDISLF">
            <summary>
            Discipline Location Container Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDNAME">
            <summary>
            Production name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDTINT">
            <summary>
            Production date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDTTXT">
            <summary>
            Production date text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PDWGF">
            <summary>
            DWG filename (with suffix)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PERS">
            <summary>
            Perspective angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFLALL">
            <summary>
            Flange allowance parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFLOFF">
            <summary>
            Flange offset parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFON">
            <summary>
            Projection line text font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFONTN">
            <summary>
            Projection line text font name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFRE">
            <summary>
            Pfitting reference for Cofittings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFREQ">
            <summary>
            Picture file required flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFREQX">
            <summary>
            Reconfigurer Drawingfile flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PGRD">
            <summary>
            Ppoint gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHBO">
            <summary>
            Pipe head bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHBP">
            <summary>
            Bottom of pipe head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHCO">
            <summary>
            Pipe head connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHDR">
            <summary>
            Pipe head direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHEI">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHGR">
            <summary>
            Pipe head gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHOD">
            <summary>
            Pipe head outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHPO">
            <summary>
            Pipe head position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PHTP">
            <summary>
            Top of pipe head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICCOL">
            <summary>
            Picture current colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICDMS">
            <summary>
            Picture current dimension style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICF">
            <summary>
            Picture filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICFD">
            <summary>
            Picture file distribution flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICGRS">
            <summary>
            Picture current grid ruler style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICHTY">
            <summary>
            Hard type of picture
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICLBS">
            <summary>
            Picture current label style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICLRF">
            <summary>
            Picture current layer reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICLST">
            <summary>
            Picture current linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICORF">
            <summary>
            Picture current owner reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICSTY">
            <summary>
            Soft type of picture
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICTXS">
            <summary>
            Picture current text style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICVWS">
            <summary>
            Picture current view style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PIDR">
            <summary>
            Comparator PEGS UDA as real
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PIDT">
            <summary>
            Comparator PEGS UDA as text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PILR">
            <summary>
            Comparator PEGS Link UDA as real
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PINDEN">
            <summary>
            Pin Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PINSCN">
            <summary>
            Pipe Insulation colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PINSCO">
            <summary>
            Pipe Insulation colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PINSST">
            <summary>
            Pipe Insulation linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PIPSYM">
            <summary>
            Pipe-end symbol flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PITCH">
            <summary>
            Pitch of stair flight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PITCHO">
            <summary>
            Angular offset from ladder pitch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PJUS">
            <summary>
            Projection line text justification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PKDI">
            <summary>
            Proportional distance along Pline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PKEY">
            <summary>
            Pline identifier key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLALEN">
            <summary>
            Raw plate length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLANU">
            <summary>
            Planning Unit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLANV">
            <summary>
            Is Plan View
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLAREA">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLATYP">
            <summary>
            Type of plate e.g. Plate, Bracket, Clip,...
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLAWDT">
            <summary>
            Raw plate width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLAX">
            <summary>
            2D direction angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCL">
            <summary>
            Projection line clearance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCLFL">
            <summary>
            Proj. line clearance flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCLTX">
            <summary>
            Projection line clearance text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCN">
            <summary>
            Pline centreline flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCO">
            <summary>
            Pline connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCOLO">
            <summary>
            Projection line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCONU">
            <summary>
            Projection line colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLDE">
            <summary>
            Pline description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLDI">
            <summary>
            Projection line direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLED">
            <summary>
            Plane entry direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLEN">
            <summary>
            Pline end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLENCU">
            <summary>
            Pline end, allowing for cutback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLFG">
            <summary>
            Plines flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLINON">
            <summary>
            Pline-required flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLLE">
            <summary>
            Pline level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLLS">
            <summary>
            List of valid Plines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNA">
            <summary>
            List of available Pline names
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNCOL">
            <summary>
            Pline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNCON">
            <summary>
            Pline colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNP">
            <summary>
            Pline pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNSTR">
            <summary>
            Pline linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNSTY">
            <summary>
            Pline linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLOR">
            <summary>
            Pline orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLPM">
            <summary>
            Plane pipe packing method - nearest or weighted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLPN">
            <summary>
            Projection line pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLPP">
            <summary>
            Plane pipe positioning code word used by Router
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLPU">
            <summary>
            Pline purpose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLRD">
            <summary>
            Plane routine direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLREF">
            <summary>
            Pline reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLREFS">
            <summary>
            Pline references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLRF">
            <summary>
            Plane reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSP">
            <summary>
            Projection line text line spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSPTX">
            <summary>
            Proj line text line-spacing text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLST">
            <summary>
            Pline start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSTCU">
            <summary>
            Pline start, allowing for cutback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSTRE">
            <summary>
            Projection linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSTYL">
            <summary>
            Projection linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLTU">
            <summary>
            Pline tube flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLTX">
            <summary>
            Projection line text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLVI">
            <summary>
            List of visible Plines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLVIF">
            <summary>
            Pline visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLWW">
            <summary>
            Plane wall to wall positioning code used by Router
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PMAX">
            <summary>
            Maximum part number in current spool drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PMLFUN">
            <summary>
            PML Function name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PMLNAM">
            <summary>
            Name of Pmlobject
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PMOD">
            <summary>
            Plane mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PNAM">
            <summary>
            Property description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PNTARR">
            <summary>
            Points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PNTUV">
            <summary>
            Point2D
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PNTXYZ">
            <summary>
            Point3D
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POBO">
            <summary>
            Port Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POCK">
            <summary>
            Is a branch component in a pocket
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POCO">
            <summary>
            Port Connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POD">
            <summary>
            Ppoint outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PODI">
            <summary>
            Port Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POEF">
            <summary>
            Post-evaluation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POFF">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POINUM">
            <summary>
            Point Num
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POIS">
            <summary>
            Spot value of Poissons ratio
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POITYP">
            <summary>
            Point type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PONA">
            <summary>
            Port Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POOR">
            <summary>
            Port orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POPCOD">
            <summary>
            Post Operation Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POPS">
            <summary>
            Port Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POS">
            <summary>
            Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSE">
            <summary>
            End point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSEE">
            <summary>
            Easting of end point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSEU">
            <summary>
            Upping of end point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSEV">
            <summary>
            Position evaluation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSEY">
            <summary>
            Northing (Y coordinate) of end point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSFOR">
            <summary>
            Intelligent Text positional code word expansion style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSI">
            <summary>
            Positioning flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSL">
            <summary>
            Positioning line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSN">
            <summary>
            Northing of position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSNO">
            <summary>
            Position number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSREF">
            <summary>
            Reference to point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSS">
            <summary>
            Start point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSSE">
            <summary>
            Easting of start point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSSN">
            <summary>
            Northing of start point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSSU">
            <summary>
            Upping of start point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSTEX">
            <summary>
            Post Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSTOF">
            <summary>
            Vertical post offset from the routing path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSTSP">
            <summary>
            Default post spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSU">
            <summary>
            Upping of position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSX">
            <summary>
            Easting (X coordinate) of position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSXP">
            <summary>
            Position expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POTA">
            <summary>
            Port Target Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POWFAC">
            <summary>
            Powder point factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POZOOM">
            <summary>
            Zoom center and scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPAFR">
            <summary>
            Arrive flange required
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPANFL">
            <summary>
            Pipe Piece Angle between flanges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPAREF">
            <summary>
            Pipe Piece Arrive Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPBO">
            <summary>
            Ppoint bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPBRAD">
            <summary>
            Pipe piece bend radii
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPBRAT">
            <summary>
            Pipe piece bend ratio
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPCNBD">
            <summary>
            Pipe piece contains bends
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPCO">
            <summary>
            Ppoint connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPCOU">
            <summary>
            Number of valid Ppoints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPCUTL">
            <summary>
            Cut Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPDE">
            <summary>
            Ppoint description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPDI">
            <summary>
            Ppoint number for direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPER">
            <summary>
            Pipe piece end reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPEXST">
            <summary>
            True if Ppoint exists
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPFINL">
            <summary>
            Finished Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPFMCV">
            <summary>
            Pipe piece fabrication machines verified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPHEI">
            <summary>
            Ppoint height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPLFR">
            <summary>
            Leave flange required
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPLREF">
            <summary>
            Pipe Piece Leave Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPLS">
            <summary>
            List of valid Ppoints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPMODI">
            <summary>
            Pipe piece modified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPNU">
            <summary>
            Design PPoint/Port number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPOFFT">
            <summary>
            Ppoint offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPOINX">
            <summary>
            Ppoint information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPOS">
            <summary>
            Ppoint position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPREF">
            <summary>
            Ppoint reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPRFA">
            <summary>
            All components in the PipePiece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPRO">
            <summary>
            Parameterised Property Expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPSK">
            <summary>
            Ppoint pskey
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPSR">
            <summary>
            Pipe piece start reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPSTU">
            <summary>
            Pipe Piece Specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPUR">
            <summary>
            Ppoint purpose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPVBMC">
            <summary>
            Return the bending machine IF the pipe piece is verified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPVERI">
            <summary>
            Pipe piece verified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPVI">
            <summary>
            List of visible Ppoints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPVIF">
            <summary>
            Ppoint visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPVWMC">
            <summary>
            Return the welding machine IF the pipe piece is verified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPWID">
            <summary>
            Ppoint width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PQAANG">
            <summary>
            Angle between alignment direction of specified pp and adjacent component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PQANG">
            <summary>
            Angle between specified Ppoint and adjacent component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PQBORE">
            <summary>
            TRUE if specified Ppoint has same bore as adjacent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PQCON">
            <summary>
            TRUE if leave Ppoint has Correct connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PQOFF">
            <summary>
            Offset between specified Ppoint and adjacent component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PQUA">
            <summary>
            Property qualifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRAD">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRAV">
            <summary>
            Average pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRBLNK">
            <summary>
            Primitive blanking flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRBMAR">
            <summary>
            Primitive blanking margin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRBMPH">
            <summary>
            Primitive blanking margin physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRBMTX">
            <summary>
            Primitive blanking margin text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRCODE">
            <summary>
            Short code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRCONV">
            <summary>
            Convertor for property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDBSN">
            <summary>
            Start DB Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDDBF">
            <summary>
            Reference to the Master DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDE">
            <summary>
            Property default
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDES">
            <summary>
            Property value from design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDLS">
            <summary>
            List of all design properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRECED">
            <summary>
            Precedence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREDIT">
            <summary>
            Editor for property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREF">
            <summary>
            Pre-evaluation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREFIX">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREFSP">
            <summary>
            Preferred Specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREOP">
            <summary>
            Reference of TROUCO/TROPER creating this POSTOP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREPPR">
            <summary>
            Preparation information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PREPT">
            <summary>
            Preparation time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRES">
            <summary>
            Pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRFC">
            <summary>
            Pressure factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRFELE">
            <summary>
            Cableway profile element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRFG">
            <summary>
            Profile flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRFL">
            <summary>
            Profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRFOBS">
            <summary>
            Cableway profile obstructions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRGLDF">
            <summary>
            Reference to Project Definition element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRICEE">
            <summary>
            Price estimate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRIMDB">
            <summary>
            Global status of DB, primary or secondary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRIMEM">
            <summary>
            Primary member
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRIMSY">
            <summary>
            Reference of the primary system elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRIMTY">
            <summary>
            True if element is primary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRITYP">
            <summary>
            Gpart Primary type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJD">
            <summary>
            Project description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJID">
            <summary>
            Project id. Available on STAT or GSTAT element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJLCK">
            <summary>
            Project lock
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJN">
            <summary>
            Project number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJSTA">
            <summary>
            Access Control project status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJUID">
            <summary>
            Project unique identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRLS">
            <summary>
            List of valid properties - catalogue or design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMA">
            <summary>
            Maximum pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMDBF">
            <summary>
            Reference of MDB Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMDIR">
            <summary>
            Primary Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMI">
            <summary>
            Minimum pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMLOC">
            <summary>
            Primary location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMMEM">
            <summary>
            True if there are any primary elements amongst descendants
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMOWN">
            <summary>
            Primary owning element (will be itself if primary)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMRF">
            <summary>
            Primary Location Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMV">
            <summary>
            Draughting primitive visibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROCDE">
            <summary>
            PROCess DEscription
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRODID">
            <summary>
            Product id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRODRF">
            <summary>
            Reference to Production Object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRODUC">
            <summary>
            Production level radiation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROJ">
            <summary>
            PROJID - on the DB element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROLEN">
            <summary>
            Raw profile length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROMIX">
            <summary>
            Index of Promote Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROP">
            <summary>
            Property value from catalogue or design dataset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROPG">
            <summary>
            DB propagation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROPRE">
            <summary>
            Calculated Property Real Attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROSID">
            <summary>
            Plate side with most profile markings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROUT">
            <summary>
            List of all properties excluding hidden ones, i.e as output in "Q ATT"
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRPU">
            <summary>
            Property purpose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRREF">
            <summary>
            Dataset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTI">
            <summary>
            Property title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTIDL">
            <summary>
            Long part id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTIDM">
            <summary>
            Module part id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTIDS">
            <summary>
            Short part id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTLST">
            <summary>
            Parts list name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTREF">
            <summary>
            Part reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTRTX">
            <summary>
            Part element R text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTSTX">
            <summary>
            Part element S text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTTTX">
            <summary>
            Part element T text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTXRF">
            <summary>
            Return reference from PART element to SPCOs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRVLOC">
            <summary>
            Previous Location of Command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRVNAC">
            <summary>
            Non-additive changes count of previous db file
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRVRF">
            <summary>
            Reference to previous owner of DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRVSES">
            <summary>
            Previous Session to that specified
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSARFA">
            <summary>
            Pipespool arrive references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSATTS">
            <summary>
            List of pseudo attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSESS">
            <summary>
            Previous session number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSFG">
            <summary>
            Piping component symbol flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSIZE">
            <summary>
            Panel size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSKE">
            <summary>
            Key for ISODRAFT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSLDIR">
            <summary>
            Ppoint slope direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSLRFA">
            <summary>
            Pipespool leave references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSPE">
            <summary>
            Pipe specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSPIN">
            <summary>
            Ppoint number showing position of spindle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSPREF">
            <summary>
            Associated POINSP Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSTAT">
            <summary>
            Plane status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSTF">
            <summary>
            Pointset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSTLEN">
            <summary>
            Pipe stock length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSTR">
            <summary>
            Structural Pline set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSTYP">
            <summary>
            Spool Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSVLD">
            <summary>
            Pipespool valid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTADEG">
            <summary>
            Projection Text Angle Degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTADGP">
            <summary>
            Projection Text Angle Degrees
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTAN">
            <summary>
            Projection line text angle flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTBO">
            <summary>
            Pipe tail bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTBP">
            <summary>
            Bottom of pipe tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCD">
            <summary>
            Parameterised direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCH">
            <summary>
            Projection text character height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCHTX">
            <summary>
            Proj text char height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCO">
            <summary>
            Pipe tail connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCOLO">
            <summary>
            Projection text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCONU">
            <summary>
            Projection text colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTCPOS">
            <summary>
            Parameterised position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTDI">
            <summary>
            Distance to top surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTDM">
            <summary>
            Snout top diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTDR">
            <summary>
            Pipe tail direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTDTRE">
            <summary>
            Part Data set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTEM">
            <summary>
            Pipework temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTEPOS">
            <summary>
            Parameterised end position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTFA">
            <summary>
            Point references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTGR">
            <summary>
            Pipe tail gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTLH">
            <summary>
            Projection text letter height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTNB">
            <summary>
            Old spooler bolt part number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTNH">
            <summary>
            Old spooler head tube part number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTNO">
            <summary>
            Old spooler component part number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTNT">
            <summary>
            Old spooler tube part number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTOD">
            <summary>
            Pipe tail outside diameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTOF">
            <summary>
            Projection line text offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTOFTX">
            <summary>
            Projection line text offset text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTOLER">
            <summary>
            Tolerance on a design property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTOP">
            <summary>
            Top of pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTPN">
            <summary>
            Projection text pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTPO">
            <summary>
            Pipe tail position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTPTXT">
            <summary>
            Profile type. e.g. Stiffener, Flange,...
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTRE">
            <summary>
            Point set reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTRF">
            <summary>
            Point reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTS">
            <summary>
            Line definition points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTSP">
            <summary>
            Paint specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTSPOS">
            <summary>
            Parameterised start position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTTP">
            <summary>
            Top of pipe tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTYP">
            <summary>
            Property type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PUCD">
            <summary>
            Paint Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PUINCD">
            <summary>
            Inside punch code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PUNCHT">
            <summary>
            Punching time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PUNI">
            <summary>
            Data Property Units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PUOUCD">
            <summary>
            Outside punch code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PURCH">
            <summary>
            Purchase information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PURP">
            <summary>
            Description code word
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PVIF">
            <summary>
            PPoint/Pline visibility filter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PVNO">
            <summary>
            Picture version number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PWALLT">
            <summary>
            Ppoint wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PWAS">
            <summary>
            Percentage wastage factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PWID">
            <summary>
            Width / Wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PWWFAC">
            <summary>
            Powder way factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PX">
            <summary>
            Cartesian X position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PXBS">
            <summary>
            Inclination of bottom surface to local X axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PXLE">
            <summary>
            X length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PXTS">
            <summary>
            Inclination of top surface to local X axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PY">
            <summary>
            Cartesian Y position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PYBS">
            <summary>
            Inclination of bottom surface to local Y axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PYLE">
            <summary>
            Y length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PYTS">
            <summary>
            Inclination of top surface to local Y axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PZ">
            <summary>
            Cartesian Z position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PZAXI">
            <summary>
            Alignment axial direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PZDIR">
            <summary>
            Ppoint alignment direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PZLE">
            <summary>
            Z length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAGENO">
            <summary>
            Last page checked
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLAREF">
            <summary>
            Manufacturing plate reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCUHO">
            <summary>
            True if plate has holes to be cut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLDRHO">
            <summary>
            True if plate has holes to be drilled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLLBL">
            <summary>
            True if plate has labels defined
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSIHO">
            <summary>
            True if plate has sink holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSLHO">
            <summary>
            True if plate has slotted holes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLTHHO">
            <summary>
            True if plate has holes to be threaded
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSCOD">
            <summary>
            Position code for auxiliary function
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSPP">
            <summary>
            Position number per phase
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRBCD">
            <summary>
            Basic profile type code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRCUHO">
            <summary>
            True if profile has holes to be cut in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRCUTO">
            <summary>
            True if profile has cutouts in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDRHO">
            <summary>
            True if profile has drill holes in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRJMAN">
            <summary>
            Project manager
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRLBL">
            <summary>
            True if profile has labels defined in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMRK">
            <summary>
            True if profile has marking defined in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRNOT">
            <summary>
            True if profile has notches in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRSIHO">
            <summary>
            True if profile has sink holes in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRSLHO">
            <summary>
            True if profile has slotted holes in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRTHHO">
            <summary>
            True if profile has threaded holes in this surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLOCK">
            <summary>
            True if element pos line is locked
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDDAT">
            <summary>
            Production date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROPTY">
            <summary>
            Property Dimension from catalogue or design dataset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRDREF">
            <summary>
            Reference to an RDF Statement Predicate element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSUV">
            <summary>
            Rest plate position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PPARM">
            <summary>
            Profile parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRBTYP">
            <summary>
            Basic Profile Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSHAPE">
            <summary>
            Profile shape symbol text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARTYP">
            <summary>
            Type of part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTORDR">
            <summary>
             Order of part in rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTLHTX">
            <summary>
            Projection text letter height text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PSPR">
            <summary>
            Pipe Spool Previously Released
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRIDBV">
            <summary>
            Primary Database View
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICCNS">
            <summary>
            Picture current connector style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRIRTY">
            <summary>
            Priority of Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PFPPOS">
            <summary>
            Polyface pt pos
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PNTREF">
            <summary>
            Reference to a point in a PFACE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRESTR">
            <summary>
            Plane restricted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAFRGB">
            <summary>
            RGB plot action from colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PAFRGP">
            <summary>
            RGB plot action from colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATRGB">
            <summary>
            RGB plot action to colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PATRGP">
            <summary>
            RGB plot action to colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICRGB">
            <summary>
            RGB picture current colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PICRGP">
            <summary>
            RGB picture current colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PINRGB">
            <summary>
            RGB pipe insulation colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PINRGP">
            <summary>
            RGB pipe insulation colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCRGB">
            <summary>
            RGB projection line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCRGP">
            <summary>
            RGB projection line colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNRGB">
            <summary>
            RGB pline colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNRGP">
            <summary>
            RGB pline colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTXRGB">
            <summary>
            RGB projection text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PTXRGP">
            <summary>
            RGB projection text colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PULLLS">
            <summary>
            Pull pit list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSATT">
            <summary>
            Name of attribute (or pseudo) to be used for label position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSMOD">
            <summary>
            Auto labelling Positioning setting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.POSMOI">
            <summary>
            Auto labelling positioning setting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROPST">
            <summary>
            Property set reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PULTSN">
            <summary>
            Pulling tension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLANID">
            <summary>
            index of the grid plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLANTP">
            <summary>
            type of the grid plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLLIM">
            <summary>
            limited plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLTYPE">
            <summary>
            Type of Grid Plane Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PNTXY">
            <summary>
            Detailing Graphics 2D Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRFMAT">
            <summary>
            Detailing Item Profile Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRSTAT">
            <summary>
            Welding Element Production Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PARTRF">
            <summary>
            Manufacturing part references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PECPAR">
            <summary>
            Endcut parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLCUTO">
            <summary>
            True if plate has cutouts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLMKHO">
            <summary>
            True if plate has holes to be marked
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLMRK">
            <summary>
            True if plate has marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLNOT">
            <summary>
            True if plate has notches
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PLSTAT">
            <summary>
            Planning status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRCTIM">
            <summary>
            Processing time in seconds
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PRMKHO">
            <summary>
            True if profile has holes to be marked in surfaces
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.PROTYP">
            <summary>
            Profile type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QALLSI">
            <summary>
            AllocSize
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QMXUPT">
            <summary>
            MaxUserPtr
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QNELEM">
            <summary>
            QNoElem
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QOBJSI">
            <summary>
            ObjectSize
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QTYPE">
            <summary>
            Type of question
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUACD">
            <summary>
            Quality code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUAL">
            <summary>
            Qualifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUAN">
            <summary>
            Quantity (always one!)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUAPAI">
            <summary>
            Paint specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUATXT">
            <summary>
            Quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUES">
            <summary>
            Question
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.QUSEXP">
            <summary>
            question expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADD">
            <summary>
            Default Radius value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADF">
            <summary>
            Radius attractor factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADI">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADIPL">
            <summary>
            Radial plane flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADISP">
            <summary>
            Radius Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADL">
            <summary>
            Radius limits (Min/Max)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RADS">
            <summary>
            Radius set flag - ignore Radius values if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RAILHE">
            <summary>
            Heights of rails measured from path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RAILTR">
            <summary>
            Rail Trim
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RANANG">
            <summary>
            Range of available angles for bends and elbows
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RANEQ">
            <summary>
            Range of the nearest equipment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RANRAD">
            <summary>
            Range of available radii
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATFAC">
            <summary>
            Rationalisation factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATI">
            <summary>
            Pressure rating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATM">
            <summary>
            Attributes on CE which are used in dynamic rules
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATPOT">
            <summary>
            Rationalisation post text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATPRE">
            <summary>
            Rationalisation pre text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATS">
            <summary>
            Slave attributes for dynamic rules
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RATTAL">
            <summary>
            Ratta list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RAWNAM">
            <summary>
            Name only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RAWPLA">
            <summary>
            Raw Plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RAWPRO">
            <summary>
            Name of raw profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RBCTYP">
            <summary>
            Revision History Column Type: 1=RevNo,2=Date,3=User,4=Comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RCOD">
            <summary>
            Direction of region vertical on sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RCOF">
            <summary>
            Rough centre of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RCOU">
            <summary>
            Number of rules on element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RCPY">
            <summary>
            Reconfigured copy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RDEF">
            <summary>
            Port rotation flexibility defaults
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RDEP">
            <summary>
            Local design property value (synonym of LDPR)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REACT">
            <summary>
            Reactance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.READ">
            <summary>
            Read only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REALEV">
            <summary>
            Real evaluation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REALOV">
            <summary>
            List of Values for Status Reason
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REALXP">
            <summary>
            Real expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RECOMM">
            <summary>
            Release to 3D comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REDATE">
            <summary>
            Release to 3D date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REDREF">
            <summary>
            Reducer table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REDTYP">
            <summary>
            Reducer Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REDXRF">
            <summary>
            Return reference from Reducer Table element to SPECs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REF">
            <summary>
            Reference of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFA">
            <summary>
            Reference attribute used in ports
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFI">
            <summary>
            Reference array index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFL">
            <summary>
            Types of elements (including UDETs) that can be pointed to by a reference attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFLCL">
            <summary>
            True if reflected in CL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFLEV">
            <summary>
            Reference Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFMOD">
            <summary>
            Reflection Mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFSIZ">
            <summary>
            Reference size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RELREV">
            <summary>
            Related revisions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REPCOU">
            <summary>
            Rule Repeat Counter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REPSEQ">
            <summary>
            Sequence no. for template repeat element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REPTXT">
            <summary>
            Reporter text used for element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REQUIR">
            <summary>
            Action is not optional
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESIS">
            <summary>
            Resistance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESO">
            <summary>
            Model Resolution (distance)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESPAR">
            <summary>
            Calculated value of parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESTAT">
            <summary>
            Release to 3D status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REUSER">
            <summary>
            Release to 3D user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REV">
            <summary>
            Pipe Revision number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REVDIR">
            <summary>
            Reverse Direction flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REWIDT">
            <summary>
            Reduced width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RFLAG">
            <summary>
            Type of real answer NONE, SINGle, RANGe or MULTi
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RFLF">
            <summary>
            Rotational spring values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RFLG">
            <summary>
            RPROP flag on geomset/pointset - set if RPROP used
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RGBCOL">
            <summary>
            RGB colour vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RHOST">
            <summary>
            Host computer name or IP address of remote machine
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RINE">
            <summary>
            Rotational inertia vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RINS">
            <summary>
            Inside radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RISE">
            <summary>
            Tread Rise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLAC">
            <summary>
            Rule action array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLEX">
            <summary>
            Array of references of special rules to exclude
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLIM">
            <summary>
            Rotation limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLIN">
            <summary>
            Array of references of special rules to include
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLIS">
            <summary>
            List of rules set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLLO">
            <summary>
            Rule logical array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLOC">
            <summary>
            Branch Member Creation Status code (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLSE">
            <summary>
            Rule selection array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLST">
            <summary>
            Array of ROUTER saved rules
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLSTRF">
            <summary>
            Ruler style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RMFL">
            <summary>
            Rotational moment flexibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RMOF">
            <summary>
            Rough moments of inertia
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNAM">
            <summary>
            Recipient name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNAME">
            <summary>
            Real Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNGCON">
            <summary>
            Rung Connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNGOFF">
            <summary>
            Rung Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNODEL">
            <summary>
            Rnode list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNREF">
            <summary>
            Route Node reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNRIDF">
            <summary>
            Rung Rising Default
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNRIMA">
            <summary>
            Rung Rising Minimum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNRIMI">
            <summary>
            Rung Rising Minimum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RNTYPE">
            <summary>
            RNode Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROBRRU">
            <summary>
            Router Rules applying to a piping element or members
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROLREF">
            <summary>
            Access Control role references from ACR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RONL">
            <summary>
            Readonly access to MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROOMTY">
            <summary>
            Room Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RORIEN">
            <summary>
            True if repeat item is re-orientated upon rotation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROTN">
            <summary>
            Rotation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROUT">
            <summary>
            Outside radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROUTND">
            <summary>
            Cable Preliminary route point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROUTRE">
            <summary>
            Route reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWCOL">
            <summary>
            Row colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWCON">
            <summary>
            Row colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWID">
            <summary>
            Row Id
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWLAB">
            <summary>
            Row Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWNUM">
            <summary>
            Pin row number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWSTR">
            <summary>
            Row linestyle Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWSTY">
            <summary>
            Row linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPARM">
            <summary>
            Rest plate parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPEN">
            <summary>
            Pen for internal rows
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLCOD">
            <summary>
            Rest plate code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLCRE">
            <summary>
            Rest plates created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLNAM">
            <summary>
            Rest plate name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLNUM">
            <summary>
            Number of rest plates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLPOS">
            <summary>
            Rest plate position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLSET">
            <summary>
            Rest plate set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLTYP">
            <summary>
            Rest plate type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLUSD">
            <summary>
            Rest plates used
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPRE">
            <summary>
            Reference pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPRO">
            <summary>
            Catalogue dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPTDAT">
            <summary>
            Radial Dim Point 2D Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPTX">
            <summary>
            Text used when presenting the attribute to the user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RREF">
            <summary>
            References with dynamic rules depending on attributes in CE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RRSF">
            <summary>
            Rep ruleset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSBOX">
            <summary>
            Bounding box of RSO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSDIM">
            <summary>
            RSO type for dimensioning
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSEQA">
            <summary>
            Sequence numbers for rule execution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSEQFA">
            <summary>
            Rule sequence ref array for local names
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSEQN">
            <summary>
            Sequence number for rule execution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSESS">
            <summary>
            Reason for creation of session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSET">
            <summary>
            Rotation limits set flag - ignore values if FALSE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFFD">
            <summary>
            Functional description on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFMC">
            <summary>
            Material code on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFMS">
            <summary>
            Material side on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFMT">
            <summary>
            Material thickness on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFSA">
            <summary>
            Auto stiffening on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFSD">
            <summary>
            Profile dim on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFSS">
            <summary>
            Stiffener side on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFST">
            <summary>
            Profile type on face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSFWT">
            <summary>
            Watertight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSGBOX">
            <summary>
            Bounding box of GRSO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSGVLD">
            <summary>
            GRSO valid for
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSINTP">
            <summary>
            Intersection point of RSO with given line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSLBRA">
            <summary>
            Bracket instance at limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSLELE">
            <summary>
            Limiting element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSLPRE">
            <summary>
            Profile end definition at limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSOPP">
            <summary>
            Returns the planar panel given an RSO and a point.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSOPPT">
            <summary>
            Returns the thickness of the selected planar panel.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSPAN">
            <summary>
            Panel(s) defined on RSO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSPLN">
            <summary>
            Principal plane of RSO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSRF">
            <summary>
            Rough surface area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTBY">
            <summary>
            Status set by
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTCOM">
            <summary>
            Status comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTDAT">
            <summary>
            Status date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTNAM">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTYP">
            <summary>
            Type of RSO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RTEM">
            <summary>
            Reference temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RTEX">
            <summary>
            R Text string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RTYP">
            <summary>
            Restraint type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RUAXE">
            <summary>
            Ruler axis direction (internal)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULAOF">
            <summary>
            Ruler start offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULAXE">
            <summary>
            Ruler axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULBOF">
            <summary>
            Ruler end offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULCDI">
            <summary>
            Custom direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULEER">
            <summary>
            Text of "nth" rule error
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULLIM">
            <summary>
            Ruler limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULLOF">
            <summary>
            Ruler label offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULLTC">
            <summary>
            Ruler long tick colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULLTL">
            <summary>
            Ruler long tick length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULMDC">
            <summary>
            List of rules modified since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULMDL">
            <summary>
            List of rules modified since given session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULMOC">
            <summary>
            True if rule modified since comparison date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULMOD">
            <summary>
            True if rule modified this session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULMTC">
            <summary>
            Ruler medium tick colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULMTL">
            <summary>
            Ruler medium tick length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULRCO">
            <summary>
            Ruler type code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULSET">
            <summary>
            List of rules set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULSTC">
            <summary>
            Ruler short tick colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULSTL">
            <summary>
            Ruler short tick length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULTCK">
            <summary>
            Number of ticks between labelled ticks
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULTCP">
            <summary>
            Ruler tick side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULTXP">
            <summary>
            Ruler text side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RUNGS">
            <summary>
            Number of rungs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RUNGSP">
            <summary>
            Rung Spacing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RUSE">
            <summary>
            True if PPROP/DPROP to be used as an RPROP in geomset/pointset attribute expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RUTCP">
            <summary>
            Ruler tick side (internal)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RUTXP">
            <summary>
            Ruler text side (internal)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVAU">
            <summary>
            Revision author
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVCANC">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVCNT">
            <summary>
            Revision Count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVCON">
            <summary>
            Revision Configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVCRIS">
            <summary>
            Revision Controlled Element Issue Statuses
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVCRWR">
            <summary>
            Working Revision Creation Statuses
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVCURR">
            <summary>
            Current revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVDT">
            <summary>
            Date of revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVFTYP">
            <summary>
            Revision file type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVISS">
            <summary>
            Issued
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVNPTS">
            <summary>
            Revision number value parts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVNUM">
            <summary>
            Revision number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVOL">
            <summary>
            Rough gross volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVSN">
            <summary>
            Revision number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVTM">
            <summary>
            Time of revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVURI">
            <summary>
            Issued object location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RWDOWN">
            <summary>
            Reference of associated WELD of RWELD element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RWDTBL">
            <summary>
            Table linking RWELD elements to design WELD elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RWEI">
            <summary>
            Rough weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RWIDTH">
            <summary>
            Rung Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RECCHK">
            <summary>
            Most recent DICE Check
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RAWREF">
            <summary>
            Raw material reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROTANG">
            <summary>
            Nested part rotation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RELELS">
            <summary>
            Related Elements, Fabrication
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RELELT">
            <summary>
            Related Element, Fabrication
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RELINF">
            <summary>
            Related Element Information, Fabrication
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RVLPOS">
            <summary>
            Revision links reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RDFIRI">
            <summary>
            International Resource Identifier used to identify an RDF Resource
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RDFOBJ">
            <summary>
            An RDF statement object string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RDFPRE">
            <summary>
            A prefix (short-hand) for an RDF namespace
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RMTRL">
            <summary>
            Rest material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPLREF">
            <summary>
            Raw plate reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPRREF">
            <summary>
            Raw profile reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFCLS">
            <summary>
            Referenced conceptual model class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RPTCNT">
            <summary>
            Symbol repeats count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RULSRC">
            <summary>
            Source element reference array for Rule Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFLIM">
            <summary>
            Reference limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFRAW">
            <summary>
            Raw surface reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFSPA">
            <summary>
            Reference to space arrangement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REFSUR">
            <summary>
            Reference to surface instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLTRGB">
            <summary>
            RGB ruler long tick colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RLTRGP">
            <summary>
            RGB ruler long tick colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RMTRGB">
            <summary>
            RGB ruler medium tick colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RMTRGP">
            <summary>
            RGB ruler medium tick colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWRGB">
            <summary>
            RGB row colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ROWRGP">
            <summary>
            RGB row colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTRGB">
            <summary>
            RGB ruler short tick colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RSTRGP">
            <summary>
            RGB ruler short tick colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RCONAT">
            <summary>
            List of valid connected route attachments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RELREF">
            <summary>
            Reference to DTRELA Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RELRFS">
            <summary>
            References to DTRELA Elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RILIST">
            <summary>
            Route information list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REMRKS">
            <summary>
            Remarks
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.REPSTL">
            <summary>
            Symbolic representation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESTRI">
            <summary>
            Restrict unused SPECs in Design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESVOL">
            <summary>
            Reserved volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.RESREF">
            <summary>
            Rest plate reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.S">
            <summary>
            Position southing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SAFC">
            <summary>
            Safety class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SAVDIR">
            <summary>
            Cached direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SAVPOS">
            <summary>
            Cached position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SBRA">
            <summary>
            SBOLT references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SBRP">
            <summary>
            SBFR to RPLA reference link (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCAL">
            <summary>
            DRAFT user defined symbol scale factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCALI">
            <summary>
            ADP main view allowable scale list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCALIN">
            <summary>
            Drafting symbol link scaling flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCALPH">
            <summary>
            ALPHA/NOALPHA flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCAREF">
            <summary>
            Area shape reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCBREF">
            <summary>
            Schematic element back reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCDELI">
            <summary>
            Delimiter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCDIGI">
            <summary>
            Digits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCEIRE">
            <summary>
            Enhanced instrument relationship
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCELOR">
            <summary>
            Enhanced instrumentation loop reference array for schematic elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCGTYP">
            <summary>
            Schematic nozzle gtype
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHED">
            <summary>
            Piping Schedule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHEID">
            <summary>
            Schematics reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHELE">
            <summary>
            Schematic head element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHEME">
            <summary>
            Scheme name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHFF">
            <summary>
            Schematic file format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHLNK">
            <summary>
            Connectivity Schematic Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCHTYP">
            <summary>
            Schematic type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIERT">
            <summary>
            Instrument enhanced reference type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIIRE">
            <summary>
            Instrument to instrument reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIIRT">
            <summary>
            Instrument to instrument reference type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIPRE">
            <summary>
            Instrument process reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIPRT">
            <summary>
            Instrument process reference type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIREF">
            <summary>
            Instrument reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIREL">
            <summary>
            Instrument relationship
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIRLT">
            <summary>
            Instrument relationship type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCIRTY">
            <summary>
            Instrument reference type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCLORE">
            <summary>
            Instrumentation loop reference array for schematic elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCOD">
            <summary>
            Isodraft Compipe: Short code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCOREF">
            <summary>
            Access Control scope references from ACR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCOSEL">
            <summary>
            Access Control scope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCOSLX">
            <summary>
            Access Control scope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCPANA">
            <summary>
            Schematic page name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCPATY">
            <summary>
            Schematic page type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCQUAN">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCRAPT">
            <summary>
            Total scrap of raw plate area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCRAPU">
            <summary>
            Total scrap of used raw plate area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCREF">
            <summary>
            Schematic element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCSTYP">
            <summary>
            Schematic stype
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCSYSD">
            <summary>
            System reference array for schematic diagrams
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCSYSF">
            <summary>
            System reference array for schematic elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCTDIR">
            <summary>
            Section Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCTELE">
            <summary>
            Schematic tail element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SDISTA">
            <summary>
            Vertical Distance of Start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SDOC">
            <summary>
            Comparator DOCUMENT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SDTH">
            <summary>
            Saddle thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SDTINT">
            <summary>
            Splitting date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SDTTXT">
            <summary>
            Splitting date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEALEV">
            <summary>
            Sea level height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SECTYP">
            <summary>
            Gpart Secondary type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SECU">
            <summary>
            User security
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SECUR">
            <summary>
            User security
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGE">
            <summary>
            Segment end point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGS">
            <summary>
            Segment start point position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SENS">
            <summary>
            Rotational sense
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEPAR">
            <summary>
            Separator String
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEQBLS">
            <summary>
            Sequence Blank Start Indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEQRES">
            <summary>
            Sequence Reset Indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEQU">
            <summary>
            Sequence Position in Member List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESCLA">
            <summary>
            Session Of Claim
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSC">
            <summary>
            Comment for specified session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSCA">
            <summary>
            List of pairs of DB number, last session number for all referenced DBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSCH">
            <summary>
            As for SESSCA, but searches all descendants for referenced DBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSD">
            <summary>
            Date of specified Session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSM">
            <summary>
            Session Of Last Modification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSNO">
            <summary>
            Current opened Session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SESSU">
            <summary>
            User creating specified session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SETDAT">
            <summary>
            Set Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEXPND">
            <summary>
            All descendent elements in secondary hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SFCODE">
            <summary>
            Stiffener Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SFLIMI">
            <summary>
            Spooling limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SFOR">
            <summary>
            Start force vector component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SFREF">
            <summary>
            Return reference from piping component or leave tube to spool or field element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHAP">
            <summary>
            Shape modulus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHBO">
            <summary>
            SUPCOMP head bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHDPOS">
            <summary>
            Dimension line/arc sheet position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHFALG">
            <summary>
            Shrinkage factor along main direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHFPRP">
            <summary>
            Shrinkage factor perpendicular to main direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHFSEA">
            <summary>
            Shrinkage factor for seams perp. to main direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHIPNO">
            <summary>
            Ship number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHIPX">
            <summary>
            Ship X position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHIPY">
            <summary>
            Ship Y position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHIPZ">
            <summary>
            Ship Z position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHOC">
            <summary>
            Shock load vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHOP">
            <summary>
            Shop/Site flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHOPRI">
            <summary>
            Shop Primer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHOWKP">
            <summary>
            Show kickplate in default representation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHPSYM">
            <summary>
            Shape symbol text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHPUV">
            <summary>
            Point defining shrinkage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHRF">
            <summary>
            Reference to associated sheet or library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHTNUM">
            <summary>
            Sheet Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHTOT">
            <summary>
            Total Sheets
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHVUV">
            <summary>
            Vector defining shrinkage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SHXYPS">
            <summary>
            2D Sheet Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIDES">
            <summary>
            Frame side visibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIF">
            <summary>
            Stress intensification factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIGF">
            <summary>
            Significant figures
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIGNIF">
            <summary>
            True if element is significant
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIGREF">
            <summary>
            Significant point reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SITEM">
            <summary>
            Reference from secondary hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIZE">
            <summary>
            Sheet/region size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIZEDB">
            <summary>
            Size of DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SJUS">
            <summary>
            Surface justification of Panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKEY">
            <summary>
            Symbol key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKEYSC">
            <summary>
            Universal SKEY scale factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKIPID">
            <summary>
            Skip ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLENG">
            <summary>
            Side length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLHNAP">
            <summary>
            Sorted list of HNODE after POINTR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLHNBP">
            <summary>
            Sorted list of HNODE before POINTR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLODIR">
            <summary>
            Slope direction array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLOPEF">
            <summary>
            SLOPEF (True if its a sloping wall else step change)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLOREF">
            <summary>
            Pipe slope reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLRAP">
            <summary>
            Sorted list of RATTA after POINTR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SLRBP">
            <summary>
            Sorted list of RATTA before POINTR
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMAX">
            <summary>
            Maximum spool number in current spool drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMEMB">
            <summary>
            Immediate members in secondary hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMNO">
            <summary>
            SMODU number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMOD">
            <summary>
            Sectioning mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMODID">
            <summary>
            Static LMI Model ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMOM">
            <summary>
            Start moment component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SNAM">
            <summary>
            Comparator LOCAL NAME OF THE PROCESS DESIGN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SOLFIL">
            <summary>
            Solid Filled Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SORF">
            <summary>
            Source reference (for automatic application)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SOUR">
            <summary>
            Source macro
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPAMAP">
            <summary>
            Pointer to map
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPARE">
            <summary>
            Spare for future use
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPBREF">
            <summary>
            Reference to boundary element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPECIF">
            <summary>
            True if outer panel contour on PS/SB are different
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPIN">
            <summary>
            DRAFT user defined spindle symbol/skey name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPINRE">
            <summary>
            Reference to external inventory element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPKBRK">
            <summary>
            ATTA flag to treat as a real element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPKCHG">
            <summary>
            flag to show where a spec change occurs in a branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPKDI">
            <summary>
            Proportional distance of start point along Pline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLA">
            <summary>
            Name of spigot plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLATE">
            <summary>
            Section plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLCHG">
            <summary>
            USED INTERNALLY TO HELP WITH UPDATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLH">
            <summary>
            Old spooler head tube spool number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLMEM">
            <summary>
            Spooling table attribute on SPOOL or FIELD elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLN">
            <summary>
            Old spooler component spool number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLNUM">
            <summary>
            Spool number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLP">
            <summary>
            Spool number prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLPAR">
            <summary>
            Branches referenced by a SPLDRG, SPOOL or FIELD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLT">
            <summary>
            Old spooler tube spool number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLTBL">
            <summary>
            Table linking SPOOL + FIELD elements to piping components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLVOL">
            <summary>
            Volume of a SPOOL element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMA">
            <summary>
            Spec angle maximum answer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMAAS">
            <summary>
            Finds all adjoining spaces of a given space and point.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMACC">
            <summary>
            Access authorization code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMACD">
            <summary>
            Access authorization description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMALL">
            <summary>
            Structural Allowance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMAOF">
            <summary>
            Offset AFT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMARA">
            <summary>
            Area of face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMARE">
            <summary>
            Area of face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMAS">
            <summary>
            Returns an adjoining space given a point and location vector.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMATP">
            <summary>
            Type of space arrangement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMBB">
            <summary>
            Bounding box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMBIN">
            <summary>
            Boundary identification number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMBNA">
            <summary>
            Boundary name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMBOF">
            <summary>
            Offset BOT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMBOX">
            <summary>
            Bounding box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMBR">
            <summary>
            Bounding reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCAS">
            <summary>
            Calculated steel paint area of space contents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCDE">
            <summary>
            Content description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCF">
            <summary>
            Returns the closest face to a point within a space.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCFA">
            <summary>
            Floor area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCLI">
            <summary>
            List of customer attributes for space
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCOL">
            <summary>
            Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCOS">
            <summary>
            Calculated centre of steel structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCOV">
            <summary>
            Centre of Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCTY">
            <summary>
            Content type code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCWB">
            <summary>
            Calculated length of butt weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCWC">
            <summary>
            Calculated Weight of space Contents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCWL">
            <summary>
            Calculated length of fillet weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMCWS">
            <summary>
            Calculated Weight of steel structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMDE">
            <summary>
            Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEAS">
            <summary>
            Estimated steel paint area of space contents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEHC">
            <summary>
            Estimated HVAC Capacity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEN">
            <summary>
            Envelop name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEPC">
            <summary>
            Estimated Power Consumption
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEWB">
            <summary>
            Estimated length of butt weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEWC">
            <summary>
            Estimated Weight of space Contents
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEWL">
            <summary>
            Estimated length of fillet weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMEWS">
            <summary>
            Estimated weight of steel structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMFAR">
            <summary>
            Face area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMFCL">
            <summary>
            Fire class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMFLW">
            <summary>
            Full load weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMFOF">
            <summary>
            Offset FWD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMFST">
            <summary>
            Face state
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMHSN">
            <summary>
            Hull surface name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMLSC">
            <summary>
            Space Category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMMVO">
            <summary>
            Total (moulded) volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMNBI">
            <summary>
            Next boundary identification number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMNOC">
            <summary>
            Noise category code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMNOD">
            <summary>
            Noise category description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMNVO">
            <summary>
            Net volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMPED">
            <summary>
            Permeability Damage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMPER">
            <summary>
            Permeability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMPOF">
            <summary>
            Offset PS
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMPP">
            <summary>
            Precise properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMPU">
            <summary>
            Purpose code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMRDH">
            <summary>
            Required deck height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMRFA">
            <summary>
            Required floor area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMRSE">
            <summary>
            Required service code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMRSN">
            <summary>
            Reference surface name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMRSO">
            <summary>
            Returns the RSO of the face.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMRTE">
            <summary>
            Reference to envelop space
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSAC">
            <summary>
            Safety category code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSAD">
            <summary>
            Safety category description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSAN">
            <summary>
            Space arrangement name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSBD">
            <summary>
            Space boundary definitions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSEC">
            <summary>
            Security classification code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSED">
            <summary>
            Security classification description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSFI">
            <summary>
            Subface identification number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSFP">
            <summary>
            Returns the space that contains the given point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSOF">
            <summary>
            Offset SB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSS">
            <summary>
            Space state
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSTP">
            <summary>
            User defined subtype
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMSWT">
            <summary>
            Type of space world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTHC">
            <summary>
            Thermal insulation code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTHD">
            <summary>
            Thermal insulation description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTIC">
            <summary>
            Compartment tightness code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTID">
            <summary>
            Compartment tightness description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTOF">
            <summary>
            Offset TOP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTOL">
            <summary>
            Type of limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMTYP">
            <summary>
            Type of space world as enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMVOI">
            <summary>
            Space void marker
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPOONU">
            <summary>
            Spool number including spool prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPOW">
            <summary>
            Reference of SPEC owning SPCO of branch members
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPPOSN">
            <summary>
            Position number of spigot plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPPURP">
            <summary>
            Special purpose table attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPRA">
            <summary>
            Spec angle answer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPRANG">
            <summary>
            Springback angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPRB">
            <summary>
            Spec bore answer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPRE">
            <summary>
            Component spec reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPSF">
            <summary>
            Sheet pointset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPSP">
            <summary>
            Old spooler spool prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPTYPE">
            <summary>
            Type of element to be selected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPWD">
            <summary>
            Spec text answer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQCURR">
            <summary>
            Current value in sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQMAX">
            <summary>
            Maximum value of sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQNAME">
            <summary>
            Name of sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQSTEP">
            <summary>
            Increments in sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQSTRT">
            <summary>
            Start value in sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQWRAP">
            <summary>
            True if wrap around in sequence is allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRCDIS">
            <summary>
            Source DISCIPLINE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SREF">
            <summary>
            Source reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SREL">
            <summary>
            Start releases (packed)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SREVAY">
            <summary>
            Sheet revisions array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRFTRE">
            <summary>
            Reference to a SRFTRT element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRTP">
            <summary>
            Sorting priority for dimensions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SSHE">
            <summary>
            Comparator NAME OF THE SHEET IN THE AREA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SSLENG">
            <summary>
            Second side length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SSPLIT">
            <summary>
            Spool Split
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STACOM">
            <summary>
            Comment to the current status set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STADAT">
            <summary>
            Standard Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAELE">
            <summary>
            Start Elevation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAHRF">
            <summary>
            Status History Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAN">
            <summary>
            Start angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAP">
            <summary>
            Length of arrive straight tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAPOI">
            <summary>
            Cable Start connection point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAREA">
            <summary>
            Reason for the current status set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAREF">
            <summary>
            Cable Start reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STARTI">
            <summary>
            Start ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STARTZ">
            <summary>
            Start from zero
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STASUS">
            <summary>
            Current status suspended
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAT">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STAUSE">
            <summary>
            Standard User
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STBO">
            <summary>
            SUPCOMP tail bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STCD">
            <summary>
            Symbol Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STDATE">
            <summary>
            Static name of DATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STDEFR">
            <summary>
            Status definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STEPID">
            <summary>
            Step ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STEPSP">
            <summary>
            Stepwise springback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STEREF">
            <summary>
            Stencil reference array for schematic elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STEX">
            <summary>
            S Text string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STFC">
            <summary>
            Constant stretch factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STFP">
            <summary>
            Proportional stretch factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STILEN">
            <summary>
            Stail length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STILEX">
            <summary>
            Stile Exit Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STINCD">
            <summary>
            Inside surface treatment symbol code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STINRF">
            <summary>
            Inside surface treatment reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STITL">
            <summary>
            Sheet title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STLE">
            <summary>
            Length of leave straight tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STLPOS">
            <summary>
            Status Element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STLR">
            <summary>
            Steel Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STLSF">
            <summary>
            Database reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STMF">
            <summary>
            Template selection pointer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STMPLS">
            <summary>
            List of STAMPs related to an MDB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STNO">
            <summary>
            Style number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STOCKL">
            <summary>
            Stock Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STOUCD">
            <summary>
            Outside Surface treatment symbol code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STOURF">
            <summary>
            Outside surface treatment reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STPDBS">
            <summary>
            Stamps containing db
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STPSES">
            <summary>
            Sessions used in at least one stamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STPUV">
            <summary>
            Start point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRCD">
            <summary>
            STRCD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRCON">
            <summary>
            Stair Configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRE">
            <summary>
            Spot value of stress
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STREAT">
            <summary>
            Surface treatment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STREV">
            <summary>
            String value evaluation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRJUS">
            <summary>
            Cable Way Justification Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRSTD">
            <summary>
            Stair Standard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRUCL">
            <summary>
            Structural Classification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRXP">
            <summary>
            String expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRXPL">
            <summary>
            True if surface treatment explicitly defined
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STSESS">
            <summary>
            Database session number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STSP">
            <summary>
            Structural specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STUDNA">
            <summary>
            Static name of the UDA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVASD">
            <summary>
            Status types eligible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVCOM">
            <summary>
            Status comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVDAT">
            <summary>
            Status Modification Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVDEM">
            <summary>
            Demote Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVDSC">
            <summary>
            Status description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVHIS">
            <summary>
            Status history
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVLNK">
            <summary>
            Status value Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVLSK">
            <summary>
            Status Link Elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVLST">
            <summary>
            Statuses assigned
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVMOD">
            <summary>
            Date of last status modification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVNAM">
            <summary>
            Status value name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVNUM">
            <summary>
            Status value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVPRO">
            <summary>
            Promote Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVREA">
            <summary>
            Status reason
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVREF">
            <summary>
            Value Ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVSUS">
            <summary>
            Current status held
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVTRV">
            <summary>
            Valid Transitions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVUNR">
            <summary>
            Unresolved Status refs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVUSD">
            <summary>
            Elements having this status value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVUSE">
            <summary>
            User making last status modification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVVAL">
            <summary>
            Status value Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVVLD">
            <summary>
            True if Status valid to be controlled
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STYF">
            <summary>
            Rep style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STYP">
            <summary>
            SPECON type question
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STYPDB">
            <summary>
            DB sub type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUBRUL">
            <summary>
            List of subrule indexes for given rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUFFIX">
            <summary>
            Suffix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPALI">
            <summary>
            All invalid ANCI REFS on a SITE, ZONE, PIPE, BRAN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPALL">
            <summary>
            All ANCI REFs on a SITE, ZONE, PIPE, BRAN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPFRA">
            <summary>
            Support FIXINGs reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPIRA">
            <summary>
            Invalid ANCILLARY support reference attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPP">
            <summary>
            Supplier Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPR">
            <summary>
            SUPREF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPRFA">
            <summary>
            ANCILLARY reference array attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPVFA">
            <summary>
            Individual ANCI valid flags array attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURF">
            <summary>
            Surface Preparation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURLNK">
            <summary>
            Reference to a terrain surface.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURMAT">
            <summary>
            Surface Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURNOR">
            <summary>
            Surface Normal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURPNT">
            <summary>
            Surface Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURPRE">
            <summary>
            Surface Preparation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVASPL">
            <summary>
            Hull symbolic view as plane Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVASSE">
            <summary>
            Hull symbolic view assembly elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVAUTO">
            <summary>
            Hull symbolic view auto Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVBLEX">
            <summary>
            Hull symbolic view exclude blocks Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVBLOC">
            <summary>
            Hull symbolic view block elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVCAX">
            <summary>
            Hull symbolic view coord axis Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVCOMN">
            <summary>
            Hull symbolic view component number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVCOMT">
            <summary>
            Hull symbolic view component type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVCROS">
            <summary>
            Hull symbolic view cross sect symbol Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVCURT">
            <summary>
            Hull symbolic view curve type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVCURV">
            <summary>
            Hull symbolic view curve elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDBEF">
            <summary>
            Hull symbolic view depth before
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDBEH">
            <summary>
            Hull symbolic view depth behind
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRAC">
            <summary>
            Hull symbolic view draw accommodation Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRAI">
            <summary>
            Hull symbolic view draw inters Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRAP">
            <summary>
            Hull symbolic view draw plane V
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRCW">
            <summary>
            Hull symbolic view draw cableway Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDREQ">
            <summary>
            Hull symbolic view draw equip Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRPI">
            <summary>
            Hull symbolic view draw pipe Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRPV">
            <summary>
            Hull symbolic view draw pvol Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRST">
            <summary>
            Hull symbolic view draw structure Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVDRVE">
            <summary>
            Hull symbolic view draw ventilation Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVENID">
            <summary>
            Static LMI Vendor ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVER">
            <summary>
            Comparator SHEET VERSION
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLOOK">
            <summary>
            Hull symbolic view looking direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLXMA">
            <summary>
            Hull symbolic view xmax
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLXMI">
            <summary>
            Hull symbolic view xmin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLYMA">
            <summary>
            Hull symbolic view ymax
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLYMI">
            <summary>
            Hull symbolic view ymin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLZMA">
            <summary>
            Hull symbolic view zmax
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVLZMI">
            <summary>
            Hull symbolic view zmin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVNAME">
            <summary>
            Hull symbolic view name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPANE">
            <summary>
            Hull symbolic view panel elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLEX">
            <summary>
            Hull symbolic view exclude panels Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLTY">
            <summary>
            Hull symbolic view plane type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLXO">
            <summary>
            Hull symbolic view x1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLXU">
            <summary>
            Hull symbolic view x2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLXV">
            <summary>
            Hull symbolic view x3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLYO">
            <summary>
            Hull symbolic view y1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLYU">
            <summary>
            Hull symbolic view y2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLYV">
            <summary>
            Hull symbolic view y3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLZO">
            <summary>
            Hull symbolic view z1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLZU">
            <summary>
            Hull symbolic view z2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPLZV">
            <summary>
            Hull symbolic view z3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPNAM">
            <summary>
            Hull symbolic view pan name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPONL">
            <summary>
            Hull symbolic view pan only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVPOSC">
            <summary>
            Hull symbolic view coord axis pos
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVRARR">
            <summary>
            Hull symbolic view array of reals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVREFL">
            <summary>
            Hull symbolic view reflect Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVRSO">
            <summary>
            Hull symbolic view RSO Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVSCAL">
            <summary>
            Hull symbolic view scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVSHPR">
            <summary>
            Hull symbolic view profile Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVSHSE">
            <summary>
            Hull symbolic view shell seam Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVSHTH">
            <summary>
            Hull symbolic view shell thickness Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVTYPE">
            <summary>
            Hull symbolic view type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SVWAY">
            <summary>
            Sheet Views array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SWEEP">
            <summary>
            Sweep angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SWING">
            <summary>
            Swing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYLBTA">
            <summary>
            SYLBTAble attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMBFG">
            <summary>
            Symbol flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMELE">
            <summary>
            Symmetric element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMGRO">
            <summary>
            Symbol Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMLNS">
            <summary>
            Side of direction vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMM">
            <summary>
            Symmetry code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMNAM">
            <summary>
            Symbol Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMXYZ">
            <summary>
            Vector along symmetry line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYSLOC">
            <summary>
            System Location for Remote Access
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYSZ">
            <summary>
            Symbol size (uniform scaling)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYTBOK">
            <summary>
            SYLBTA attribute updated flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SZDI">
            <summary>
            Start load point in section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SUPLST">
            <summary>
            All supports connected to a section or a panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SBCOAT">
            <summary>
            Second base coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SFCOAT">
            <summary>
            Second finish coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIDPOS">
            <summary>
            Side definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SITEAD">
            <summary>
            Site address
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SITEMA">
            <summary>
            Site manager
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STHOOK">
            <summary>
            Start hook reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STPOSE">
            <summary>
            Ending point start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STPOSS">
            <summary>
            Starting point start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STREF">
            <summary>
            Start reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STREFS">
            <summary>
            Start order references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRTDT">
            <summary>
            Start Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STTYCD">
            <summary>
            Type code for beginning of start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STTYP">
            <summary>
            Start type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMFNT">
            <summary>
            Labelling symbol font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMTYP">
            <summary>
            Labelled symbol type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SECSET">
            <summary>
            Security Setting for the Location connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRLIM">
            <summary>
            Structure limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRREF">
            <summary>
            Structure references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STVALI">
            <summary>
            Alias of user making last status modification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGAMP">
            <summary>
            Segment amplitude
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGEUV">
            <summary>
            Segment ending point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGORI">
            <summary>
            Segment origin point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGSUV">
            <summary>
            Segment starting point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKAPOS">
            <summary>
            Actual position of symbol or text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKHEIG">
            <summary>
            Height of symbol or text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKREFL">
            <summary>
            True if reflected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKROT">
            <summary>
            Rotation of symbol or text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKRPOS">
            <summary>
            Reference position of symbol or text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKSYMN">
            <summary>
            Symbol number for given font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKTXTT">
            <summary>
            Type of sketch text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SKTYPE">
            <summary>
            Type of sketch information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMNUM">
            <summary>
            Labelling symbol number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMCNA">
            <summary>
            Symbol Connection Array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPLLNK">
            <summary>
            Spooler Element Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMBFLG">
            <summary>
            Draw Connector Flags
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMBFLI">
            <summary>
            Symbol flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMOPT">
            <summary>
            Type of space management operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMOTP">
            <summary>
            Type of space management operation as enumerated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPMPFN">
            <summary>
            Polyface name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRFORI">
            <summary>
            Ori point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRFSID">
            <summary>
            Side of surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRFVEC">
            <summary>
            Vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SURECO">
            <summary>
            Surface exposure code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SYMRFG">
            <summary>
            Symbolic representation flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCALAP">
            <summary>
            Symbol Scale Axis Physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SCALAX">
            <summary>
            Symbol Scale Axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEAMPY">
            <summary>
            Weld Seam Y Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEAMPZ">
            <summary>
            Weld Seam Z Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPRLCK">
            <summary>
            Detailing Bolt Set Springlock Washer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STDNUM">
            <summary>
            Standard Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STDTXT">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STRSN">
            <summary>
            Stringer Snipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SETUTC">
            <summary>
            Set UTC Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STPDAT">
            <summary>
            Calculated or Persisted Stamp Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SPACIN">
            <summary>
            Spacing gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGAMV">
            <summary>
            Segment amplitude vector 3d
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGEPT">
            <summary>
            Segment ending point 3d
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGOPT">
            <summary>
            Segment origin point 3d
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SEGSPT">
            <summary>
            Segment starting point 3d
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SQNUMB">
            <summary>
            Part Sequence on Nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SIMNM">
            <summary>
            Simulation name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMIDEN">
            <summary>
            Smart geo identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMOPOS">
            <summary>
            Smart geo position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMOROT">
            <summary>
            Smart geo rotation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMSCLE">
            <summary>
            Smart geo scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMSIDE">
            <summary>
            Smart geo side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SMTYPE">
            <summary>
            Smart geo type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.SRCNM">
            <summary>
            Simulation Source Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STCALN">
            <summary>
            Structural connection alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STCBND">
            <summary>
            Structural connection boundary condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STCOFF">
            <summary>
            Structural connection offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.STCREF">
            <summary>
            Structural connection reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TABANS">
            <summary>
            Tabular answers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAGCD">
            <summary>
            Tag code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAGCDS">
            <summary>
            Tag codes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAGNMS">
            <summary>
            Tag numbers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAGNUM">
            <summary>
            Tag number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANAME">
            <summary>
            Task Item Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANGLE">
            <summary>
            Tile Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANGOF">
            <summary>
            Tangent offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANS">
            <summary>
            Text answer for text styp in spec
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAPREF">
            <summary>
            Tapping table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TARF">
            <summary>
            Target reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TATYPE">
            <summary>
            Text answer type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TBID">
            <summary>
            Tribon ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TBNAME">
            <summary>
            TbName
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TBOR">
            <summary>
            Tail bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TBTP">
            <summary>
            Hashed table type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCAT">
            <summary>
            Trace catalogue reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCDD">
            <summary>
            Current design property default value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCDP">
            <summary>
            Current design property value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCOD">
            <summary>
            Hashed origin code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCON">
            <summary>
            Tail connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCORRO">
            <summary>
            Tail Corrosion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCREF">
            <summary>
            Tail connections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TCTL">
            <summary>
            True cut length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDATUM">
            <summary>
            Definition of a specific point on earth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDBF">
            <summary>
            Reference of TO DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDEF">
            <summary>
            Text default for text styp in spec
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDET">
            <summary>
            Trace detail text reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDIR">
            <summary>
            Tail direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDMF">
            <summary>
            ISODRAFT Reference Dimension attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDMT">
            <summary>
            ISODRAFT Reference Dimension attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDPR">
            <summary>
            Template design dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDRT">
            <summary>
            Trace detail RTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDST">
            <summary>
            Trace detail STEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TDTT">
            <summary>
            Trace detail TTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEAMLS">
            <summary>
            List of TEAMs to which USER belongs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEASTA">
            <summary>
            Access Control team status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEMF">
            <summary>
            Team reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEMP">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEMPEL">
            <summary>
            True if element is temporary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEMPLI">
            <summary>
            True if element is in exclusion list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEND">
            <summary>
            Connection at other end of TREF (HEAD or TAIL)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEQDES">
            <summary>
            To Equipment Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TESTEV">
            <summary>
            Result of constraint test evaluation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TESTXP">
            <summary>
            Logical Expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEXIST">
            <summary>
            True if component has TUBI. Always true for offline bends.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TEXLEN">
            <summary>
            Length of text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TFDP">
            <summary>
            Template design dataset property
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TGEOM">
            <summary>
            True if component has TUBI geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TGRA">
            <summary>
            Pipework temperature gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TGRS">
            <summary>
            Tagrule status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.THERMA">
            <summary>
            Thermal category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.THICKN">
            <summary>
            Thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.THPO">
            <summary>
            Point through which viewing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIERHE">
            <summary>
            Heights of trays measured from path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMEE">
            <summary>
            End time of COMMS window
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMEI">
            <summary>
            COMMS retry time interval
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMEO">
            <summary>
            COMMS max retry count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMER">
            <summary>
            Frequency of DB propagation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMES">
            <summary>
            Start time of COMMS window
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMFAC">
            <summary>
            Pathtime time factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMPET">
            <summary>
            Time factor pre text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIMPOT">
            <summary>
            Time factor post text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TITL">
            <summary>
            Title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TLCONN">
            <summary>
            List of elements connected to branch tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TLIN">
            <summary>
            True length indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TLREF">
            <summary>
            List of attachment connected to attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMAP">
            <summary>
            Pointer to map for TUBE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMAPV">
            <summary>
            Map values for tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMAT">
            <summary>
            Trace material text reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMAV">
            <summary>
            Average temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMDWG">
            <summary>
            AutoCAD template name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMMA">
            <summary>
            Maximum temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMMI">
            <summary>
            Minimum temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMPLTF">
            <summary>
            Datasheet Template filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMPR">
            <summary>
            Template reference from SPCO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMRF">
            <summary>
            Template reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMRMAS">
            <summary>
            Template Repeat Master Duplicate Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMROWN">
            <summary>
            Template Repeat Owning Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMRREF">
            <summary>
            Template Repeat Element Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMRRUL">
            <summary>
            Template Repeat Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMRXRE">
            <summary>
            Return reference from TMRREL element to repeat elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMXT">
            <summary>
            Trace material XTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMYT">
            <summary>
            Trace material YTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMZT">
            <summary>
            Trace material ZTEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TNAM">
            <summary>
            Global name for the whole process design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TNOT">
            <summary>
            Note attached to the revision of the process design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TNVOL">
            <summary>
            Terrain net volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOPCUT">
            <summary>
            Top Stile Cut Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOPF">
            <summary>
            True if element is a top level item in 3D view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOPOLO">
            <summary>
            Branch topology
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTALT">
            <summary>
            Total machine time for a nested plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTLAB">
            <summary>
            Total label pathtime
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTLEN">
            <summary>
            Total manual length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTT">
            <summary>
            Total pathtime
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTTI">
            <summary>
            Total pathtime, I-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTTX">
            <summary>
            Total pathtime, X-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOTTY">
            <summary>
            Total pathtime, Y-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPAR">
            <summary>
            Trace catalogue component parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPEN">
            <summary>
            Text pen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPLFRR">
            <summary>
            Topology references - from
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPLFRT">
            <summary>
            Topology reference types - from
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPLTOR">
            <summary>
            Topology references - to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPLTOT">
            <summary>
            Topology reference types - to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPON">
            <summary>
            TO port number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPOS">
            <summary>
            Tail position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPOSE">
            <summary>
            Easting of tail position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPOSN">
            <summary>
            Northing of tail position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPOSTO">
            <summary>
            Top post offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPOSU">
            <summary>
            Upping of tail position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPREF">
            <summary>
            Tail point reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPRESS">
            <summary>
            TestPressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPRO">
            <summary>
            Name of the project in the process design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPVAL">
            <summary>
            Task parameter name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TQUAL">
            <summary>
            Text qualifier in spec or sele
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TQUES">
            <summary>
            Text question in spec or sele
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRANS">
            <summary>
            Local transformation matrix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRAREA">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRAYH">
            <summary>
            Tray height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRAYOW">
            <summary>
            Tray other width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRAYRW">
            <summary>
            Tray Reduce Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRAYSW">
            <summary>
            Tray side width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRAYW">
            <summary>
            Tray Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRCARG">
            <summary>
            Argument Qualifiers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRCG">
            <summary>
            DRAFT user defined symbol trace flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRCLIN">
            <summary>
            Trace line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRCNUM">
            <summary>
            Command Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRDACC">
            <summary>
            Database access
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRDBNO">
            <summary>
            DB number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRDBRF">
            <summary>
            DB for transaction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TREADD">
            <summary>
            Tread Depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TREADO">
            <summary>
            Tread Overlap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TREATP">
            <summary>
            Tread type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TREF">
            <summary>
            Tail reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TREXTN">
            <summary>
            Extract number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRFINO">
            <summary>
            Tran. File number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRGDIS">
            <summary>
            Target DISCIPLINE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRGENA">
            <summary>
            Initial Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRIMCE">
            <summary>
            Array of Trimmed Cells
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRIMTY">
            <summary>
            CTWALL TRIM TYPE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRLEN">
            <summary>
            Tracing length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRLOCL">
            <summary>
            Local command or not
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRMODU">
            <summary>
            Module
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRONUM">
            <summary>
            Operation Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRPASS">
            <summary>
            Successful Result Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRSETL">
            <summary>
            Local commands are to be stored
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRSF">
            <summary>
            Tag ruleset reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRSTYP">
            <summary>
            Database type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRTYPE">
            <summary>
            Command/Operation Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRUN">
            <summary>
            Truncation value (+ve) or percentage (-ve)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRUNTX">
            <summary>
            Truncation value (+ve) or percentage (-ve) text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TRVISI">
            <summary>
            Whether the command is visible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSFBR">
            <summary>
            Spooling marker for leave tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSIZ">
            <summary>
            Terminator size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSIZTX">
            <summary>
            Terminator size text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSKDEF">
            <summary>
            Reference to the task definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSKNAM">
            <summary>
            Task Definiton Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSKREF">
            <summary>
            Assigned tasks list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSLEN">
            <summary>
            Total suspension length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSPE">
            <summary>
            Tracing spec reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSPR">
            <summary>
            Trace specification component reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSTATE">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSTPID">
            <summary>
            Terminator physical style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSYS">
            <summary>
            Name of the system which has produced the process design
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTEX">
            <summary>
            T Text string
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTFACE">
            <summary>
            TrueType font face name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTFDES">
            <summary>
            TrueType font description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTFENA">
            <summary>
            TrueType fonts enabled flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTFIND">
            <summary>
            TrueType font index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTHOFF">
            <summary>
            Top Tube Hoop Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTNO">
            <summary>
            Note entered when the transfer file was created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TTYP">
            <summary>
            Template type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TUCL">
            <summary>
            Tube centreline length of branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TUFG">
            <summary>
            Tubing flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TUFL">
            <summary>
            Tube flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TULE">
            <summary>
            Tube length of branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TVER">
            <summary>
            Comparator Version number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TVIS">
            <summary>
            Top visibility flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TVOL">
            <summary>
            Terrain volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWALLT">
            <summary>
            Tail wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWIDTH">
            <summary>
            Tread Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWIST">
            <summary>
            True if twisted
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWLEN">
            <summary>
            Total weld length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWRF">
            <summary>
            Tail Working Point (Router)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWSTAN">
            <summary>
            Twist angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXALIG">
            <summary>
            Text alignment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXAREA">
            <summary>
            Total Cableway X-area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXCOLG">
            <summary>
            GLabel style text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXCOLO">
            <summary>
            Text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXCONU">
            <summary>
            Text colour number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXHINT">
            <summary>
            Text height interpretation mode flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXSPLI">
            <summary>
            Text splitting flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXSTRF">
            <summary>
            Text style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXSTRI">
            <summary>
            Text String for enhanced LineStyles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYNA">
            <summary>
            Hash of database type number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYNU">
            <summary>
            Number type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPE">
            <summary>
            Type of the element, ignoring UDET, truncated to 4 or 6 characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPEA">
            <summary>
            TYPEA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPEB">
            <summary>
            TYPEB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPECD">
            <summary>
            Type code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPECE">
            <summary>
            Type code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPEDB">
            <summary>
            DB type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPEX">
            <summary>
            Element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPEXP">
            <summary>
            Type Expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPEXT">
            <summary>
            Type expression type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPINC">
            <summary>
            Type is inclusive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYSEQU">
            <summary>
            Type Sequence Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TODATA">
            <summary>
            To check the mode of creation for to references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAASTA">
            <summary>
            Assigned Task Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATCT">
            <summary>
            Assigned Tasks Count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATDS">
            <summary>
            Assigned Task Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATKS">
            <summary>
            Assigned Tasks
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATNA">
            <summary>
            Assigned Task Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATNB">
            <summary>
            Assigned Task Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATNS">
            <summary>
            Assigned Task Names
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAATSN">
            <summary>
            Assigned Task Status Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TASTDS">
            <summary>
            Task Status Description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TASTNA">
            <summary>
            Task Status Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TASTNB">
            <summary>
            Task Status Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TASTVA">
            <summary>
            Task Status Value Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOODIR">
            <summary>
            Tool path direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TVALS">
            <summary>
            t Values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXTFNT">
            <summary>
            Labelling text font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXTTYP">
            <summary>
            Labelled text type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAISAS">
            <summary>
            True if element is assigned to a task
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANSCT">
            <summary>
            Task Name Space Count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANSNA">
            <summary>
            Task Name Space Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TANSNS">
            <summary>
            Task Name Space Names
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAACTI">
            <summary>
            Task Active
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TACOL">
            <summary>
            Task Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TACORO">
            <summary>
            Task Connection Route
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAFILT">
            <summary>
            Task Filter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAFONT">
            <summary>
            Task Font
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAHEIG">
            <summary>
            Task Height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TALOSE">
            <summary>
            Task Logic Selection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAPOS">
            <summary>
            Task Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TASKID">
            <summary>
            Task ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TASKTY">
            <summary>
            Task Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TATCOL">
            <summary>
            Task Text Colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TATYIN">
            <summary>
            Task Input Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TATYOU">
            <summary>
            Task Output Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TATYTR">
            <summary>
            Task Treated Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAWID">
            <summary>
            Task Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TSKFCE">
            <summary>
            Reference to the flow chart element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TYPREF">
            <summary>
            Reference to a datatype element for an RDF Statement Object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMSDIF">
            <summary>
            TMS Discipline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMSPRJ">
            <summary>
            Flag to notify if this is a TMS Project
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMSAAA">
            <summary>
            Automatic Admin Approval
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TMSADP">
            <summary>
            Automatic Discipline Pulldown
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAILH">
            <summary>
            Tail duct height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TAILW">
            <summary>
            Tail duct width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TZAXI">
            <summary>
            tail Z axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TIGHOL">
            <summary>
            Tight hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPLPAR">
            <summary>
            Template parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TPLTYP">
            <summary>
            Template type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXGRGB">
            <summary>
            RGB glabel style text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXGRGP">
            <summary>
            RGB glabel style text colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXTRGB">
            <summary>
            RGB text colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXTRGP">
            <summary>
            RGB text colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXDIR">
            <summary>
            Text direction pline number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TUNI">
            <summary>
            Default unit of value (falls back to dimension default if not set)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWIDIS">
            <summary>
            Profile twist distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWIVEC">
            <summary>
            Profile twist orientation vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TABCLN">
            <summary>
            Tabite Class Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TABREF">
            <summary>
            Tabite reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TOPSTR">
            <summary>
            TOP Stringer Gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWSHRH">
            <summary>
            Detailing Bolt Set Head-Side Tapered Washer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TWSHRN">
            <summary>
            Detailing Bolt Set Nut-Side Tapered Washer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TXTVAL">
            <summary>
            Detailing Element Text Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TUHA">
            <summary>
            Default unit hash
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TREFOI">
            <summary>
            Trefoil layout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TLVBEV">
            <summary>
            Profile trace length, V bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TLXBEV">
            <summary>
            Profile trace length, X bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.TLYBEV">
            <summary>
            Profile trace length, Y bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.U">
            <summary>
            Position upping
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UAEXSS">
            <summary>
            User Excess Arrive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UALL">
            <summary>
            UALL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UAREA">
            <summary>
            Used area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UBULG">
            <summary>
            Used bulge factor for curve geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCAT">
            <summary>
            Category on forms
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCOD">
            <summary>
            Units code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCODB">
            <summary>
            Units code bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCODD">
            <summary>
            Units code distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCONN">
            <summary>
            True if the element referenced by UDA value should appear as a connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCURD">
            <summary>
            UCURD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCURT">
            <summary>
            Used curve type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCUTDI">
            <summary>
            Upper Extension Cutting Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDACPY">
            <summary>
            UDA copy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDAFTB">
            <summary>
            Look up table for all UDA ref table attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDALIS">
            <summary>
            List of UDAs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDASET">
            <summary>
            List of UDAs set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDASTB">
            <summary>
            Look up table for all UDA string table attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDATAB">
            <summary>
            Look up table for all UDA integer table attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDATLS">
            <summary>
            List of attributes for UDET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDETCH">
            <summary>
            Report from UDET check on element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDGEOM">
            <summary>
            Indicates if UDA affects geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDHLIS">
            <summary>
            Attributes hidden on elements of this user-defined element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDIR">
            <summary>
            Up axis direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDMLIS">
            <summary>
            List of allowed member types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDNA">
            <summary>
            User defined name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDOLIS">
            <summary>
            List of allowed owner types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDPEND">
            <summary>
            list of attributes that this attribute depends on
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDPMEM">
            <summary>
            Possible type members for a UDET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDPOWN">
            <summary>
            Possible owners for a UDET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDTABL">
            <summary>
            Determines if UDA is to be indexed in a table for fast access
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDTEX">
            <summary>
            user Defined Type Group Expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDTGS">
            <summary>
            User Defined Group Types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDTYPE">
            <summary>
            User defined element type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UEXTNS">
            <summary>
            Upper Extension Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UGOING">
            <summary>
            Upper Tread Going
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UHIDE">
            <summary>
            Set true to hide attribute on forms
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UHYPER">
            <summary>
            Set true to treat attribute value as a named link to an external resource
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UIWE">
            <summary>
            Unit insulation weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UKEY">
            <summary>
            UDA key - internal unique system identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ULEN">
            <summary>
            Length of data or text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ULEXSS">
            <summary>
            User End Excess
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ULIN">
            <summary>
            Underlining flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ULVOPT">
            <summary>
            Determines if UDA valid values or range limit is optional
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ULVTYP">
            <summary>
            Defines the use of list of value for a UDA, as Single select or Multiple select
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UMAX">
            <summary>
            Maximum value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UMIN">
            <summary>
            Minimum value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNAM">
            <summary>
            Name of user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNDERL">
            <summary>
            Underling flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNIPAR">
            <summary>
            Unit of Parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNRESO">
            <summary>
            T/F on attributes that are unresolved references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNTSTD">
            <summary>
            Unit set dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNTSTS">
            <summary>
            Unit set system
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPDCB">
            <summary>
            ADP update callback
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPDT">
            <summary>
            Date/time stamp for map
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPGDDB">
            <summary>
            Upgrade number for DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPGDNO">
            <summary>
            Upgrade number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPLLEN">
            <summary>
            Used raw plate length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPPING">
            <summary>
            Upping part expressed as a position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPPREF">
            <summary>
            References to upper exit level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPRLEN">
            <summary>
            Used profile length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPROM">
            <summary>
            Textual prompt to display to the user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPROTE">
            <summary>
            Set true to disallow viewing the attribute in a protected database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UPSEUD">
            <summary>
            Set true to calculate attribute value rather than store it in a database. User code must be provided
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.URADI">
            <summary>
            Used radius for curve geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UREF">
            <summary>
            Units reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.URISE">
            <summary>
            Upper Tread Rise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USCCOG">
            <summary>
            User derived centre of gravity position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USCLHI">
            <summary>
            Elements in descendant hierarchy claimed to this user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USCWCO">
            <summary>
            User derived wet centre of gravity position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USCWEI">
            <summary>
            Derived value for user weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USCWWE">
            <summary>
            Derived value for user wet weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USECAP">
            <summary>
            Capital Letter Usage Indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USEF">
            <summary>
            User reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USEFED">
            <summary>
            User defined feed excess
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USEHDR">
            <summary>
            Header Usage Indicator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USERC">
            <summary>
            User name of user claiming element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USERLS">
            <summary>
            List of USERs belonging to TEAM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USERM">
            <summary>
            User making last modification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USERST">
            <summary>
            User who cancelled command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USESS">
            <summary>
            User creating session
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USNCLH">
            <summary>
            Elements in descendant hierarchy not claimed to this user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRCOG">
            <summary>
            User centre of gravity position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRF">
            <summary>
            Reference of current user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRLI">
            <summary>
            Valid users for given user login
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRMDB">
            <summary>
            MDBs that a user may select from. If unset, then there is no restriction.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRN">
            <summary>
            Unique user identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRWCO">
            <summary>
            User wet centre of gravity position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRWEI">
            <summary>
            User entered weight value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USRWWE">
            <summary>
            User entered wet weight value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USUVAL">
            <summary>
            Unit for Unit Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USYSTY">
            <summary>
            Name of the system attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UTEAMS">
            <summary>
            Teams that will see a hidden attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UTYP">
            <summary>
            Type of the value. INT, REAL, TEXT, REF, LOG, WORD, POS, DIR, ORI or DATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UUHA">
            <summary>
            Unit-hash value if bore/distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UUID">
            <summary>
            Universally unique identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UUIDAR">
            <summary>
            Universally unique identifier, stored array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UUIDRE">
            <summary>
            Universally unique identifier references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UUNI">
            <summary>
            Dimension of attribute value (bore/distance/text)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UVVAL">
            <summary>
            Valid value for UDA
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UWEI">
            <summary>
            Unit pipe weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UWGHT">
            <summary>
            Used weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UWIDTH">
            <summary>
            Used width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UWMTXT">
            <summary>
            User weight Manager text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UWP">
            <summary>
            Upper Working Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCASES">
            <summary>
            Set true to allow Engineering cases
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNTORD">
            <summary>
            Unit order
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UALIAS">
            <summary>
            Alias of the standard user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCLONE">
            <summary>
            Propagate to linked elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UMDBRE">
            <summary>
            Determines if User-MDB association is restrictive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDPSFG">
            <summary>
            Name of PML function used for value calculation. Function should take single parameter of DBREF type.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDPSFS">
            <summary>
            Name of PML function used for SET value. Function should take parameters of DBREF type and a value.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USECDE">
            <summary>
            Text storing user code for cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UAXIS">
            <summary>
            uAxis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UKEYFR">
            <summary>
            Number of free UKey values available
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UUIDIA">
            <summary>
            Universally unique identifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UCVAL">
            <summary>
            referenced to controlling UVALID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.USHVV">
            <summary>
            UDA shared valid value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UVVFER">
            <summary>
            Attribute to follow to get UDA valid values filtering element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UMINLE">
            <summary>
            Minimum length for text or word
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UDESC">
            <summary>
            Full description of the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UTCSES">
            <summary>
            True if the session date is a calculated local date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UTCSTP">
            <summary>
            True if the stamp date is a calculated local date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UTCSWT">
            <summary>
            True if System outputs UTC based Session Date Times
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNODUP">
            <summary>
            Set false to dissallow duplicate values in the array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UNDERG">
            <summary>
            Underground
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UEXMAX">
            <summary>
            Expression defining the maximum value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.UEXMIN">
            <summary>
            Expression defining the minimum value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALARR">
            <summary>
            Valid Status Values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALHRF">
            <summary>
            Status Value History reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALIDV">
            <summary>
            Valid value expression for VVALUE elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALNAM">
            <summary>
            Local Name of a Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALNUM">
            <summary>
            Numerical representation of a Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALREF">
            <summary>
            Status Value reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALRUL">
            <summary>
            Valid rule expression to test VALIDV attributes of VVALUE elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALTEX">
            <summary>
            Textual representation of a Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VALTYP">
            <summary>
            Type of the value. INT, REAL or TEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VANGLE">
            <summary>
            Angle from vertical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VBEVEL">
            <summary>
            True if V-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VCOMPD">
            <summary>
            View Comparison Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VCOMPS">
            <summary>
            View Comparison Stamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VDISTA">
            <summary>
            Vertical Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VDPOS">
            <summary>
            Dimension line/arc position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VDTINT">
            <summary>
            Verification date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VDTTXT">
            <summary>
            Verification date text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VENID">
            <summary>
            Driver definition used to access external laser survey
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VERTDI">
            <summary>
            VERTDI (true if Z axe is vertical )
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VFLIIN">
            <summary>
            View Frame Limits Independent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VFLSTZ">
            <summary>
            View frame line type zero is ByStyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VFRCOL">
            <summary>
            View frame colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VFRLST">
            <summary>
            View frame linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VGAP">
            <summary>
            View gap length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VHEIG">
            <summary>
            Volume height
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VIRF">
            <summary>
            Virtual Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VISF">
            <summary>
            Visio filename
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VLAYRF">
            <summary>
            Visual layer reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VLIM">
            <summary>
            View limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMANNO">
            <summary>
            VM annotation reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMAR">
            <summary>
            ADP view margins
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMCIAR">
            <summary>
            VM Component Int Array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMCRAR">
            <summary>
            VM Component Real Array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMDRPD">
            <summary>
            VM Draw anno using pdms engine Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMFCFB">
            <summary>
            VM Fill Colour From Border Y/N
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMFLAY">
            <summary>
            VM Fillstyle Layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMGLAY">
            <summary>
            VM Geometry Layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMTASP">
            <summary>
            VM text aspect
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMTSLA">
            <summary>
            VM text slant (degrees)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VMUSYS">
            <summary>
            VM Fillstyle Unit System
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VNREF">
            <summary>
            VNOTE reference - special attribute for use by ADP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VOLTAC">
            <summary>
            Voltage AC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VOLTDC">
            <summary>
            Voltage DC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VRADI">
            <summary>
            Cableway radius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VRAT">
            <summary>
            View ratio
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VREG">
            <summary>
            View region
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSCA">
            <summary>
            Viewing scale - scales projected view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSHAPE">
            <summary>
            Volume shape
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSICHS">
            <summary>
            View Section Indicator Characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSILCO">
            <summary>
            View Section Indicator line colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSILST">
            <summary>
            View Section Indicator line style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSINRF">
            <summary>
            View Section Indicator reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSITIT">
            <summary>
            View Section Indicator Title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSITSR">
            <summary>
            View Section Indicator Title text style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VTITL">
            <summary>
            View title
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VTYP">
            <summary>
            Type of design view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VVOL">
            <summary>
            View volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VWIDT">
            <summary>
            Volume width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VWLIMI">
            <summary>
            View Limits
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VWREFA">
            <summary>
            View reference array - special attribute for use by ADP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VWSTRF">
            <summary>
            View style reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VXREF">
            <summary>
            Vertex reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VERDAT">
            <summary>
            Verification date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VCKS">
            <summary>
            Pipe Spool Volume Check Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VCKWT">
            <summary>
            Pipe Spool Volume Checked With Tank
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VERS">
            <summary>
            Product version
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VLTRNG">
            <summary>
            Voltage Range
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VAXIS">
            <summary>
            vAxis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VFRRGB">
            <summary>
            RGB view frame colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VFRRGP">
            <summary>
            RGB view frame colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSIRGB">
            <summary>
            RGB view Section Indicator colour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VSIRGP">
            <summary>
            RGB view section indicator colour physical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VLOCDE">
            <summary>
            View location plane definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VLOCDI">
            <summary>
            View location plane direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.VLOCPO">
            <summary>
            View location plane position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.W">
            <summary>
            Position westing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WAITIM">
            <summary>
            Time interval between Retries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WALLTH">
            <summary>
            Tube wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WAMA">
            <summary>
            Maximum water level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WANS">
            <summary>
            Word answers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WATERT">
            <summary>
            Water Tight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WATTIM">
            <summary>
            Water cleaning time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WBORE">
            <summary>
            Bore on IWELD/RWELD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WBOX">
            <summary>
            Calculated box volume in world coordinates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCANG">
            <summary>
            Weld connection angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCOM">
            <summary>
            Weld comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WDBNA">
            <summary>
            Working DB name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WDES">
            <summary>
            Design parameters as words
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WDIA">
            <summary>
            Wind diameter modulus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WEFA">
            <summary>
            Weight multiplier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WEIG">
            <summary>
            Weighting value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELCON">
            <summary>
            Welding machine connection type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELDDP">
            <summary>
            Welding depth
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELDMC">
            <summary>
            Welding Machine Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELDTY">
            <summary>
            Weld Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELMAC">
            <summary>
            Minimum tube length for machine welding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELMAN">
            <summary>
            Minimum tube length for manual welding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WELORB">
            <summary>
            Minimum tube length for orbital welding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WESUSP">
            <summary>
            Weld end suspension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFLELM">
            <summary>
            Reference to Workflow Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WHOLEC">
            <summary>
            Array of Whole Cells
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIANG">
            <summary>
            Weld inclination angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIDARR">
            <summary>
            Width array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIDT">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIFA">
            <summary>
            Wind multiplier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WJPOS">
            <summary>
            Implied weld position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WJUSL">
            <summary>
            Wall Justification Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDC">
            <summary>
            Weld Code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDN">
            <summary>
            Weld number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDP">
            <summary>
            Weld number prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDPOS">
            <summary>
            Welding position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDREF">
            <summary>
            Return reference from Ppoint or WELD to IWELD or RWELD element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDXRF">
            <summary>
            USED INTERNALLY TO HELP WITH UPDATE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLEGL">
            <summary>
            Weld leg length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLEN">
            <summary>
            Weld length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WMAX">
            <summary>
            Maximum weld number in current spool drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNAM">
            <summary>
            Weld name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNLAY">
            <summary>
            Number of weld layers
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WORI">
            <summary>
            World orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WORPOS">
            <summary>
            World position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WPAR">
            <summary>
            Parameters as a word
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WPRE">
            <summary>
            Wind pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WPROC">
            <summary>
            Welding process
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WRANG">
            <summary>
            Weld rotation angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WRKMRK">
            <summary>
            Working Revision Indicator String
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WRKSHR">
            <summary>
            Work Share
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSHOP">
            <summary>
            Weld shop/site flag on IWELD/RWELD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSPEC">
            <summary>
            Weld specification on IWELD/RWELD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSPROC">
            <summary>
            Welding standard process
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSSUSP">
            <summary>
            Weld start suspension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTCOM">
            <summary>
            Weld table comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTEREF">
            <summary>
            Wall  thickness element reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTHICK">
            <summary>
            Wall thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTHREF">
            <summary>
            Wall thickness table reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTOL">
            <summary>
            Wall thickness tolerance / Weight tolerance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTORCH">
            <summary>
            Weld torch vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTPROC">
            <summary>
            Welding test procedure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTRANS">
            <summary>
            Transformation matrix to world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTSTAT">
            <summary>
            Weld table status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WVOL">
            <summary>
            Enclosing box volume in world coordinates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WBACK">
            <summary>
            True if backing bar is to be used
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WECOM">
            <summary>
            Weld comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WEGOLD">
            <summary>
            True if golden weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WENAM">
            <summary>
            Weld name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WEPROC">
            <summary>
            Welding process
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFIN">
            <summary>
            Weld finish
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WGANG">
            <summary>
            Weld groove angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WGAP">
            <summary>
            Weld Gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WINT">
            <summary>
            True if intermittent weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WINTL">
            <summary>
            Intermittent weld length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WINTP">
            <summary>
            Intermittent weld pitch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDDIA">
            <summary>
            Diameter(width) for plug/slot welds
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLLEN">
            <summary>
            Leg length of the weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLNGTH">
            <summary>
            Weld Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNDT">
            <summary>
            No destructive test for the weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSLEN">
            <summary>
            Length for slot weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSPACE">
            <summary>
            True if spacer is to be used
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSTAND">
            <summary>
            Weld standard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSTDV">
            <summary>
            Weld standard vesrion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTEST">
            <summary>
            Test procedure for the weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WTYPE">
            <summary>
            Weld type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIRESZ">
            <summary>
            Wire size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WASHRH">
            <summary>
            Detailing Bolt Set Head-Side Washer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WASHRN">
            <summary>
            Detailing Bolt Set Nut-Side Washer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCCAS">
            <summary>
            Welding constant contour (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCCOS">
            <summary>
            Welding constant contour (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCHAR">
            <summary>
            Detailing Weld Characteristic
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCLOS">
            <summary>
            Closure weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WCMNT">
            <summary>
            Weld Comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WEXPTX">
            <summary>
            Welding Fish Tail: Explanation text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFISTA">
            <summary>
            Welding Fish tail: Additional Text 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFISTB">
            <summary>
            Welding Fish tail: Additional Text 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFISTC">
            <summary>
            Welding Fish tail: Additional Text 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFRDBL">
            <summary>
            Detailing Weld Free Doubles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFTXA">
            <summary>
            Welding Free text 1
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFTXB">
            <summary>
            Welding Free text 2
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFTXC">
            <summary>
            Welding Free text 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WFTXD">
            <summary>
            Welding Free text 4
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WGNAS">
            <summary>
            Welding symbol ID (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WGNOS">
            <summary>
            Welding symbol ID (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WGOLD">
            <summary>
            Golden Weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WGROUP">
            <summary>
            Weld Grouping Option
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIMAS">
            <summary>
            Intermittent weld (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WIMOS">
            <summary>
            Intermittent weld (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WINDAS">
            <summary>
            Welding Index (Arrow Side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WINDOS">
            <summary>
            Welding Index (Other Side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WISYM">
            <summary>
            Welding Process symbol number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDAAS">
            <summary>
            Weld chamfer angle arrow side
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDAOS">
            <summary>
            Weld chamfer angle (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDBAS">
            <summary>
            Weld Backing (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDBOS">
            <summary>
            Weld Backing (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDCAS">
            <summary>
            Weld width (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDCOS">
            <summary>
            Weld width (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDDAS">
            <summary>
            Weld Diameter (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDDOS">
            <summary>
            Weld diameter (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDEAS">
            <summary>
            Weld thickness (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDEOS">
            <summary>
            Weld thickness (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDFAS">
            <summary>
            Welding Finish (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDFOS">
            <summary>
            Welding Finish (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDHAS">
            <summary>
            Welding Spacer (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDHOS">
            <summary>
            Welding Spacer (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDINF">
            <summary>
            Welding information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDLAS">
            <summary>
            Weld segment length (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDLOS">
            <summary>
            Weld segment length (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDNAS">
            <summary>
            Number of weld segments (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDNDT">
            <summary>
            Welding NDT (Non-Destructive Testing)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDNOS">
            <summary>
            Number of weld segments (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDRAS">
            <summary>
            Weld chamfer Gap (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDRND">
            <summary>
            Flag weld all round
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDROS">
            <summary>
            Weld chamfer Gap (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDSAS">
            <summary>
            Weld chamfer depth (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDSOS">
            <summary>
            Weld chamfer depth (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDTAS">
            <summary>
            Weld process number (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDTHY">
            <summary>
            Weld material thickness (Y direction)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDTHZ">
            <summary>
            Weld material thickness (Z direction)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDTOS">
            <summary>
            Weld process number (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDTYP">
            <summary>
            Welding Element Type Number
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDVAS">
            <summary>
            Weld segment offset (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDVOS">
            <summary>
            Weld segment Offset (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDZAS">
            <summary>
            Weld leg length (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLDZOS">
            <summary>
            Weld leg length (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WLEGTX">
            <summary>
            Welding legend text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WMDREF">
            <summary>
            Reference to weld master data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNAMAS">
            <summary>
            Weld Name (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNAMOS">
            <summary>
            Weld Name (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNCAT">
            <summary>
            Welding NDT Category name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNDTN">
            <summary>
            Welding NDT type name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNDTP">
            <summary>
            Welding NDT percentage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNPROC">
            <summary>
            Welding NDT process name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WPDAS">
            <summary>
            Weld segment distance (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WPDOS">
            <summary>
            Weld segment distance (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WPOST">
            <summary>
            Weld mark text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSSAS">
            <summary>
            Weld penetration depth (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WSSOS">
            <summary>
            Weld penetration depth (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WUNIQ">
            <summary>
            Welding Element Unique Flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WVTAS">
            <summary>
            Weld type (arrow side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WVTOS">
            <summary>
            Weld type (other side)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WRKSEQ">
            <summary>
            Working sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.WNTHK">
            <summary>
            Weld Name Thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XAMANG">
            <summary>
            Cross section along mounting angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XAREA">
            <summary>
            Cross sectional area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XAXIS">
            <summary>
            xAxis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XBEVEL">
            <summary>
            True if X-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XBOT">
            <summary>
            Bottom X length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XBSH">
            <summary>
            X bottom shear: inclination of bottom face to local X axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XFTPT">
            <summary>
            Cross section foot point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XINCL">
            <summary>
            Cross section inclination angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XINDEX">
            <summary>
            Laser Image Storage X index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XLEN">
            <summary>
            X length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XOFF">
            <summary>
            X-offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRLIST">
            <summary>
            List distributed attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRLSTT">
            <summary>
            List distributed attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRPNTR">
            <summary>
            Distributed Attribute reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRQCNT">
            <summary>
            Get distributed attributes element count
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRQELE">
            <summary>
            Get distributed attributes element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRRF">
            <summary>
            Part of assembly definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XRSTRT">
            <summary>
            Distributed Attributes reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XTEX">
            <summary>
            X text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XTHK">
            <summary>
            Cross section thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XTOP">
            <summary>
            Top X length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XTPPT">
            <summary>
            Cross section top point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XTRA">
            <summary>
            Extra length requirement for BOLTS
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XTSH">
            <summary>
            X top shear: inclination of top face to local X axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXMANG">
            <summary>
            Cross section cross mounting angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXDIR">
            <summary>
            Direction Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXFAR">
            <summary>
            Element array Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXIAR">
            <summary>
            Integer Array Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXINT">
            <summary>
            Integer Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXLOG">
            <summary>
            bool Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXORI">
            <summary>
            Orientation Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXPOS">
            <summary>
            Position Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXRAR">
            <summary>
            Double Array Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXREA">
            <summary>
            Double Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXREF">
            <summary>
            Element Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXSTR">
            <summary>
            String Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XYOFFS">
            <summary>
            XY offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XYPS">
            <summary>
            2D Position or Offset for Labels
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XYSC">
            <summary>
            Label XY size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XGMREF">
            <summary>
            Reference to laser survey in which volumes will be demolished
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XXXTAR">
            <summary>
            Text Array Test attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XILOWN">
            <summary>
            Interesting logical owners
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XIPOWN">
            <summary>
            Interesting specific logical owners
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.XYSIZE">
            <summary>
            size array for grids
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YBEVEL">
            <summary>
            True if Y-bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YBOT">
            <summary>
            Bottom Y length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YBSH">
            <summary>
            Y bottom shear: inclination of bottom face to local Y axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YDIR">
            <summary>
            Preferred Y axis direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YINDEX">
            <summary>
            Laser Image Storage Y index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YLEN">
            <summary>
            Y length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YOFF">
            <summary>
            Y-offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YOUN">
            <summary>
            Spot value of Youngs modulus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YTEX">
            <summary>
            Y text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YTOP">
            <summary>
            Top Y length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.YTSH">
            <summary>
            Y top shear: inclination of top face to local Y axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZAXIS">
            <summary>
            zAxis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZDIR">
            <summary>
            Additional axis direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZDIS">
            <summary>
            Position in section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZLEN">
            <summary>
            Line length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZOFF">
            <summary>
            Z-offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZTEX">
            <summary>
            Z text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeInstance.ZORDER">
            <summary>
            Draw Z order
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbElementTypeInstance">
            <summary>
             List of definitions for predefined Element Types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ABOX">
            <summary>
            Area box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACCPNT">
            <summary>
            Access point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACCSET">
            <summary>
            Access point set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACDT">
            <summary>
            Building access details
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACONE">
            <summary>
            Area cone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACR">
            <summary>
            Access control rights
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACRL">
            <summary>
            Access control rights reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACRST">
            <summary>
            Access control rights group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACRULE">
            <summary>
            Annotation Change Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACRW">
            <summary>
            Access control rights world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACSTYLE">
            <summary>
            Annotation Change Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACTI">
            <summary>
            Action input argument
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACTN">
            <summary>
            Action
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACTO">
            <summary>
            Action output argument
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACTORUS">
            <summary>
            Area circular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ACYLINDER">
            <summary>
            Area cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ADDENTRY">
            <summary>
            Add Entry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ADIMENSION">
            <summary>
            Angular Dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ADIRECTION">
            <summary>
            Angular Dimension Direction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ADISH">
            <summary>
            Area dish
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AEXTRUSION">
            <summary>
            Area extrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AHU">
            <summary>
            Air handling unit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AIDARC">
            <summary>
            Aid Arc
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AIDCIRCLE">
            <summary>
            Aid Circle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AIDGROUP">
            <summary>
            Aid Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AIDLINE">
            <summary>
            Aid Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AIDPOINT">
            <summary>
            Aid Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AIDTEXT">
            <summary>
            Aid Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AITEMS">
            <summary>
            Additional items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ALLP">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ANCILLARY">
            <summary>
            SUPCOM attachment support component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ANNRLR">
            <summary>
            Annotation Ruler
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.APOLYHEDRON">
            <summary>
            Area polyhedron
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.APPDAREA">
            <summary>
            Application data area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.APPLDATA">
            <summary>
            Application data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.APPLDWORLD">
            <summary>
            Application data world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.APPT">
            <summary>
            Angular Dimension Direction - Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.APYRAMID">
            <summary>
            Area pyramid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ARC">
            <summary>
            Arc
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ARCHIV">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AREADEF">
            <summary>
            Area definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AREASET">
            <summary>
            Area set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AREAWLD">
            <summary>
            Area world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AREVOLUTION">
            <summary>
            Area revolution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ARTORUS">
            <summary>
            Area rectangular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASDFGP">
            <summary>
            Association definition group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASDFWL">
            <summary>
            Association definition world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASET">
            <summary>
            Action set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASITEM">
            <summary>
            Assembly item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASLCYLINDER">
            <summary>
            Area slope bottom cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASMBLY">
            <summary>
            Assembly
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASNOUT">
            <summary>
            Area snout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASREQU">
            <summary>
            Association request
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASSDEF">
            <summary>
            Association definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASSMBR">
            <summary>
            Association member
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASSOC">
            <summary>
            Association
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASSOGP">
            <summary>
            Association instance group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASSOWL">
            <summary>
            Association instance world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASTATU">
            <summary>
            Association status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ASWLD">
            <summary>
            Assembly world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATLIST">
            <summary>
            Attribute list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATTACHMENT">
            <summary>
            Attachment point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATTCOLUMN">
            <summary>
            Attribute Column
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATTDAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATTFILTER">
            <summary>
            Attribute filter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATTHD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ATTRRL">
            <summary>
            Attribute rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AWELD">
            <summary>
            Attached weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AXESYMBOL">
            <summary>
            Axes symbol instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AUXFN">
            <summary>
            Nesting auxiliary function
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.AUXPR">
            <summary>
            Nesting auxiliary function parameters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BACKINGSHEET">
            <summary>
            Backing Sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BAREA">
            <summary>
            Building area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BASEWLD">
            <summary>
            Baseline World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BASLIN">
            <summary>
            Baseline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BATTERY">
            <summary>
            Battery
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BBLOCK">
            <summary>
            Building Block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BBOLT">
            <summary>
            Beam bolting attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BEND">
            <summary>
            Bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BFDT">
            <summary>
            Building boundary former details
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BLEVEL">
            <summary>
            Building Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BLIST">
            <summary>
            Bolt list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BLOCK">
            <summary>
            Block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BLTABLE">
            <summary>
            Bolt table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BLTP">
            <summary>
            Bolt point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BNDLIN">
            <summary>
            Boundary line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BOTEXT">
            <summary>
            Bottom Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BOUNDARY">
            <summary>
            Boundaries and roadways
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BOX">
            <summary>
            Box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BOXING">
            <summary>
            Boxing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BPANEL">
            <summary>
            Bent plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BPFEAT">
            <summary>
            Bent plate Features
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BPFITTING">
            <summary>
            Bent plate fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BPOPEN">
            <summary>
            Bent plate opening
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BRANCH">
            <summary>
            Branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BRCO">
            <summary>
            Branch connector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BRTAB">
            <summary>
            Branch/reducer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BSAREA">
            <summary>
            Building subarea
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BTSET">
            <summary>
            Bolt pointset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BUILDING">
            <summary>
            Build
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BUWLD">
            <summary>
            Building world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BVAREA">
            <summary>
            Building view area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BVCL">
            <summary>
            Building view cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BVIEW">
            <summary>
            Building view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BVSAREA">
            <summary>
            Building view subarea
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BWLD">
            <summary>
            Beam welding attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BRIDGE">
            <summary>
            Nesting bridge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BRNGAP">
            <summary>
            Burning gap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BOUSUR">
            <summary>
            Bounded surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BEVEL">
            <summary>
            Advanced Bevelling Contour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BEVSEG">
            <summary>
            Advanced Bevelling Contour Segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.BMFWRL">
            <summary>
            Detailing BMF world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CABCORE">
            <summary>
            Cable core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CABDATA">
            <summary>
            Cable properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CABLE">
            <summary>
            Cable branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CAGSEG">
            <summary>
            Cage segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CAP">
            <summary>
            Cap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CARD">
            <summary>
            Card data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CASE">
            <summary>
            Case
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CASTYPE">
            <summary>
            Case type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CASWORLD">
            <summary>
            Case world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CATALOGUE">
            <summary>
            Catalogue DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CATEGORY">
            <summary>
            Piping category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CBOUNDARY">
            <summary>
            Building cell boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CBSEGMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CCHDAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CCORSET">
            <summary>
            Cable core set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CCTABLE">
            <summary>
            Connection compatibility table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CCURVE">
            <summary>
            General shell curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CDSE">
            <summary>
            Coordinate system entity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CEILIN">
            <summary>
            Ceiling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CELL">
            <summary>
            Building cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFGGPW">
            <summary>
            Config Group World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFGGRP">
            <summary>
            Config Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFGKEY">
            <summary>
            Config Key
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFGSET">
            <summary>
            Config Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFGSTW">
            <summary>
            Config Set World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFGVAL">
            <summary>
            Config Value Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CFLOOR">
            <summary>
            Floor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CGRDCP">
            <summary>
            Grid Cell Positioning
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CGRDLP">
            <summary>
            Gridline Positioning
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CHOLE">
            <summary>
            Shell hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CINF">
            <summary>
            Building cell inventory reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CINVENTORY">
            <summary>
            Building cell inventory
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CIRCLE">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CIRLIST">
            <summary>
            Circulation List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLEVIS">
            <summary>
            Clevis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLLB">
            <summary>
            Circulation List Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLNCGR">
            <summary>
            Ceiling Grid Components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLNLATTICE">
            <summary>
            Ceiling Lattice
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLNPNGRID">
            <summary>
            Planer Ceiling Grid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLNTIL">
            <summary>
            Ceiling Tile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CLOSURE">
            <summary>
            Closure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMBU">
            <summary>
            Buffer command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMFITTING">
            <summary>
            Compound fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMMA">
            <summary>
            Initial macro for execution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMMO">
            <summary>
            Set RW mode command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMOP">
            <summary>
            Open command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMPDATA">
            <summary>
            Component properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMPFITTING">
            <summary>
            Compound panel fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMPTYPE">
            <summary>
            Sorting category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMPWORLD">
            <summary>
            Property component world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMRE">
            <summary>
            Resume command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTATT">
            <summary>
            Commenting Attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTCAP">
            <summary>
            Commenting Capture
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTFLD">
            <summary>
            Commenting Folder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTLNK">
            <summary>
            Commenting link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTPOS">
            <summary>
            Commenting Post
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTPRE">
            <summary>
            Commenting Attachment Preview
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTSTH">
            <summary>
            Distributed Commenting Thread
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTTHR">
            <summary>
            Commenting Thread
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CMTWLD">
            <summary>
            Commenting world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CNGFXD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CNGREQ">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CNODE">
            <summary>
            Control node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COATING">
            <summary>
            Coating
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COCDES">
            <summary>
            Connection compatibility description
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COCO">
            <summary>
            Connection compatibility
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COFITTING">
            <summary>
            Panel cofitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COLMAP">
            <summary>
            Colour Map
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COLRELATION">
            <summary>
            Column Relation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COMFIXING">
            <summary>
            Complementary fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COMM">
            <summary>
            Communication
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COMW">
            <summary>
            Communication world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COMWLD">
            <summary>
            Compartment world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONE">
            <summary>
            Cone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONSTRAINT">
            <summary>
            Constraint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONSEQ">
            <summary>
            Connectivity sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONTYPE">
            <summary>
            Constraint type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONWORLD">
            <summary>
            Constraint data world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CORE">
            <summary>
            Cable core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COUPLING">
            <summary>
            Coupling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.COWL">
            <summary>
            Cowl
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPANBO">
            <summary>
            Curved panel boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPANEL">
            <summary>
            Curved panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPIN">
            <summary>
            Pin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPINCR">
            <summary>
            Pin jig corner point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPINJG">
            <summary>
            Pin jig
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPINRW">
            <summary>
            Pin jig row
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPLANE">
            <summary>
            Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPLATE">
            <summary>
            Shell plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPNISE">
            <summary>
            Curved panel internal seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPOINT">
            <summary>
            Curved hull point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPORT">
            <summary>
            Building cell port
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPRCUT">
            <summary>
            Shell profile cutout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPREND">
            <summary>
            Shell stiffener end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPRHOL">
            <summary>
            Shell profile hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPRMRK">
            <summary>
            Shell profile marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPRNOT">
            <summary>
            Shell profile notch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPROF">
            <summary>
            Shell profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPROTR">
            <summary>
            Shell profile trace curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CRERULES">
            <summary>
            Create rules
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CROSS">
            <summary>
            Cross
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CRST">
            <summary>
            Change Ruleset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CSCREED">
            <summary>
            Screed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CSEAM">
            <summary>
            Seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CSTIFF">
            <summary>
            Shell stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CSURF">
            <summary>
            Surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CSURPX">
            <summary>
            Surface proxy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTABLE">
            <summary>
            Selection Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTBEND">
            <summary>
            Cable tray bend
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTCROS">
            <summary>
            Cable tray cross
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTFEAT">
            <summary>
            Cable tray feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTJOIN">
            <summary>
            Cable tray joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTMTRL">
            <summary>
            Cable tray material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTORUS">
            <summary>
            Circular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTRAY">
            <summary>
            Cable tray
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTREDU">
            <summary>
            Cable tray reducer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTRISE">
            <summary>
            Cable tray riser
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTSTRA">
            <summary>
            Cable tray straight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTSUPP">
            <summary>
            Cable tray support
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTTEE">
            <summary>
            Cable tray tee
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTWALL">
            <summary>
            Constant thickness wall
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CURVE">
            <summary>
            Curve (on Spine)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CWALL">
            <summary>
            Wall
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CWAY">
            <summary>
            Cableway
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CWBRAN">
            <summary>
            Cable way branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CYLINDER">
            <summary>
            Cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CYMGRP">
            <summary>
            Connectivity link group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CYMLNK">
            <summary>
            Connectivity schematic-design link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CYMWRL">
            <summary>
            Integrator world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CORNLP">
            <summary>
            Nesting corner loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CUTBR">
            <summary>
            Nesting cutout bridge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CUTFR">
            <summary>
            Cut free geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONVEYOR">
            <summary>
            Conveyor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPLANS">
            <summary>
            Cplanes collection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CPOINS">
            <summary>
            Cpoints collection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CNVRTX">
            <summary>
            Connector vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CONNCT">
            <summary>
            Connector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CNSTYL">
            <summary>
            Connector Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CNPTIN">
            <summary>
            Symbol connection point instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CALGRP">
            <summary>
            Calculation Template Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CALTMP">
            <summary>
            Calculation Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CALWLD">
            <summary>
            Calculation Template World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CRMCUR">
            <summary>
            Commmon Reference Model Curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CURWLD">
            <summary>
            Curve world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CTCOUP">
            <summary>
            Cable tray coupling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.CRMREF">
            <summary>
            CRM Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DAMPER">
            <summary>
            Damper
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DATA">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DATDEF">
            <summary>
            Derived data definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DATUM">
            <summary>
            Datum point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DB">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBALL">
            <summary>
            Global list of DBs allocated to location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBL">
            <summary>
            Database set element to reference DB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBLI">
            <summary>
            Database list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBLOC">
            <summary>
            Database location information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBRANG">
            <summary>
            DB Range
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBSET">
            <summary>
            Database set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBSTL">
            <summary>
            Database set list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBSTWL">
            <summary>
            Database set world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBTY">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBVW">
            <summary>
            Database view
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBVWGROUP">
            <summary>
            Database view group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBVWSET">
            <summary>
            Database view set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBVWWLD">
            <summary>
            Database view world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCRULE">
            <summary>
            Design Change Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCSTYLE">
            <summary>
            Design Change Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DDAREA">
            <summary>
            Design dataset area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DDATA">
            <summary>
            Design data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DDSE">
            <summary>
            Design dataset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DEMOPA">
            <summary>
            Demolition Package
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DEMOSE">
            <summary>
            Demolition set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DEMOWL">
            <summary>
            Demolition world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DEPT">
            <summary>
            Department
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DERDAT">
            <summary>
            Derived data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DESEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DESSYMBOL">
            <summary>
            Design Symbol Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DETGRP">
            <summary>
            Detail Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DIMGROUP">
            <summary>
            Dimension Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DIMPLI">
            <summary>
            Dimension PLine
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DIMPOS">
            <summary>
            Dimension Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DIMPPT">
            <summary>
            Dimension PPoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DISCIPLINE">
            <summary>
            Discipline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DISCWLD">
            <summary>
            Discipline World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DISH">
            <summary>
            Dish
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DISUDT">
            <summary>
            Discipline related types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DLLB">
            <summary>
            ID List Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DIAMOND">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DMSTYL">
            <summary>
            Dimension Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DOCU">
            <summary>
            Document
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DOOR">
            <summary>
            Door
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DOST">
            <summary>
            Document set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DOWLD">
            <summary>
            Document world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPAREA">
            <summary>
            Design pointset area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPBA">
            <summary>
            Dimension Point - Before/After Command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPCARTESIAN">
            <summary>
            Cartesian design Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPCYLINDRICAL">
            <summary>
            Cylindrical design Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLINE">
            <summary>
            Design Pline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPOINT">
            <summary>
            Dimension Point - Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPPT">
            <summary>
            Dimension Point - Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPSET">
            <summary>
            Design Ppoint/Pline set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPSPHERICAL">
            <summary>
            Spherical design Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRAEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRAWING">
            <summary>
            Drawn line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRSSET">
            <summary>
            2D Symbolic Representation for Drafting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRSYLK">
            <summary>
            2D Symbolic Representation for Drafting link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRTMLB">
            <summary>
            Drawing Template Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRTMPL">
            <summary>
            Drawing Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DRWG">
            <summary>
            Drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSIGRO">
            <summary>
            Datasheet Instance Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSINST">
            <summary>
            Datasheet Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSIWLD">
            <summary>
            Datasheet Instance World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSLAYER">
            <summary>
            View Symbology Layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSTGRO">
            <summary>
            Datasheet Template Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSTMPL">
            <summary>
            Datasheet Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSTWLD">
            <summary>
            Datasheet Template World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXDST">
            <summary>
            Default Home Destination definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXGRP">
            <summary>
            Group for Distributed definitions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXHOM">
            <summary>
            Default home definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXMBR">
            <summary>
            Bound Elements definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXOWN">
            <summary>
            Binding Elements definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXSCH">
            <summary>
            Distributed Attributes Schema
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXTST">
            <summary>
            Default Home Test definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSXWLD">
            <summary>
            Distributed Attribute definition World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTABLE">
            <summary>
            Diameter table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSET">
            <summary>
            Dataset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTWL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DUCTING">
            <summary>
            Ducting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DICECK">
            <summary>
            Information on a DICE check
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DICEDB">
            <summary>
            DICE information on a Database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DICEW">
            <summary>
            Holds DICEDBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSTADP">
            <summary>
            Datasheet Additional Pages
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGROUP">
            <summary>
            Drawing Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBNDRY">
            <summary>
            Definition boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DBOX">
            <summary>
            Definition axis parallel box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCRCUR">
            <summary>
            Common Reference curve definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCRDEX">
            <summary>
            Definition coordinate explicit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCRDGR">
            <summary>
            Definition coordinate grid position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCRDSY">
            <summary>
            Definition coordinate system
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DENDFR">
            <summary>
            Definition end from
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DENDTO">
            <summary>
            Definition end to
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DHOLE">
            <summary>
            Definition hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DINCL">
            <summary>
            Definition inclination
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DINTER">
            <summary>
            Definition crm curve intersection element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DLINE">
            <summary>
            Definition axis parallel line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DLOCTN">
            <summary>
            Definition location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DMODRF">
            <summary>
            Definition model reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLAMT">
            <summary>
            Definition plate material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLANE">
            <summary>
            Definition plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLAPO">
            <summary>
            Definition plate material position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLATE">
            <summary>
            Definition plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLIM">
            <summary>
            Definition limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPNT">
            <summary>
            Definition point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPROMT">
            <summary>
            Definition profile material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSEAM">
            <summary>
            Definition seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSEG">
            <summary>
            Definition crm curve segment element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSTIFF">
            <summary>
            Definition stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DSTIPO">
            <summary>
            Definition stiffener position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DARST">
            <summary>
            Desing Annotations Auto Labelling Ruleset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DARULE">
            <summary>
            Autolabeling Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DCURP">
            <summary>
            Definition crm curve start/end point element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DEPNT">
            <summary>
            Definition crm curve point element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DINTC">
            <summary>
            Definition crm internal curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DPLL">
            <summary>
            Definition crm curve parallel curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGARC">
            <summary>
            Detailing Graphic Arc Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGARCL">
            <summary>
            Detailing Graphic Arc Length Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGDLT">
            <summary>
            Detailing Graphic Measure Line Termination Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGELEV">
            <summary>
            Detailing Graphic Elevation Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGLTYP">
            <summary>
            Detailing Graphic Line Type Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGMARK">
            <summary>
            Detailing Graphic Marker Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGML">
            <summary>
            Detailing Graphic Measure Line Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGMLA">
            <summary>
            Detailing Graphic Measure Line Angle Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGMLTR">
            <summary>
            Detailing Graphic Measure Line Triangle Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGPDD">
            <summary>
            Detailing Graphic 2D Point Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGPDDD">
            <summary>
            Detailing Graphic 3D Point Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGPOLY">
            <summary>
            Detailing Graphic Polygon Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGRAD">
            <summary>
            Detailing Graphic Radius Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGRAPH">
            <summary>
            Detailing Graphic Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGSSYM">
            <summary>
            Detailing Graphic Symbol Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGTEXT">
            <summary>
            Detailing Graphic Text Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGTXAT">
            <summary>
            Detailing Graphic Text Attribute Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGTXTU">
            <summary>
            Textual part of a Detailing Graphic Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DGWELD">
            <summary>
            Detailing Graphic Weld Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTADDM">
            <summary>
            Detailing Model Additional Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTADRE">
            <summary>
            Detailing Model Address Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTASMB">
            <summary>
            Detailing Model Assembly
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBLTD">
            <summary>
            Detailing Model Bolt Master Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBLTL">
            <summary>
            Detailing Model Bolt Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBLTS">
            <summary>
            Detailing Model Bolt Set Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBOLT">
            <summary>
            Detailing Bolt Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBSPT">
            <summary>
            Detailing Model Bolt Set Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTCSTE">
            <summary>
            Detailing Model Customer Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTEXT">
            <summary>
            Detailing Model Extension Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTFABI">
            <summary>
            Detailing Element for Fabrication related information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTFDEF">
            <summary>
            Detailing Model Feature Definitions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTFEAT">
            <summary>
            Detailing Model Feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTFREF">
            <summary>
            Detailing Model Feature Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTFSET">
            <summary>
            Detailing Model Feature Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTGEOM">
            <summary>
            Detailing Model Geometry Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTGINF">
            <summary>
            Detailing Model Geometry Information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTGRID">
            <summary>
            Detailing Grid System
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTHOLE">
            <summary>
            Detailing Hole Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTJDAT">
            <summary>
            Detailing Job Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTJOB">
            <summary>
            Bocad Steel Detailing Job
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTJREL">
            <summary>
            Detailing Job Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTLOCA">
            <summary>
            Detailing Model Location/Site Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTMAIN">
            <summary>
            Detailing Model Main Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPDEF">
            <summary>
            Detailing Model Point Container
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPERS">
            <summary>
            Detailing Model Person Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPHSE">
            <summary>
            Detailing Model Phase
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPLAT">
            <summary>
            Detailing Model Plate Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPLNE">
            <summary>
            Detailing Model Reference Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPNCH">
            <summary>
            Detailing Punch Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPOIN">
            <summary>
            Detailing Model Point Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTPROF">
            <summary>
            Detailing Model Profile Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTRELA">
            <summary>
            Detailing Model Relation Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSHAP">
            <summary>
            Detailing Model Shape Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSHPI">
            <summary>
            Detailing Element for Shipping related information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSTEL">
            <summary>
            Detailing Model Generic Structural Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSTRC">
            <summary>
            Detailing Model Structural Connection Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSTRU">
            <summary>
            Detailing Model Structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSUBM">
            <summary>
            Detailing Model Sub-Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTTCON">
            <summary>
            Detailing Model Comment Text Container
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTTXTS">
            <summary>
            Detailing Model Text Data Bundle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTWELD">
            <summary>
            Detailing Model Weld Element Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTWLDD">
            <summary>
            Detailing Model Welding Master Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTWLDL">
            <summary>
            Detailing Model Welding Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTWRLD">
            <summary>
            Detailing world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBLDS">
            <summary>
            Detailing Bolt Definitions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBLSS">
            <summary>
            Detailing Bolt Sets
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBMF">
            <summary>
            Detailing Drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBMFD">
            <summary>
            Detailing Drawing Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBMFJ">
            <summary>
            Detailing BMF Job
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBMFL">
            <summary>
            Detailing Drawing Folder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBMFP">
            <summary>
            Detailing Drawing PDF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTBMRV">
            <summary>
            Detailing Drawing Revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTCMNT">
            <summary>
            Detailing Model Comment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTNODE">
            <summary>
            Detailing Model Node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSEAM">
            <summary>
            Detailing Model Seamline Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.DTSSEC">
            <summary>
            Detailing Model Seamline Section Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ELBOW">
            <summary>
            Elbow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ELCONN">
            <summary>
            Electrical connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ELEVLB">
            <summary>
            Elevation Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ELFITTING">
            <summary>
            Electrical Fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ELLIPSE">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENDATUM">
            <summary>
            Endatum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENGCWL">
            <summary>
            Engineering configuration world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENGGRP">
            <summary>
            Engineering Group level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENGITE">
            <summary>
            Engineering Item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENGWLD">
            <summary>
            World for Engineering data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EPLA">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EQUCOM">
            <summary>
            Equipment component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EQUIPMENT">
            <summary>
            Equipment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ETRIANGLE">
            <summary>
            Equilateral Triangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXPCOLUMN">
            <summary>
            Expression Column
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXPFILTER">
            <summary>
            Expression filter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXTDAT">
            <summary>
            External Data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXTFRM">
            <summary>
            External framework
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXTGEO">
            <summary>
            External Geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXTIMG">
            <summary>
            External Image
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXTLI">
            <summary>
            Extracts list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EXTRUSION">
            <summary>
            Extrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EYENUT">
            <summary>
            Eyenut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EYRD">
            <summary>
            Eye rod
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECASE">
            <summary>
            Engineering Case
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECASWL">
            <summary>
            Engineering Case World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENVLIM">
            <summary>
            Envelope limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ENVLOP">
            <summary>
            Envelope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCFGR">
            <summary>
            Engineering Canvas Configuration Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCFWL">
            <summary>
            Engineering Canvas Configuration world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCONNECT">
            <summary>
            Engineering Canvas Connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECDRAW">
            <summary>
            Engineering Canvas Drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECGROU">
            <summary>
            Engineering Canvas Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECIND">
            <summary>
            Engineering Canvas Index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECLABEL">
            <summary>
            Engineering Canvas Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECMAP">
            <summary>
            Engineering Canvas Mapping
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECOPC">
            <summary>
            Engineering Canvas OPC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECSHEE">
            <summary>
            Engineering Canvas Sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECSYMP">
            <summary>
            Engineering Canvas Symbol Palette
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECSYMT">
            <summary>
            Engineering Canvas Symbol Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECTYPE">
            <summary>
            Engineering Canvas Drawing Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECWLD">
            <summary>
            World for Engineering Canvas data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECTIND">
            <summary>
            Engineering Canvas Template Index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECTSHE">
            <summary>
            Engineering Canvas Template Sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EDOCMT">
            <summary>
            Engineering Document
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EDOCPK">
            <summary>
            Engineering Document Pack
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EDOCWL">
            <summary>
            Engineering Document Pack World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCNPDEF">
            <summary>
            Engineering Canvas Connection Point Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCNPI">
            <summary>
            Engineering Canvas Connection Point Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCNPT">
            <summary>
            Engineering Canvas Connection Point Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECCONT">
            <summary>
            Engineering Canvas Connector Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECANNT">
            <summary>
            Engineering Canvas Annotation Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECBORD">
            <summary>
            Engineering Canvas Drawing Border
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECFUNC">
            <summary>
            Engineering Canvas Functional Symbol Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECTABL">
            <summary>
            Engineering Canvas Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECGRID">
            <summary>
            Engineering Canvas Grid Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECREVC">
            <summary>
            Engineering Canvas Revision Cloud
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECREVM">
            <summary>
            Engineering Canvas Revision Mark
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECTEXT">
            <summary>
            Engineering Canvas Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECADAD">
            <summary>
            Attribute Driven Symbol - Attribute Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECADCD">
            <summary>
            Attribute Driven Symbol - Class Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECADSD">
            <summary>
            Attribute Driven Symbol - Symbol Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ECADSG">
            <summary>
            Attribute Driven Symbol Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EFGRP">
            <summary>
            Engineering Feed Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EFMINS">
            <summary>
            Engineering Feed Mapping Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.EFMREP">
            <summary>
            Engineering Feed Mapping Repository
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ESIMGRO">
            <summary>
            Engineering Simulation Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ESIMINFO">
            <summary>
            Engineering Simulation Information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FACECODE">
            <summary>
            Face code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FACELB">
            <summary>
            Face Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FBLIND">
            <summary>
            Blind flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FCUTPLANE">
            <summary>
            Floor Cover Cut Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FEMIMG">
            <summary>
            Finite Element Model image
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FEMODL">
            <summary>
            Finite Element Model
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FEMWLD">
            <summary>
            Finite Element Model world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FIELD">
            <summary>
            Field
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FILLSTYLE">
            <summary>
            Fill Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FILTER">
            <summary>
            Filter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FITTING">
            <summary>
            Fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FIXING">
            <summary>
            Fixing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FIXTUR">
            <summary>
            Fixture
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FLANGE">
            <summary>
            Flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FLEXIBLE">
            <summary>
            Flexible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FLOOR">
            <summary>
            Floor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FLRCOV">
            <summary>
            Floor Covering
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FLRLAY">
            <summary>
            Floor Covering Layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FLUID">
            <summary>
            Fluid material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMBDIM">
            <summary>
            Fabrication machine bending dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMBEND">
            <summary>
            Fabrication machine bending
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMBPLN">
            <summary>
            Fabrication machine bending plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMBSST">
            <summary>
            Fabrication machine bending springback-stretch factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMEDIM">
            <summary>
            Fabrication machine Extrusion dimension element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMEDNE">
            <summary>
            Fabrication machine extrusions minimum distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMEXTR">
            <summary>
            Fabrication machine extrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMGRP">
            <summary>
            Fabrication machine group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMSSBK">
            <summary>
            Fabrication machine bending stepwise springback-stretch factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMWCON">
            <summary>
            Fabrication machine welding connection types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMWDIM">
            <summary>
            Fabrication machine welding dimensions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMWELD">
            <summary>
            Fabrication machine welding
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMWLD">
            <summary>
            Fabrication machine world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMWSK">
            <summary>
            Fabrication machine welding skey
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FONTFILE">
            <summary>
            Font file details
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FPFITTING">
            <summary>
            Fire Protection Fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FPLANE">
            <summary>
            Flat Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FRMWORK">
            <summary>
            Framework
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FSTYTB">
            <summary>
            Fill Style Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FTUBE">
            <summary>
            Fixed length tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FONTWORLD">
            <summary>
            Font World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FURNIT">
            <summary>
            Furniture
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FABASS">
            <summary>
            Fabrication assembly
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FACONN">
            <summary>
            Connection between two parts
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FAFAST">
            <summary>
            Fastener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FAFSET">
            <summary>
            Fastener Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FAITEM">
            <summary>
            Fabrication assembly item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FAWELD">
            <summary>
            Connection weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FAWLD">
            <summary>
            Fabrication assembly world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FMTRPO">
            <summary>
            Fabrication Material Pool
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FPRJIN">
            <summary>
            Fabrication Material Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FPRJPL">
            <summary>
            Fabrication Plate Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FPRJPR">
            <summary>
            Fabrication Profile Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FEBEAM">
            <summary>
            Finite Beam Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FEFRED">
            <summary>
            Finite Free Edges Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FESHEL">
            <summary>
            Finite Shell Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FETRUS">
            <summary>
            Finite Truss Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCAAR">
            <summary>
            Area arrangement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCARE">
            <summary>
            Functional area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCAW">
            <summary>
            Functional area world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCBRN">
            <summary>
            Functional branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCCAR">
            <summary>
            Curve arrangement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCCW">
            <summary>
            Functional curve world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCGSA">
            <summary>
            Container for generic arrangement area attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCISA">
            <summary>
            Container for insulation attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCLIM">
            <summary>
            Limit in functional model
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCOSA">
            <summary>
            Container for openings attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCPSA">
            <summary>
            Container for painting area attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCSSA">
            <summary>
            Container for scantling attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCCEL">
            <summary>
            Geometry representation of a curve branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FNCTSA">
            <summary>
            Container for profile trace attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FSPDEF">
            <summary>
            Detailing Factory Standard Part Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FSPINS">
            <summary>
            Detailing Factory Standard Part Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.FSPWRL">
            <summary>
            Standard Parts World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GASKET">
            <summary>
            Gasket
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GBASEWORLD">
            <summary>
            Global Baseline World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GBLOCK">
            <summary>
            Generating block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GBRAPN">
            <summary>
            Generating bracket panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GCOMPT">
            <summary>
            Generating compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GCPANE">
            <summary>
            Generating curved panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GCURVE">
            <summary>
            Generating curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GDISCWORLD">
            <summary>
            Global Discipline World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENCUR">
            <summary>
            General 3D curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENNC">
            <summary>
            General non primary catalogue based geometric object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENNG">
            <summary>
            General non primary geometric object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENNI">
            <summary>
            General non primary information object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENPC">
            <summary>
            General top level catalogue driven user object used to define UDET based data structures
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENPG">
            <summary>
            General top level user object used to define UDET based data structures
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENPI">
            <summary>
            General non primary information object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENPRI">
            <summary>
            Generic primitive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GENSEC">
            <summary>
            Structural generic section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GFCURV">
            <summary>
            Generating free curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GIBLO">
            <summary>
            Idealised generating block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GICPAN">
            <summary>
            Idealised generating curved panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GICPLA">
            <summary>
            Idealised generating curved plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GICSTI">
            <summary>
            Idealised generating shell stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GIPPAN">
            <summary>
            Idealised generating planar panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GISPAN">
            <summary>
            Idealised generating subpanel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLABEL">
            <summary>
            General Label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLOCWL">
            <summary>
            Global location world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLYCIRCLE">
            <summary>
            Glyph Circle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLYOUTLINE">
            <summary>
            Glyph Outline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLYPH">
            <summary>
            Glyph
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLYRECT">
            <summary>
            Glyph Rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GLYTB">
            <summary>
            Glyph Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GMATUWORLD">
            <summary>
            Global Maturity World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GMSET">
            <summary>
            3D Geomset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GMSSET">
            <summary>
            Structural geomset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GOBELE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPANEL">
            <summary>
            Generating planar panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPART">
            <summary>
            General Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPITEM">
            <summary>
            Group item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPLANE">
            <summary>
            Generating plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPLATE">
            <summary>
            Generating curved plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPOINT">
            <summary>
            Generating point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPRDEWORLD">
            <summary>
            Global Project Definition World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPROF">
            <summary>
            Generating shell profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPROTR">
            <summary>
            Generating shell profile trace curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPSET">
            <summary>
            Group set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GPWLD">
            <summary>
            Group World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRDMODEL">
            <summary>
            Ground model
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRDRLR">
            <summary>
            Grid Ruler
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDAXIS">
            <summary>
            Grid axis
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDCY">
            <summary>
            Grid plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDELEVATION">
            <summary>
            Grid elevations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDFACES">
            <summary>
            Grid faces
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDLN">
            <summary>
            Grid plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDPL">
            <summary>
            Grid plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDSYSTEM">
            <summary>
            Grid system
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRIDWLD">
            <summary>
            Grid world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRILLE">
            <summary>
            Grille
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GROLWL">
            <summary>
            Global Role world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GROUP">
            <summary>
            Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRP">
            <summary>
            Global group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRPLI">
            <summary>
            Global group list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRSO">
            <summary>
            Generating reference surface object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRSTYL">
            <summary>
            Grid Ruler Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GRULE">
            <summary>
            General rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSEAM">
            <summary>
            Generating seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSTAT">
            <summary>
            Global status world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSTBRA">
            <summary>
            Generating standard bracket
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSTIFF">
            <summary>
            Generating shell stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSTWLD">
            <summary>
            Global Stamp world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSUBPN">
            <summary>
            Generating subpanel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSUPFO">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GSURF">
            <summary>
            Generating surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GTMWL">
            <summary>
            Global team world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GWALL">
            <summary>
            Wall
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.GXTRAO">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HACC">
            <summary>
            Access panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HANCILLARY">
            <summary>
            Panel Hanger Ancillary component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HANDRA">
            <summary>
            Handrail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HANGER">
            <summary>
            Pipe hanger
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HATTA">
            <summary>
            Head attachment point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBEAD">
            <summary>
            Planar panel bead
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBLWLD">
            <summary>
            Hull block world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBRABO">
            <summary>
            Planar panel bracket boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBRAPN">
            <summary>
            Bracket panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBRCKT">
            <summary>
            Planar panel bracket
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBRFLA">
            <summary>
            Planar panel bracket flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HBRSTI">
            <summary>
            Planar panel bracket stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HCLIP">
            <summary>
            Planar panel clip
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HCMWLD">
            <summary>
            Hull curved model world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HCOMPT">
            <summary>
            Exposed Compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HCTOUT">
            <summary>
            Planar panel cutout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HCURVE">
            <summary>
            Planar panel curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HDOPLA">
            <summary>
            Planar panel doubling plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HELEMENT">
            <summary>
            Hanger
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HEXAGON">
            <summary>
            Hexagon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HFAN">
            <summary>
            Fan
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HFLANG">
            <summary>
            Planar panel flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HHOLE">
            <summary>
            Planar panel hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIBLO">
            <summary>
            Idealised block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIBOU">
            <summary>
            Idealised planar panel boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIBRA">
            <summary>
            Idealised planar panel bracket
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HICHOL">
            <summary>
            Idealised shell hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HICPAN">
            <summary>
            Idealised curved panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HICPLA">
            <summary>
            Idealised shell plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HICSTI">
            <summary>
            Idealised shell stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HICUR">
            <summary>
            Idealised planar panel curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HICUT">
            <summary>
            Idealised planar panel cutout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIDOU">
            <summary>
            Idealised planar panel doubling plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIFLA">
            <summary>
            Idealised planar panel flange
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIHOL">
            <summary>
            Idealised planar panel hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HINOT">
            <summary>
            Idealised planar panel notch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIPAN">
            <summary>
            Idealised planar panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIPIL">
            <summary>
            Idealised planar panel pillar
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIPLA">
            <summary>
            Idealised planar panel plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIPOI">
            <summary>
            Idealised planar panel point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HISEA">
            <summary>
            Idealised planar panel seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HISTI">
            <summary>
            Idealised planar panel stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HMARK">
            <summary>
            Hullmark
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HMKWLD">
            <summary>
            Hull Mark world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HNODE">
            <summary>
            Height Change node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HNOTCH">
            <summary>
            Planar panel notch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HNUT">
            <summary>
            Hanger nut
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HOLDEL">
            <summary>
            Hold element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HOLDFL">
            <summary>
            Holds folder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HOLDLN">
            <summary>
            Hold Link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HOOPSE">
            <summary>
            Hoop set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPANBI">
            <summary>
            Planar panel boundary interval
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPANBO">
            <summary>
            Planar panel boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPANEL">
            <summary>
            Planar panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPATTERN">
            <summary>
            Hatch Pattern
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPILLR">
            <summary>
            Planar panel pillar
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPIN">
            <summary>
            Hanger pin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPLATE">
            <summary>
            Planar panel plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPOINT">
            <summary>
            Planar panel point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPRCUT">
            <summary>
            Planar panel profile cutout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPREND">
            <summary>
            Planar panel profile end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPRHOL">
            <summary>
            Planar panel profile hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HPRNOT">
            <summary>
            Planar panel profile notch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRDREF">
            <summary>
            Generic hull reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRFEAT">
            <summary>
            Handrail Features
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRGATE">
            <summary>
            Handrail gate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRKPSE">
            <summary>
            Kickplate set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HROD">
            <summary>
            Hanger rod
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRPANE">
            <summary>
            Handrail panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRPNSE">
            <summary>
            Handrail panel set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRPOST">
            <summary>
            Handrail post
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRSO">
            <summary>
            Exposed Reference Surface Object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRSOF">
            <summary>
            Exposed Reference Surface Object Face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRSOL">
            <summary>
            Exposed Reference Surface Object Limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRST">
            <summary>
            Hatch Ruleset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRTERM">
            <summary>
            Handrail termination
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HRULE">
            <summary>
            Hatch Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSADDLE">
            <summary>
            Saddle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSEAM">
            <summary>
            Planar panel seam
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSLIST">
            <summary>
            HVAC spool list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSPOOL">
            <summary>
            HVAC spool
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSTBRA">
            <summary>
            Standard bracket
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSTIFF">
            <summary>
            Planar panel stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSTYLE">
            <summary>
            Hatch Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSUBPN">
            <summary>
            Subpanel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HSVDEF">
            <summary>
            Hull Symbolic View
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HTAP">
            <summary>
            Planar panel tap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HTFEAT">
            <summary>
            Height Change feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HTPELE">
            <summary>
            Hull topology references
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HVAC">
            <summary>
            HVAC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HVACFITTING">
            <summary>
            HVAC Fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYAGHM">
            <summary>
            Allowable Grain Heeling Moments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYASSA">
            <summary>
            Probabilistic assessment report
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYBMSF">
            <summary>
            Shear force and bending moments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCCIT">
            <summary>
            Cross curves interpolation table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCCTS">
            <summary>
            Compartment categories
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCKGS">
            <summary>
            Critical KG report
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCMPT">
            <summary>
            Compartment information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCOBA">
            <summary>
            Container bays definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCONT">
            <summary>
            Container bay definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCOTP">
            <summary>
            Container types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCRCU">
            <summary>
            Cross curves
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCRIC">
            <summary>
            Criticals
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCSBM">
            <summary>
            Shearing force and bending moments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYCTLS">
            <summary>
            Loading sets
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYDACO">
            <summary>
            Damaged compartments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYDMGE">
            <summary>
            Definitions of damage cases
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYDWSC">
            <summary>
            Deadweight scale
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYFORM">
            <summary>
            Form calculations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYFRH">
            <summary>
            Filled Hold
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYFRTR">
            <summary>
            Frame table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYGCGC">
            <summary>
            Grain calibrations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYGEPA">
            <summary>
            General particulars
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYGRAI">
            <summary>
            Grain calibrations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYGRCK">
            <summary>
            Crit KGs allow dwght mom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYGRCO">
            <summary>
            Grain compartment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYGZCU">
            <summary>
            GZ Curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYHYST">
            <summary>
            Hydrostatics calculations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYISTR">
            <summary>
            Inner structure definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYLOAD">
            <summary>
            Loading condition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYLOCO">
            <summary>
            Loading conditions summary report
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYLOCS">
            <summary>
            Loading condition summary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYLWDT">
            <summary>
            Lightweight definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYLWST">
            <summary>
            Lightweight distribution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYOPST">
            <summary>
            HYDCST (maybe)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYPDRE">
            <summary>
            Probabilistic damage results
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYPGRM">
            <summary>
            Permissible grain moments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYPOST">
            <summary>
            Openings and profiles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYPROB">
            <summary>
            Probabilistic stability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYPZON">
            <summary>
            Damage zone report
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYSAC">
            <summary>
            Sectional area curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYSBDI">
            <summary>
            Subdivision index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYSTAB">
            <summary>
            Stability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYSTEQ">
            <summary>
            Equilibrium
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYSWLD">
            <summary>
            Hydrostatics world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYSZDA">
            <summary>
            Sub zone damage results
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYTANK">
            <summary>
            Tank calibrations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYTRLI">
            <summary>
            Trim and list corrections
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HYWAPA">
            <summary>
            Windage areas and pressure arms
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HOOK">
            <summary>
            Nesting hook
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.HIBEA">
            <summary>
            Idealised planar panel bead
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IDAM">
            <summary>
            Internal damper
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IDINFO">
            <summary>
            Id Info
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IDLIST">
            <summary>
            ID List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IJOINT">
            <summary>
            Implied joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ILPGRP">
            <summary>
            Integrator Area Limit Point group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ILPOBJ">
            <summary>
            Integrator Area Limit Point object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ILPWRL">
            <summary>
            Integrator Area Limit Point world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IMGELE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INCFIX">
            <summary>
            Insulation Component Fixing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INFITTING">
            <summary>
            Information Fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSCMG">
            <summary>
            Insulation Component Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSCMP">
            <summary>
            Insulation Component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSLAY">
            <summary>
            Insulation Layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSMAT">
            <summary>
            Insulation Material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSTRUMENT">
            <summary>
            Instrument
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSULATION">
            <summary>
            Insulation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSUF">
            <summary>
            Insulation Fixing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INSURQ">
            <summary>
            Insulation Requirements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INTATT">
            <summary>
            Engineering interface attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INTDEF">
            <summary>
            Engineering interface definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INTFRM">
            <summary>
            Platform Internal Framework
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INTLNG">
            <summary>
            Intermediate Landing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INVELEMENT">
            <summary>
            Inventory
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.INVLST">
            <summary>
            Inventory list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IPOINT">
            <summary>
            Invisible point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ISODEPT">
            <summary>
            Isometrics department
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ISOLB">
            <summary>
            ISO Symbol Template Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ISOREGI">
            <summary>
            Isometrics registry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ISOTM">
            <summary>
            ISO Symbol Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IWELD">
            <summary>
            Implied weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ICRCUR">
            <summary>
            Common Reference curve instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IHOLE">
            <summary>
            Hull panel hole instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IPLATE">
            <summary>
            Hull panel plate instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ISTIFF">
            <summary>
            Hull panel stiffener instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.IBNDRY">
            <summary>
            Hull panel boundary instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.JLDATUM">
            <summary>
            Justification Line Datum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.JNTGRP">
            <summary>
            Joint group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.JOINT">
            <summary>
            Catalogue joint component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.JNODE">
            <summary>
            Cable Junction Box node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.JNTBOX">
            <summary>
            Cable Junction Box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.KICKPL">
            <summary>
            Kickplate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.KSUEDS">
            <summary>
            Knuckled Surface Edges
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.KSUFAS">
            <summary>
            Knuckled Surface Faces
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.KSUNDS">
            <summary>
            Knuckled Surface Nodes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.KSUSVE">
            <summary>
            Knuckled surface vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LADDER">
            <summary>
            Ladder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LALB">
            <summary>
            Label Template Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LASIMG">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LASSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAVOIN">
            <summary>
            Laser Volume of Interest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAVOST">
            <summary>
            Laser Volume Representation Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAYDEF">
            <summary>
            Layer Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAYER">
            <summary>
            View annotation layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAYRST">
            <summary>
            Layer Ruleset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAYRUL">
            <summary>
            Layer Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LAYTBL">
            <summary>
            Layer Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LBSTYL">
            <summary>
            Label Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCCARTESIAN">
            <summary>
            Cartesian link constraint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCCYLINDRICAL">
            <summary>
            Cylindrical link constraint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCDESCRIPTOR">
            <summary>
            Load case descriptor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCOMC">
            <summary>
            Global location daemon configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCOMD">
            <summary>
            Global location comms link details
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCOML">
            <summary>
            Global location comms link list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCOMW">
            <summary>
            Global location comms world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCSPHERICAL">
            <summary>
            Spherical link constraint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCTIMD">
            <summary>
            Event timer information details
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCTIML">
            <summary>
            Event timer information List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LCYLINDER">
            <summary>
            Cylinder (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LDIMENSION">
            <summary>
            Linear Dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LDRCAGE">
            <summary>
            Ladder cage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LDREXT">
            <summary>
            Ladder exit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LDRRUN">
            <summary>
            Ladder rung
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LDRSTR">
            <summary>
            Ladder stringer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LIBY">
            <summary>
            Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LINDIMENSION">
            <summary>
            Linear Dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LINE">
            <summary>
            Line (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LINESTYLE">
            <summary>
            Linestyle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LINKWLD">
            <summary>
            Link document
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LJSE">
            <summary>
            Lap-joint stub end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LMDB">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNCLAS">
            <summary>
            Link class
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNDESC">
            <summary>
            Link descriptor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNFOLD">
            <summary>
            Link folder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNK">
            <summary>
            Global link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNKITEM">
            <summary>
            Link item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNKLI">
            <summary>
            Global link list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNKSET">
            <summary>
            Link set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LNLINK">
            <summary>
            Link link
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LOAPOINT">
            <summary>
            Equipment load point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LOC">
            <summary>
            Global location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LOCLI">
            <summary>
            Global location list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LOOP">
            <summary>
            Loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LOOPTS">
            <summary>
            Loop points
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LPYRAMID">
            <summary>
            Pyramid (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LSNOUT">
            <summary>
            Snout (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LSTYTB">
            <summary>
            Linear Style Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LSWIDD">
            <summary>
            Linestyle Width Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LINESTYLEWORLD">
            <summary>
            Linestyle World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LTABLE">
            <summary>
            Length table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LTEA">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LUANCILLARY">
            <summary>
            Luancillary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LUG">
            <summary>
            LUG: Pipe support component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LABSYM">
            <summary>
            Labelled symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LABTXT">
            <summary>
            Labelled text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LSTDEF">
            <summary>
            Engineering list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LSTGRP">
            <summary>
            List Group level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LSTWLD">
            <summary>
            World for Engineering list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LIBGRP">
            <summary>
            Library Engineering Group level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LIBITE">
            <summary>
            Library Engineering Item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LRLB">
            <summary>
            Autolabeling rule library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LPVRTX">
            <summary>
            Connector loop vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.LABETY">
            <summary>
            Labelled entity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MANPKG">
            <summary>
            Manufacturing Package
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MAPLNS">
            <summary>
            Nested assembly plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MARKSTYLE">
            <summary>
            Marker Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MATMDB">
            <summary>
            MDB Project Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MATURITY">
            <summary>
            Maturity Level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MATUWLD">
            <summary>
            Maturity-level World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MATWORLD">
            <summary>
            Material world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBLIST">
            <summary>
            Multi-bolt list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBLOCK">
            <summary>
            Production parts block
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBOLT">
            <summary>
            Multi-bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBPRO">
            <summary>
            Built profile part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBRDEF">
            <summary>
            Member definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBRMAP">
            <summary>
            Mapped member
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MBURN">
            <summary>
            Burner data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MDB">
            <summary>
            Multiple database
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MDBL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MDBW">
            <summary>
            Multiple database world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MESH">
            <summary>
            Mesh
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MESS">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MISW">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MLABEL">
            <summary>
            MLABEL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNOZZLE">
            <summary>
            Multiple nozzle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNPATH">
            <summary>
            Nesting machine path time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNPLA">
            <summary>
            Nested plate part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNPROF">
            <summary>
            Nested profile part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNRCRE">
            <summary>
            Nesting created rest plates
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNRNSQ">
            <summary>
            Nesting rest plates normal steel quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNRWRK">
            <summary>
            Nesting rest plates work
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNSTQU">
            <summary>
            Nested plate quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNSTTH">
            <summary>
            Nested plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNTOOL">
            <summary>
            Nesting tool path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MNUM">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MOGOBJ">
            <summary>
            Miscellaneous object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MOGWLD">
            <summary>
            Mog world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPANEL">
            <summary>
            Production parts panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPKGFL">
            <summary>
            Manufacturing Package Folder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPKGFT">
            <summary>
            Manufacturing Package Filter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPLATE">
            <summary>
            Plate part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPLCQU">
            <summary>
            PLCM plate quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPLCTH">
            <summary>
            PLCM plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPLNST">
            <summary>
            Nested plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPLRAW">
            <summary>
            Raw plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPLRWI">
            <summary>
            Nesting raw plate instances
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPRNST">
            <summary>
            Nested profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPROF">
            <summary>
            Profile part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTBLS">
            <summary>
            Nesting pathtime blast
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTBRN">
            <summary>
            Nesting pathtime burn
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTFAC">
            <summary>
            Nesting pathtime factors
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTFCI">
            <summary>
            Nesting pathtime time factors
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTGSD">
            <summary>
            Nesting pathtime GSD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTLAB">
            <summary>
            Nesting pathtime label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MPTMRK">
            <summary>
            Nesting pathtime mark
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MRAWQU">
            <summary>
            Production raw plate quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MRAWTH">
            <summary>
            Production raw plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MRESTH">
            <summary>
            Production rest plate thickness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MRESTQ">
            <summary>
            Production rest plate quality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MARKPRIMITIVE">
            <summary>
            Marker
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MRPLA">
            <summary>
            Rest plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MSET">
            <summary>
            Measurement set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MSLI">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MSTYTB">
            <summary>
            Marker Style Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MTPBLS">
            <summary>
            Nesting toolpath blast
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MTPBRN">
            <summary>
            Nesting toolpath burn
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MTPGSD">
            <summary>
            Nesting toolpath GSD
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MTPLAB">
            <summary>
            Nesting toolpath label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MTPMRK">
            <summary>
            Nesting toolpath mark
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MTYPE">
            <summary>
            Measurement type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVICBX">
            <summary>
            Model view clipbox
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVICPL">
            <summary>
            Model view clipplane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIDEF">
            <summary>
            Model viewing definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIDWL">
            <summary>
            Model viewing drawlist information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIDWS">
            <summary>
            Model viewing drawlist setting information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIFLD">
            <summary>
            Model viewing information elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIMCT">
            <summary>
            Model viewing model content
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIPOS">
            <summary>
            Model viewing position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVISEL">
            <summary>
            Model viewing model selection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MVIWLD">
            <summary>
            Model viewing info world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MWELD">
            <summary>
            Weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MWLDJT">
            <summary>
            Weld joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MWLDTB">
            <summary>
            Weld table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MWLWLD">
            <summary>
            Weld table world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MWPART">
            <summary>
            Weld joint part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIAUXI">
            <summary>
            Movement instruction aux func
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIBEVE">
            <summary>
            Movement instruction for bevel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIBURN">
            <summary>
            Movement instruction for burning
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MICONT">
            <summary>
            Movement instruction contour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIIDLE">
            <summary>
            Movement instruction for idle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MILABE">
            <summary>
            Movement instruction for label
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIMARK">
            <summary>
            Movement instruction for markng
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MISEGM">
            <summary>
            Movement instruction segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIECOM">
            <summary>
            Instruction for used def profile end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIGMRK">
            <summary>
            Movement instruction for general marking
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIHNC">
            <summary>
            Movement instruction for hnc on profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIPCON">
            <summary>
            Movement instruction profile contour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIPEND">
            <summary>
            Movement instruction for profile end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIPLTP">
            <summary>
            Movement instruction for plate cutting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIPPRO">
            <summary>
            Penetrating profile part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIPRTP">
            <summary>
            Movement instruction for profile cutting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MIPUDE">
            <summary>
            Instruction for used def profile end
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MISEGT">
            <summary>
            Movement instruction segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.MFIX">
            <summary>
            Merged fixing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NAMSEQ">
            <summary>
            Name sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NBOX">
            <summary>
            Negative box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NBRWLD">
            <summary>
            Nominal bore world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NBOXING">
            <summary>
            Negative boxing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NCONE">
            <summary>
            Negative cone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NCTORUS">
            <summary>
            Negative circular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NCYLINDER">
            <summary>
            Negative cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NDISH">
            <summary>
            Negative dish
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NGMSET">
            <summary>
            Negative 3D Geomset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NLCYLINDER">
            <summary>
            Negative cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NLPYRAMID">
            <summary>
            Negative pyramid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NLSNOUT">
            <summary>
            Negative snout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NODISPLACEMENT">
            <summary>
            Nodal displacement
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOLOAD">
            <summary>
            Nodal load
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOMINB">
            <summary>
            Nominal bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOMTAB">
            <summary>
            Nominal bore table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOTE">
            <summary>
            Sheet Note
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOTIFB">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOTIFD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOTIFW">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NOZZLE">
            <summary>
            Nozzle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NPOLYHEDRON">
            <summary>
            Negative polyhedron
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NPYRAMID">
            <summary>
            Negative pyramid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NREVOLUTION">
            <summary>
            Negative revolution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NRTORUS">
            <summary>
            Negative rectangular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSBOX">
            <summary>
            Negative box
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSCONE">
            <summary>
            Negative cone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSCTORUS">
            <summary>
            Negative circular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSCYLINDER">
            <summary>
            Negative cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSDSH">
            <summary>
            Negative dish
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSEXTRUSION">
            <summary>
            Negative extrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSLCYLINDER">
            <summary>
            Negative slope bottom cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSNOUT">
            <summary>
            Negative snout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSREVOLUTION">
            <summary>
            Negative revolution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSRTORUS">
            <summary>
            Negative rectangular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSSLCYLINDER">
            <summary>
            Negative slope-bottomed cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSSPHERE">
            <summary>
            Negative sphere
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NTUBE">
            <summary>
            Negative tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NXTRUSION">
            <summary>
            Negative rectangular extrusion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSTPLA">
            <summary>
            Nested part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NAMRUL">
            <summary>
            Naming Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NRULPT">
            <summary>
            Naming Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.NSTPRO">
            <summary>
            Nested profile part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OBJELE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OBJELH">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OBJHD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OFST">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OLAYER">
            <summary>
            Overlay
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OLET">
            <summary>
            Olet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OLINESTYLE">
            <summary>
            Offset Line Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OPENFE">
            <summary>
            Open features
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OPENSPACE">
            <summary>
            Open Space
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OUTLINE">
            <summary>
            Outline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.OVERLAY">
            <summary>
            Overlay Sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ORDER">
            <summary>
            Manufacturing order
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ORDWLD">
            <summary>
            Manufacturing order world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PADEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PAINT">
            <summary>
            Paint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PALJOINT">
            <summary>
            Panel linear joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PANEL">
            <summary>
            Panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PAVERT">
            <summary>
            Panel vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PBOX">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PBSCRT">
            <summary>
            Flexible Explorer Criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PBSOBN">
            <summary>
            Flexible Explorer Object Node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PBSTPL">
            <summary>
            Flexible Explorer Template definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PBSTXN">
            <summary>
            Flexible Explorer Text Node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PBSWLD">
            <summary>
            Flexible Explorer Templates World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PCDSE">
            <summary>
            Parent to coordinate system entities
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PCLAMP">
            <summary>
            Pipe clamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PCLIP">
            <summary>
            Pipe clip
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PCOJOINT">
            <summary>
            Primary compound joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PCOMPONENT">
            <summary>
            Piping component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PCYL">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PDAELE">
            <summary>
            Pipe data  element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PDATAB">
            <summary>
            Pipe data table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PDIMENSION">
            <summary>
            PCD Radial Dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PEROP">
            <summary>
            Permissible operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFITTING">
            <summary>
            Panel fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PIPCARTESIAN">
            <summary>
            Piping connection Cartesian Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PIPE">
            <summary>
            Pipe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PJOINT">
            <summary>
            Primary joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLATE">
            <summary>
            Plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLDATUM">
            <summary>
            Pline datum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLENUM">
            <summary>
            Plenum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLFEAT">
            <summary>
            Platform Features
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLINE">
            <summary>
            Pline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLLB">
            <summary>
            Plane Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLOOP">
            <summary>
            Panel loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLOPEN">
            <summary>
            Platform opening
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLTACT">
            <summary>
            Plot Action
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLTFRM">
            <summary>
            Platform
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLTGRD">
            <summary>
            Plating Grid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLTSTY">
            <summary>
            Plot Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLUG">
            <summary>
            Pipe lug
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PNODE">
            <summary>
            Primary node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POGON">
            <summary>
            Polygon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POHEDRON">
            <summary>
            Polyhedron
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POINT">
            <summary>
            Point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POINSP">
            <summary>
            Point (on Spine)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POINTR">
            <summary>
            Point on path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POLFACE">
            <summary>
            Polyhedron face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POLOOP">
            <summary>
            Polyhedron loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POLPTLIST">
            <summary>
            Polyhedron point list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POLYHEDRON">
            <summary>
            Polyhedron
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PORI">
            <summary>
            Port item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PORSET">
            <summary>
            Port set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POSRLR">
            <summary>
            Position Ruler
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POST">
            <summary>
            PCLA Overstrap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POSTSE">
            <summary>
            Post set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PPIECE">
            <summary>
            Pipe piece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PPLANE">
            <summary>
            Perpendicular Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PPLIST">
            <summary>
            Pipe piece list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PPOS">
            <summary>
            Point given as 2D Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PPPT">
            <summary>
            Point given by Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PPYR">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRADIS">
            <summary>
            Associated Discipline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRBASL">
            <summary>
            Associated Baseline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRDEFDB">
            <summary>
            Project Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRDEFMDB">
            <summary>
            Project Definition For MDBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRDEWL">
            <summary>
            Project Definition World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRDISL">
            <summary>
            Project Discipline List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRIM">
            <summary>
            Primitive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRMF">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRTELE">
            <summary>
            Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRTWLD">
            <summary>
            Part world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRTYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PSLIST">
            <summary>
            Pipe spool list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PSNO">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PSPOOL">
            <summary>
            Pipe spool
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PSPWL">
            <summary>
            Preferred Specification world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PSTYTB">
            <summary>
            Plot Style Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTAPPING">
            <summary>
            Pipe Tapping
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTAXIS">
            <summary>
            Axial Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTCAR">
            <summary>
            Cartesian Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTMIX">
            <summary>
            Mixed Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTPOS">
            <summary>
            Ppoint with position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTRACK">
            <summary>
            Pipe track
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTSET">
            <summary>
            3D Pointset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTSSET">
            <summary>
            Structural pointset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTST">
            <summary>
            Pointset for note, view-note or symbol template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PTWLD">
            <summary>
            World Pointset Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PVOLUME">
            <summary>
            Penalty or preferred volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PYRAMID">
            <summary>
            Pyramid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLNEST">
            <summary>
            Plate Nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.POINUV">
            <summary>
            Point 2d
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PULLNODE">
            <summary>
            Pulling Pit node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PULLPIT">
            <summary>
            Pulling Pit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFACE">
            <summary>
            Polyface Surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFCRVS">
            <summary>
            Polyface curves
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFCURV">
            <summary>
            Polyface curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFDEFI">
            <summary>
            Polyface definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFEDGE">
            <summary>
            Face edge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFFACE">
            <summary>
            Face
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFILOO">
            <summary>
            Inner face loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFOUTC">
            <summary>
            Polyface outcome
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PFPOIN">
            <summary>
            Polyface point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLAFAC">
            <summary>
            Plate contour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLASOL">
            <summary>
            Plate solid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PROCRO">
            <summary>
            Profile crossection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PROTRC">
            <summary>
            Profile trace
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PLPLDA">
            <summary>
            Planning data for plate nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRNEST">
            <summary>
            Profile nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.PRPLDA">
            <summary>
            Planning data for profile nest
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RAIL">
            <summary>
            Rail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RAILSET">
            <summary>
            Rail Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RATTA">
            <summary>
            Route attachment point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RAWPLA">
            <summary>
            Rawplate catalogue entry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RBRAN">
            <summary>
            Multidiscipline routing branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RCPL">
            <summary>
            Rod coupling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RDIMENSION">
            <summary>
            Radial Dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RECIPIENT">
            <summary>
            Recipient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RECTANGLE">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REDUCER">
            <summary>
            Reducer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REFDAT">
            <summary>
            Ref Data Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REFGAR">
            <summary>
            Reference Grid Arc
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REFGLN">
            <summary>
            Reference Grid Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REFGRD">
            <summary>
            Reference Grid
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REGISTRY">
            <summary>
            Registry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REGION">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RELEASE">
            <summary>
            Nodal release
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REMENTRY">
            <summary>
            Remove Entry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REPORT">
            <summary>
            Report
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RESDEF">
            <summary>
            Restriction definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RESTRAINT">
            <summary>
            Restraint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RESTGP">
            <summary>
            Restriction group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RESTRIC">
            <summary>
            Restriction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVBLD">
            <summary>
            Revision Block Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVCGP">
            <summary>
            Revision Configuration Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVCON">
            <summary>
            Revision Configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVCWL">
            <summary>
            Revision Configuration World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVISION">
            <summary>
            Revision
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVISS">
            <summary>
            Revision and Issue
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVLKS">
            <summary>
            Revision Link elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVLNK">
            <summary>
            Revision Link element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVLWL">
            <summary>
            Revision Links world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVNOD">
            <summary>
            Revision Number Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVNOP">
            <summary>
            Revision Number Part
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVOLUTION">
            <summary>
            Revolution
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REVSTD">
            <summary>
            Revision History Block Data Item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RFWL">
            <summary>
            Runfile world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RLADDR">
            <summary>
            Rung Ladder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RLCAGE">
            <summary>
            Rung ladder cage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RLGATE">
            <summary>
            Rung ladder gate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RLST">
            <summary>
            Rule set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RLWLD">
            <summary>
            Rule world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RNODE">
            <summary>
            Route node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ROD">
            <summary>
            Rod
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ROLE">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ROLWL">
            <summary>
            Role world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ROOM">
            <summary>
            Room
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPATH">
            <summary>
            Route path
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPLANE">
            <summary>
            Routing plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPLB">
            <summary>
            Representation Rules and Styles Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPLGROUP">
            <summary>
            Routing plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPLTAB">
            <summary>
            Rawplate table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPOINT">
            <summary>
            Radial Dimension Point - Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPPT">
            <summary>
            Radial dimension point - Ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RRST">
            <summary>
            Representation Ruleset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RRULE">
            <summary>
            Representation Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RSECT">
            <summary>
            Curve (on spine)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RSEG">
            <summary>
            Routing segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RSOWLD">
            <summary>
            Reference surface world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RSTAREA">
            <summary>
            Restricted Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RTFEAT">
            <summary>
            Route feature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RTORUS">
            <summary>
            Rectangular torus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RUNDECK">
            <summary>
            Rundeck
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RUNFILE">
            <summary>
            Runfile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RUNGSET">
            <summary>
            Rung set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RUNWORLD">
            <summary>
            Run world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RUTVOLUME">
            <summary>
            Routing Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RWELD">
            <summary>
            Real weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RAWPL">
            <summary>
            Nesting raw plate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RDFDATASET">
            <summary>
            An RDF DataSet, used to store RDF Graphs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RDFGRAPH">
            <summary>
            An RDF Graph, used to store RDF Resources
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RDFNSDEFINITION">
            <summary>
            An RDF Namespace Definition; used to store a namespace and its prefix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RDFRESOURCE">
            <summary>
            An RDF Resource
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RDFWLD">
            <summary>
            Top level RDF world, used to store RDF DataSets
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RESGROUP">
            <summary>
            Group element for RDF Resource elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RAWPRM">
            <summary>
            Rawprofile catalogue entry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RPRTAB">
            <summary>
            Rawprofile table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RULGRP">
            <summary>
            Naming Rules group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RULWLD">
            <summary>
            Naming rules world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.REFPOS">
            <summary>
            Point given as annotation reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RLCNTR">
            <summary>
            Rules Container
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RULELE">
            <summary>
            Rule Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RSFINS">
            <summary>
            Raw Surface instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.RAWPR">
            <summary>
            Raw bar/profile for nesting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SANNULUS">
            <summary>
            Structural annulus
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SAPROPERTY">
            <summary>
            Spot property A temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SBFITTING">
            <summary>
            Subfitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SBFRAMEWORK">
            <summary>
            Subframework
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SBOLT">
            <summary>
            Single Bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SBOX">
            <summary>
            Box (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SBPROPERTY">
            <summary>
            Spot property B temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SBRTAB">
            <summary>
            Sub branch/reducer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCACTUATOR">
            <summary>
            Schematic actuator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCAREA">
            <summary>
            Schematic area shape
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCBRANCH">
            <summary>
            Schematic branch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCCABLE">
            <summary>
            Schematic cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCCORE">
            <summary>
            Schematic core
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCDIAGRAM">
            <summary>
            Schematic drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCDUCT">
            <summary>
            Schematic duct
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCELCONNECTION">
            <summary>
            Schematic electrical connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCEQUIPMENT">
            <summary>
            Schematic equipment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCFITTING">
            <summary>
            Schematic fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCGROUP">
            <summary>
            Schematic group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCHVAC">
            <summary>
            Schematic HVAC
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCHVFITTING">
            <summary>
            Schematic HVAC fitting
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCILINE">
            <summary>
            Schematic instrumentation line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCIND">
            <summary>
            Schematic element index
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCINSTRUMENT">
            <summary>
            Schematic instrument
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCLAMP">
            <summary>
            Steel clamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCLOOP">
            <summary>
            Schematic instrumentation loop
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCMCABLE">
            <summary>
            Schematic multi cable
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCNOZZLE">
            <summary>
            Schematic nozzles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOINSTRUMENT">
            <summary>
            Schematic offline instrument
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOJOINT">
            <summary>
            Secondary compound joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOMPONENT">
            <summary>
            Catalogue component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCONE">
            <summary>
            Cone (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOPCI">
            <summary>
            Schematic off-page connection input
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOPCO">
            <summary>
            Schematic off-page connection output
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOPE">
            <summary>
            Scope
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCOWL">
            <summary>
            Scope world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCPAGE">
            <summary>
            Schematic document page
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCPDESTINATION">
            <summary>
            Schematic pipe destination
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCPLINE">
            <summary>
            Schematic pipeline
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCPROPERTY">
            <summary>
            Spot property C temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCREED">
            <summary>
            Screed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCSEGMENT">
            <summary>
            Schematic segment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCSTENCIL">
            <summary>
            Schematic stencil
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCSUBEQUIPMENT">
            <summary>
            Schematic subequipment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCTEMPLATE">
            <summary>
            Schematic template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCTN">
            <summary>
            Structural section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCTORUS">
            <summary>
            Circular torus (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCTUBING">
            <summary>
            Schematic tubing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCVALV">
            <summary>
            Schematic valve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SCYLINDER">
            <summary>
            Cylinder (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SDAOPT">
            <summary>
            ADP Setting library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SDENSITY">
            <summary>
            Spot density temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SDISK">
            <summary>
            Disc (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SDLOAD">
            <summary>
            Section distributed load
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SDSH">
            <summary>
            Dish (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SDTEXT">
            <summary>
            Detail text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SECTION">
            <summary>
            Piping section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SEGSEQ">
            <summary>
            Sequence of segments
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SELEC">
            <summary>
            Selector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SELJOINT">
            <summary>
            Section linear joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SEQWOR">
            <summary>
            Name sequence World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SETATTRIBUTE">
            <summary>
            Set attribute rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SETPARAMETER">
            <summary>
            Set Parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SETSTATUS">
            <summary>
            Set status rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SEVERT">
            <summary>
            Section vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SEXPANSION">
            <summary>
            Spot expansion coefficient temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SEXTRUSION">
            <summary>
            Extrusion (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SFITTING">
            <summary>
            Catalogue fitting component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SFTREF">
            <summary>
            Soft reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SHEET">
            <summary>
            Sheet
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SHLB">
            <summary>
            Overlay and Backing Sheet Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SHOE">
            <summary>
            Shoe
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SHTMPL">
            <summary>
            Sheet Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SHU">
            <summary>
            Standard hook-up
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SILENCER">
            <summary>
            Silencer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SITE">
            <summary>
            Site
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SJOINT">
            <summary>
            Secondary joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SKIR">
            <summary>
            Skirt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLABEL">
            <summary>
            Special Label Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLADDR">
            <summary>
            Step Ladder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLCYLINDER">
            <summary>
            Slope bottom cylinder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLINE">
            <summary>
            Simple line (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLOELE">
            <summary>
            Pipe slope element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLOOP">
            <summary>
            Loop (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLOTAB">
            <summary>
            Pipe slope table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLRAIL">
            <summary>
            Step ladder rail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SLUG">
            <summary>
            Steel lug attachment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SMAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SMES">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SMTEXT">
            <summary>
            Material text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SNODE">
            <summary>
            Secondary node
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SNOTAB">
            <summary>
            Sub nominal bore table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SNOUT">
            <summary>
            Snout
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SNUB">
            <summary>
            Snubber
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SOLEXT">
            <summary>
            SOLids EXTended info
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SOLID">
            <summary>
            Solid material
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SOST">
            <summary>
            SCLA Overstrap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPACER">
            <summary>
            Spacer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPBOU">
            <summary>
            Boundary reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPBSET">
            <summary>
            Boundary element set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPCOMPONENT">
            <summary>
            Specification component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPECIFICATION">
            <summary>
            Specification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPINE">
            <summary>
            Spine (of Gensec)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPLANE">
            <summary>
            Stepped Plane
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPLDRG">
            <summary>
            Spool drawing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPLOAD">
            <summary>
            Section point load
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPLR">
            <summary>
            Splitter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPLTMP">
            <summary>
            Spool temporary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMBAA">
            <summary>
            Container for Production Block attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMBFA">
            <summary>
            Container for block face attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMBSA">
            <summary>
            Container for block space attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCAA">
            <summary>
            Container for compartmentation attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCAD">
            <summary>
            Root element to cell arrangement definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCEL">
            <summary>
            Geometry representation of a space
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCFA">
            <summary>
            Container for compartmentation face attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCSA">
            <summary>
            Container for compartment attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMEB">
            <summary>
            Envelop boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMFAC">
            <summary>
            Face element in space modelling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMGAA">
            <summary>
            Container for generic arrangement attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMGFA">
            <summary>
            Container for generic arrangement face attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMGOB">
            <summary>
            Group of boundaries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMGSA">
            <summary>
            Container for generic arrangement space attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMGSB">
            <summary>
            General surface boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMHSB">
            <summary>
            Hull surface boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMLAA">
            <summary>
            Container for layout arrangement attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMLFA">
            <summary>
            Container for layout face attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMLSA">
            <summary>
            Container for layout space attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMPAA">
            <summary>
            Container for painting area arrangement attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMPFA">
            <summary>
            Container for painting area face attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMPSA">
            <summary>
            Container for painting area space attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMRSB">
            <summary>
            Reference surface boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMSA">
            <summary>
            Root element of space arrangements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMSPC">
            <summary>
            Space
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMSW">
            <summary>
            Space world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMZAA">
            <summary>
            Container for zone attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMZFA">
            <summary>
            Container for zone face attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMZSA">
            <summary>
            Container for zone attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPOISSON">
            <summary>
            Spot poissons ratio temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPOOL">
            <summary>
            Spool
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPRDEWORLD">
            <summary>
            Project Definition World for MDBs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPRFILE">
            <summary>
            Catalogue profile component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPROFILE">
            <summary>
            Structural profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPST">
            <summary>
            Sheet Pointset Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPVERT">
            <summary>
            Vertex for sprof
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPWLD">
            <summary>
            Specification world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRCELEMENT">
            <summary>
            Source element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRECTANGLE">
            <summary>
            Structural rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SREVOLUTION">
            <summary>
            Revolution (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRFTRT">
            <summary>
            Surface treatment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRTORUS">
            <summary>
            Rectangular torus (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSBDOCU">
            <summary>
            Sub-sub document
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSBRTA">
            <summary>
            Sub-sub branch/reducer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSLCYLINDER">
            <summary>
            Slope-bottomed cylinder (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSNOTA">
            <summary>
            Sub-sub nominal bore table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSOWLD">
            <summary>
            Surface world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSPHERE">
            <summary>
            Sphere (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSREFELEMENT">
            <summary>
            Supports Structure Reference Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSSBRT">
            <summary>
            Sub-sub-sub branch/reducer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SSTRESS">
            <summary>
            Spot stress temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STADEF">
            <summary>
            Status Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STAGRP">
            <summary>
            Status definitions group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STAHIS">
            <summary>
            Status History
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STALNK">
            <summary>
            Status Link element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STAMP">
            <summary>
            Stamp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STATUS">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STAVAL">
            <summary>
            Status Value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STAWLD">
            <summary>
            Status Configuration world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STCATEGORY">
            <summary>
            Structural category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STDWLD">
            <summary>
            Standard world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STIFFENER">
            <summary>
            Stiffener
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STLNKS">
            <summary>
            Status Link elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STLNKW">
            <summary>
            Status Link world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STLS">
            <summary>
            Steel section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STLST">
            <summary>
            Stamp list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRAIGHT">
            <summary>
            Straight Line
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRFLT">
            <summary>
            Stair Flight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRLNG">
            <summary>
            Stair Landing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRSET">
            <summary>
            Stair Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRSTR">
            <summary>
            Stair String
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRT">
            <summary>
            Straight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRTWR">
            <summary>
            Stair Tower
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRUCTURE">
            <summary>
            Structure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STRWELL">
            <summary>
            Stairwell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STSECTION">
            <summary>
            Structural section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STWALL">
            <summary>
            Structural wall
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STWLD">
            <summary>
            Stamp world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STYLE">
            <summary>
            Representation Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STYLWL">
            <summary>
            Style World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUBDOCU">
            <summary>
            Sub document
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUBEQUIPMENT">
            <summary>
            Subequipment
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUBJOINT">
            <summary>
            Subjoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUBSTRUCTURE">
            <summary>
            Substructure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUBSCD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUBSCW">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUPCOMP">
            <summary>
            Pipe support component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUPNFO">
            <summary>
            Generic setup info object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SUPPORT">
            <summary>
            Support
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SVERTEX">
            <summary>
            Vertex (3D Geomset)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SVOLMODEL">
            <summary>
            Sub Volume model
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SWBR">
            <summary>
            Sway brace
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYGPAR">
            <summary>
            System group area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYGPWL">
            <summary>
            System group world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYLB">
            <summary>
            Symbol Template Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYMBOL">
            <summary>
            Symbol Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYOUNG">
            <summary>
            Spot Youngs modulus temperature and pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYSCDA">
            <summary>
            System catalogue data
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYSGRP">
            <summary>
            System group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYSMDA">
            <summary>
            System dataset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYTM">
            <summary>
            Symbol Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STBASE">
            <summary>
            An RDF Statement with an object which is not of an inbuilt type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STBOOLEAN">
            <summary>
            An RDF Statement with a boolean object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STDOUBLE">
            <summary>
            An RDF Statement with a double object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STGROUP">
            <summary>
            Group element for RDF statement elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STINTEGER">
            <summary>
            An RDF Statement with an integer object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STLSTRING">
            <summary>
            An RDF Statement with a language qualified string object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STREFERENCE">
            <summary>
            An RDF Statement with a reference object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STSTRING">
            <summary>
            An RDF Statement with a string object
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SKINFO">
            <summary>
            Plate nest sketch information
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SKSYMB">
            <summary>
            Sketch information for symbol
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SKTXT">
            <summary>
            Sketch information for text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SYCNPT">
            <summary>
            Symbol connection point template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SORELE">
            <summary>
            Source Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRCNTR">
            <summary>
            Source Element Container
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMBOX">
            <summary>
            Box definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCFB">
            <summary>
            Create from boundaries definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCNE">
            <summary>
            Cone definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCON">
            <summary>
            Context definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMCYL">
            <summary>
            Cylinder definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMDIV">
            <summary>
            Divider definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMMRG">
            <summary>
            Space management merge definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMOPE">
            <summary>
            Space management operation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMOPR">
            <summary>
            Space management operator
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMPFB">
            <summary>
            Polyface boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMPOI">
            <summary>
            Space management identification point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMPRG">
            <summary>
            Space management purge definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMRCB">
            <summary>
            Reference curve boundary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SPMSPH">
            <summary>
            Sphere definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRFDEF">
            <summary>
            Surface instance definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRFLIM">
            <summary>
            Surface instance limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRFRFL">
            <summary>
            Surface instance reflection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRFSUR">
            <summary>
            Surface Instance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SRFTRA">
            <summary>
            Surface instance translation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.SMGEO">
            <summary>
            Smart geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STCONN">
            <summary>
            Structural Connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STCSET">
            <summary>
            Structural connection set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.STCVER">
            <summary>
            Structural connection vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABGROUP">
            <summary>
            Table group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABHEADER">
            <summary>
            Table header
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABHQUESTION">
            <summary>
            Table header question
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABITEM">
            <summary>
            Table item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABLE">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABQUESTION">
            <summary>
            Table question
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TABWLD">
            <summary>
            Table world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TAGRULE">
            <summary>
            Tagging Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TANPOINT">
            <summary>
            Tangent point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TAPER">
            <summary>
            Taper
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TAPROPERTY">
            <summary>
            Property table - A
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TASK">
            <summary>
            Task
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TASKLB">
            <summary>
            Task Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TATTA">
            <summary>
            Tail attachment point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TBPROPERTY">
            <summary>
            Property table - B
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TCASE">
            <summary>
            Case table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TCOMPONENT">
            <summary>
            Template piping component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TCPROPERTY">
            <summary>
            Property table - C
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TDENSITY">
            <summary>
            Material density table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TEAM">
            <summary>
            Team
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TEE">
            <summary>
            Tee
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TESTEXPRESSION">
            <summary>
            Test expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TEXTPRIMITIVE">
            <summary>
            Multi-line Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TEXPANSION">
            <summary>
            Expansion coefficient table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TEXT">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.THREEWAY">
            <summary>
            Threeway
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.THUMBN">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TKPARA">
            <summary>
            Task Parameter
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TMAREA">
            <summary>
            Template area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TMLI">
            <summary>
            Team list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TMPLATE">
            <summary>
            Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TMRPSET">
            <summary>
            Repeat set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TMRRELEMENT">
            <summary>
            Rule repeat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TEAMWORLD">
            <summary>
            Team World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TNASPE">
            <summary>
            Task Namespace
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TOPEXT">
            <summary>
            Top Extension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TOPICD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TP">
            <summary>
            Test point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TPOISSON">
            <summary>
            Poissons ratio table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TPWLD">
            <summary>
            Template world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRACING">
            <summary>
            Tracing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRANCILLARY">
            <summary>
            Trancillary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRAP">
            <summary>
            Trap
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRDAY">
            <summary>
            Transaction day
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TREAD">
            <summary>
            Tread
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TREADSET">
            <summary>
            Tread Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRFAILURE">
            <summary>
            Transaction failure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRFLST">
            <summary>
            Transaction failure list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRINCOMMAND">
            <summary>
            Transaction input command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRLB">
            <summary>
            Tagging rule library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRLOCATION">
            <summary>
            Transaction location
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRMESSAGE">
            <summary>
            Transaction message
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRMLST">
            <summary>
            Transaction message list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRMONTH">
            <summary>
            Transaction month
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRMSGW">
            <summary>
            Transaction message world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNB">
            <summary>
            Turnbuckle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCC">
            <summary>
            Terrain cell collection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCEL">
            <summary>
            Terrain cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCLC">
            <summary>
            Terrain contour line collection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCLG">
            <summary>
            Group of contour lines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCLS">
            <summary>
            Set of contour lines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCUC">
            <summary>
            Curve collection within a cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.Trncurve">
            <summary>
            Terrain curve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNDEF">
            <summary>
            Terrain definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNMOD">
            <summary>
            Terrain model
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNN">
            <summary>
            Trunnion
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNPRI">
            <summary>
            Terrain primitive holder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNRR">
            <summary>
            Terrain restriction rectangle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNS">
            <summary>
            Transformation piece
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNSLD">
            <summary>
            Terrain solid primitive holder
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNSUR">
            <summary>
            Terrain surface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNWLD">
            <summary>
            Terrain model world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TROPERATION">
            <summary>
            Transaction operations
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TROUCOMMAND">
            <summary>
            Transaction foreign command
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRREDUCER">
            <summary>
            Trunnion Reducer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRSLST">
            <summary>
            Transaction success list
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRST">
            <summary>
            Tagging Ruleset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRSUCCESS">
            <summary>
            Transaction success
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRUNNION">
            <summary>
            TRUNNION: Pipe support component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRUSER">
            <summary>
            Transaction user
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRYEAR">
            <summary>
            Transaction year
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TSTDTL">
            <summary>
            Datal test
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TSTRESS">
            <summary>
            Allowable stress table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TTFONT">
            <summary>
            Truetype Font file details
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TTSKEL">
            <summary>
            Task Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TTSKGP">
            <summary>
            Task Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TUBDATA">
            <summary>
            Tube properties
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TUBE">
            <summary>
            Tube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TUBING">
            <summary>
            Tubing
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TWFLEL">
            <summary>
            Workflow Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TWFLGP">
            <summary>
            Workflow Group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TWRSTL">
            <summary>
            Tower Steel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TXSTYL">
            <summary>
            Text Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TXTM">
            <summary>
            Text Label Template
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TYOUNG">
            <summary>
            Youngs Modulus table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TOOSTR">
            <summary>
            Nesting start
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TOOSTS">
            <summary>
            Nesting starts world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TRNCUS">
            <summary>
            Curve set within a cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TAFCCO">
            <summary>
            Task Flow Chart Connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TAFCEL">
            <summary>
            Task Flow Chart Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TAFLCH">
            <summary>
            Task Flow Chart
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TASDEF">
            <summary>
            Task Definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TMSCFG">
            <summary>
            TMS Configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.TYPITE">
            <summary>
            Engineering Typical Item
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UBOLT">
            <summary>
            U Bolt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDA">
            <summary>
            User defined attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDEFINITION">
            <summary>
            Units definition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDET">
            <summary>
            User defined element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDETGR">
            <summary>
            User defined element group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDETWL">
            <summary>
            User defined element world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDLOV">
            <summary>
            User defined list of values
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDTCLA">
            <summary>
            Engineering types classification
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDTELE">
            <summary>
            User defined type group filter element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDTG">
            <summary>
            User defined type group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDTINT">
            <summary>
            Engineering type interface
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDTW">
            <summary>
            User defined type group world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UGROUP">
            <summary>
            User defined attribute group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ULIMIT">
            <summary>
            User defined limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ULOGID">
            <summary>
            User login ID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNION">
            <summary>
            Union
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNIT">
            <summary>
            Units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNKNOWN">
            <summary>
            Unknown type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNTST">
            <summary>
            Unit set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNTSTGROUP">
            <summary>
            Unit sets group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNTSTUNIT">
            <summary>
            Unit Set Unit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UNTSTWORLD">
            <summary>
            Unit sets world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.USDA">
            <summary>
            User system defined attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.USECTION">
            <summary>
            Units section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.USER">
            <summary>
            User
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.USLI">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.USERWORLD">
            <summary>
            User World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UVALID">
            <summary>
            User defined valid value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UWRLD">
            <summary>
            User defined attribute world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UPANEL">
            <summary>
            Hull panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UCONFI">
            <summary>
            Used settings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UMACHI">
            <summary>
            Used machine settings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.UDYLIM">
            <summary>
            User defined dynamic limit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VALVE">
            <summary>
            Valve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VENT">
            <summary>
            Vent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VERCON">
            <summary>
            Version Control Configuration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VERTEX">
            <summary>
            Vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VFWAY">
            <summary>
            Four way valve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VIEW">
            <summary>
            View
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VLAYER">
            <summary>
            Visual Layer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VLYSET">
            <summary>
            Visual Layer Set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VMCOMP">
            <summary>
            VM Component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VMSUBV">
            <summary>
            VM Subview
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VNOTE">
            <summary>
            View Note
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VOLMODEL">
            <summary>
            Volume model
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VRTX">
            <summary>
            Vertex
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VSECTION">
            <summary>
            View Section
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VSINLB">
            <summary>
            View Section Indicator Template Library
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VSPR">
            <summary>
            Variable effort spring hanger
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VTWAY">
            <summary>
            Three way valve
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VVALUE">
            <summary>
            Valid value
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.VWSTYL">
            <summary>
            View Style
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WALL">
            <summary>
            Wall
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WASH">
            <summary>
            Washer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WELD">
            <summary>
            Weld
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WINDOW">
            <summary>
            Window
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLCOMPONENTS">
            <summary>
            Wall components
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLDGRP">
            <summary>
            Weld group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLFEAT">
            <summary>
            Wall Features
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLFITTING">
            <summary>
            Wall fittings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLJNTS">
            <summary>
            Wall joints
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLJOIN">
            <summary>
            Wall joint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLOPEN">
            <summary>
            Wall openings
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLPANEL">
            <summary>
            Wall panel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLPROF">
            <summary>
            Wall profile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WLPRSE">
            <summary>
            Wall profile set
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WORLD">
            <summary>
            World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WPAD">
            <summary>
            Wear pad
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WPOS">
            <summary>
            Point given as 3D Position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WTHELE">
            <summary>
            Wall thickness element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.WTHTAB">
            <summary>
            Wall thickness table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XCELL">
            <summary>
            External geometry cell
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XCELS">
            <summary>
            External geometry small cube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XCLTN">
            <summary>
            External geometry large cube
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XGEOMETRY">
            <summary>
            External geometry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XPIFLD">
            <summary>
            Distributed Attribute group
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XPITEM">
            <summary>
            Distributed Attribute base element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.XPIWLD">
            <summary>
            Distributed Attributes world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbElementTypeInstance.ZONE">
            <summary>
            Zone
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbChangesEventHandler">
            <summary>
            Changes event handler
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbClaimEventHandler">
            <summary>
            Claim event handler
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbGetWorkEventHandler">
            <summary>
            GetWork event handler
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbUndoEventHandler">
            <summary>
            Undo event handler
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbEventHandler">
            <summary>
            General event handler
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeField">
            <summary>
            List of Attribute component field identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.NAME">
            <summary>
            Attribute name.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DESTEX">
            <summary>
            Textual description.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TYPE">
            <summary>
            Type of attribute. e.g. int
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.SIZE">
            <summary>
            Maximum Size of attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.UNIT">
            <summary>
            Units for attribute, i.e. distance or bore or none
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.VISI">
            <summary>
            Visible or not
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.ITYP">
            <summary>
            Formatting type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DTLATT">
            <summary>
            attribute to be used in Datal instead of given one. AVEVA USE ONLY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DEFER">
            <summary>
            Datal-type output reference deferral. AVEVA USE ONLY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.ITSATT">
            <summary>
            DRAFT Intelligent Text System basic value. AVEVA USE ONLY.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.COORD">
            <summary>
            DRAFT Intelligent Text System coordinate. AVEVA USE ONLY.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.ITSEL">
            <summary>
            DRAFT Intelligent Text System navigation. AVEVA USE ONLY.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.QSET">
            <summary>
            If false then attribute may only be queried
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DTYP">
            <summary>
            Underlying Dabacon type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.CASC">
            <summary>
            True for attributes whose values are cascaded down when an element is created
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TUBE">
            <summary>
            Is attribute valid on TUBI
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.QTXT">
            <summary>
            Query text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.RPTX">
            <summary>
            Reporter text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.CATPAR">
            <summary>
            Catalogue parameter or not
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.QSUPPA">
            <summary>
            Suppress output
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.QUAL">
            <summary>
            Attribute has a qualifier
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.INVIS">
            <summary>
            Attribute is always invisible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DESRUL">
            <summary>
            True for a ref attribute that allows rules
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.LGSPLA">
            <summary>
            True if attribute for a design db is writable within spooler
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TKEYLN">
            <summary>
            Key length for an integer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TDATLN">
            <summary>
            Data length for an integer table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.CATRUL">
            <summary>
            true if attribute can be used in a catalogue rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TABLE">
            <summary>
            true if attribute is a table attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DEPEND">
            <summary>
            List of real attributes on which a pseudo attribute depends
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.CHANGE">
            <summary>
            Indicates 'change type' category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.CATEG">
            <summary>
            CATEGORY: Category of attribute for organization in documentation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DEFI">
            <summary>
            Definition: DDL or Pseudo.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.WDEFI">
            <summary>
            Definition for writing: DDL or Pseudo.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.SYNO">
            <summary>
            Synonym mapping.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.EQUIVA">
            <summary>
            EQUIVA: Attribute to be used when determining value of associated pseudo-attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TABATT">
            <summary>
            TABATT: Table attribute that provides permitted values when setting associated attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.PLCF">
            <summary>
            P-line cache change flag.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DFDP">
            <summary>
            Default precision (D.P.s)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TRUN">
            <summary>
            Truncation possible?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DCHC">
            <summary>
            DESIGN change code.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.COPY">
            <summary>
            Copy option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.PNAME">
            <summary>
            P-point or P-line specific.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.IDREF">
            <summary>
            ID reference required for pseudo attribute?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.EXPSIZ">
            <summary>
            Expected size of Splash element.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TBLTYP">
            <summary>
            Integer table type.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.PRTCTA">
            <summary>
            Attribute protected?
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.AVAIDB">
            <summary>
            AVAIDB: Hash codes of databases in which attribute is defined
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.DACCHK">
            <summary>
            DACCHK: Data access control checking status
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.ENUM">
            <summary>
            ENUM: Indicates an integer which is really an enumeration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.RULEDP">
            <summary>
            RULDEP: List of other attributes that affect the value of this attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.CONNEX">
            <summary>
            CONNEX: Whether attribute defines a connection
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.PSCODE">
            <summary>
            PSCODE:
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.MANUAL">
            <summary>
            Manual category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.TTIP">
            <summary>
            TTIP: True for a tooltip-able element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.BASLAT">
            <summary>
            BASLAT: Whether attribute restricted to Basic Latin characters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeField.MAGICVALUES">
            <summary>
            MAGICVALUES: valid magic value/message number pair integer array
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeSpecialField">
            <summary>
            Other attribute information which may be included in tabular output. The values of special
            fields
             may be derived from fields or other information on the output. Special fields must be
             supported by the GetAsString method, and can thus be used in Attribute Formatters. However,
             they cannot be used in most other places where a field may be.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeSpecialField.TYPESIZE">
            <summary>
            The type followed by the size in parenthesis if this is greater than 1, 'DOUBLE(3)'
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeSpecialField.HASHCODE">
            <summary>
            The hash code (as an integer)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeSpecialField.INTERNALNAME">
            <summary>
            The internal name of the attribute, i.e., the hash code unhashed. Note that every attribute
             will have an internal name, but invisible attributes may not have a NAME
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeSpecialField.CAPITALISEDNAME">
            <summary>
            The name, with first character upper case and the rest lower case
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeUnit">
            <summary>
            List of Unit identifiers available for Attribute values.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeUnit.NONE">
            <summary>
            No units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeUnit.DIST">
            <summary>
            Distance units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeUnit.BORE">
            <summary>
            Bore units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeUnit.PTYP">
            <summary>
            get units from PTYP attribute of DDAT/DATA
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbDimension">
            <summary>
            Double dimension.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.GENERIC">
            <summary>
            Generic dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.NONE">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.DIST">
            <summary>
            Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SURFACE">
            <summary>
            Area (depreciated)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.AREA">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.VOLUME">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SECONDMOFAREA">
            <summary>
            Secibd Moment of Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.BORE">
            <summary>
            Bore
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MASS">
            <summary>
            Mass
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.TEMP">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.EMF">
            <summary>
            Electromotive force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CURRENT">
            <summary>
            Current
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ANGLE">
            <summary>
            Angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PRES">
            <summary>
            Pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.FORCE">
            <summary>
            Force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.DENS">
            <summary>
            Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SFDENS">
            <summary>
            Surface density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CONTENT">
            <summary>
            Content
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.TGRAD">
            <summary>
            Temperature gradient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.LINDEN">
            <summary>
            Linear density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.WORD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.IMPEDA">
            <summary>
            Impedance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.UNIPAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MAND">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.TIME">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ENERGY">
            <summary>
            Energy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.POWER">
            <summary>
            Power
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.UMASS">
            <summary>
            Unit mass
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.HTGVAL">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CAPACITANCE">
            <summary>
            Capacitance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CHARGE">
            <summary>
            Charge
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CONDUCTANCE">
            <summary>
            Conductance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.VISCOSITY">
            <summary>
            Viscosity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.KINVISC">
            <summary>
            Kinematic viscosity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ELECFIELD">
            <summary>
            Electric field
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CONDUCTY">
            <summary>
            Conductivity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPECENTR">
            <summary>
            Specific energy, entropy, energy density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPECENERGY">
            <summary>
            Specific energy, entropy, energy density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ENERGYDENS">
            <summary>
            Specific energy, entropy, energy density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.FOULFACT">
            <summary>
            Fouling factor
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.FREQUENCY">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ENTROPY">
            <summary>
            Entropy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.HEATTRANS">
            <summary>
            Heat transfer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.INDUCTANCE">
            <summary>
            Inductance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.INERTIA">
            <summary>
            Inertia
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MAGFLUXDEN">
            <summary>
            Magnetic flux density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MAGFIELD">
            <summary>
            Magnetic field
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MAGFLUX">
            <summary>
            Magnetic flux
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MASSFLOW">
            <summary>
            Mass flow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.TORQUE">
            <summary>
            Torque
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ANGMOMTUM">
            <summary>
            Angular momentum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOMENTUM">
            <summary>
            Momentum
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PERMEABT">
            <summary>
            Permeability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PERMITTT">
            <summary>
            Permittivity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RADIATNDOSE">
            <summary>
            Radiation dose
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RADIOACTT">
            <summary>
            Radio activity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RESISTT">
            <summary>
            Resistivity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPECHEAT">
            <summary>
            Specific heat
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPEED">
            <summary>
            Speed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.STIFFNESS">
            <summary>
            Stiffness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ROTNSTIFF">
            <summary>
            Rotational stiffness
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.THERMCOND">
            <summary>
            Thermal conductivity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.THERMREST">
            <summary>
            Thermal resistance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.VOLFLOW">
            <summary>
            Volumetric flow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.AREALEN">
            <summary>
            Area Per Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CURRENCY">
            <summary>
            Currency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PRESG">
            <summary>
            GAUGE PRESSURE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PRESA">
            <summary>
            ABSOLUTE PRESSURE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ACCELERATION">
            <summary>
            Acceleration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ANGFREQ">
            <summary>
            Angular Frequency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SUB_QUAN">
            <summary>
            SubstanceQuantity
            K:DOM.SUB.QUAN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.LUMINOUSI">
            <summary>
            LuminousIntensity
            K:DOM.LUMINOUSI
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RATIO">
            <summary>
            RATIO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CONVERTIBLEPRESSURE">
            <summary>
            An enum constant representing the convertiblepressure option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.EQUIVALENCE">
            <summary>
            Equivalence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.EQUIVALENCEFLOW">
            <summary>
            Equivalence Flow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.EQUIVALENCE_PER_VOLUME">
            <summary>
            Equivalence per Volume.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ILLUMINANCE">
            <summary>
            Illuminance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.LUMINOUSFLUX">
            <summary>
            Luminous Flux
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLARFLOW">
            <summary>
            Molar Flow
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SOLIDANGLE">
            <summary>
            Solid angle
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CALORIFIC_VALUE_SUBSTANCE_QUANTITY">
            <summary>
            The calorific value (or energy value or heating value)
            energy/substance quantity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CALORIFIC_VALUE_VOLUME">
            <summary>
            The calorific value (or energy value or heating value)
            energy/volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SUBSTANCE_QUANTITY_PER_TIME_DIMENSION">
            <summary>
            Substance quantity per time dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_CONCENTRATION">
            <summary>
            Molar concentration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLALITY">
            <summary>
            Molality
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_VOLUME">
            <summary>
            Molar volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_REACTION_RATE_MASS">
            <summary>
            Molar reaction rate defined on a basis that is weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_REACTION_RATE_VOLUME">
            <summary>
            Molar reaction rate defined on a basis that is volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_REACTION_RATE_AREA">
            <summary>
            Molar reaction rate defined on a basis that is area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_MASS">
            <summary>
            Molar mass
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_PERMEABILITY">
            <summary>
            Molar permeability. Gas-transmission rate (GTR) according to ISO 15105-2:2003
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MOLAR_ENTROPY">
            <summary>
            Molar entropy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.VOLUME_PER_TIME_SUBSTANCE_QUANTITY">
            <summary>
            Volume per time substance quantity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MASS_PER_ENERGY">
            <summary>
            Mass per energy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RADIANCE">
            <summary>
            Radiance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RADIANT_INTENSITY">
            <summary>
            Radiant intensity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ACTUALPOWER">
            <summary>
            Actual power
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.EFFECTIVE_HEAT_CAPACITY">
            <summary>
            Effective Heat Capacity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CURRENT_DENSITY">
            <summary>
            Current Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ANGULAR_ACCELERATION">
            <summary>
            Angular Acceleration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ELECTRIC_CHARGE_DENSITY">
            <summary>
            Electric Charge Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.ELECTRIC_FLUX_DENSITY">
            <summary>
            Electric Flux Density
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MASS_FLUX">
            <summary>
            Mass Flux
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.HEAT_COEFFICIENT_AREA">
            <summary>
            Heat Coefficient Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.HEAT_FLUX_LINEAR">
            <summary>
            Heat Flux Linear
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.HEAT_OF_REACTION">
            <summary>
            Heat of Reaction
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.POWER_PER_VOLUME">
            <summary>
            Power per Volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PRESSURE_RATE">
            <summary>
            Pressure Rate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.INVERSE_PRESSURE">
            <summary>
            Inverse Pressure
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.INVERSE_TEMPERATURE">
            <summary>
            Inverse Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.THERMAL_EXPANSION_COEFFICIENT">
            <summary>
            Thermal Expansion Coefficient
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MASS_REACTION_RATE">
            <summary>
            Mass Reaction Rate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.MASS_PER_AREA">
            <summary>
            Mass per Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.POWER_PER_AREA">
            <summary>
            Power per Area
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PRESSURE_PER_DISTANCE">
            <summary>
            Pressure per Distance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PRESSURE_PER_TEMPERATURE">
            <summary>
            Pressure per Temperature
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SOLVENT_PERMEABILITY">
            <summary>
            Solvent Permeability
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPECIFIC_FUEL_CONSUMPTION_VOLUME">
            <summary>
            Specific Fuelel Consumption defined on a basis that is volume
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPECIFIC_RADIOACTIVITY">
            <summary>
            Specific Radioactivity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.RADIOACTIVITY_CONCENTRATION">
            <summary>
            Radioactivity Concentration
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.SPECIFIV_SURFACE_MASS">
            <summary>
            Specific surface mass
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.TEMPERATURE_RATE">
            <summary>
            Temperature rate
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.VOLUMETRIC_HEAT_TRASFER_COEFFICIENT">
            <summary>
            Volumetric heat transfer coefficient according to Handbook of Industrial Drying, Fourth Edition
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.FLOW_RATE_VOLUME_PER_RPM">
            <summary>
            FLOW_RATE_VOLUME_PER_RPM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.LUMINANCE">
            <summary>
            Luminance
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.PH">
            <summary>
            pH
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.REACTIVE_POWER">
            <summary>
            Reactive Power
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.CABLE_SIZE">
            <summary>
            Cable size
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDimension.NOISE">
            <summary>
            Noise
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeType">
            <summary>
            List of Attribute Type identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.INTEGER">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.DOUBLE">
            <summary>
            Floating-point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.BOOL">
            <summary>
            Boolean (True/False)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.STRING">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.ELEMENT">
            <summary>
            Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.WORD">
            <summary>
            Binary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.DIRECTION">
            <summary>
            Direction vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.POSITION">
            <summary>
            Position point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.ORIENTATION">
            <summary>
            Orientation matrix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.DATETIME">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.STRINGARRAY">
            <summary>
            String Array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeType.BLOB">
            <summary>
            Blob
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounField">
            <summary>
            List of Element component field identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DEFI">
            <summary>
            Real or pseudo
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.VISI">
            <summary>
            Visible or not
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.RPTX">
            <summary>
            REPORTER text.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.NAME">
            <summary>
            Element type name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.LGSPLN">
            <summary>
            element may be moved within spooler
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CHOL">
            <summary>
            gives the complement of a hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DBTP">
            <summary>
            DB types containing element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CSIG">
            <summary>
            Element is primary in terms of claiming
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.TOPF">
            <summary>
            Element is a top level element in the 3D graphics
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PRMF">
            <summary>
            True if a primitive
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.POPF">
            <summary>
            True if a point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.XTRF">
            <summary>
            true if an extrusion like element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FEWO">
            <summary>
            true if element exists at the world level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PIPC">
            <summary>
            true if a piping component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.HOLC">
            <summary>
            true if a hole
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CATC">
            <summary>
            true if a catalogue component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.HNGC">
            <summary>
            true if a hanger component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PSKC">
            <summary>
            Component can have a PSKEY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.GCODE">
            <summary>
            Draft graphical code
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PSOWNR">
            <summary>
            True if owner could be different from Dabacon owner
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PSNEXT">
            <summary>
            True if next element could be different from Dabacon next element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PSFRST">
            <summary>
            True if first member could be different from Dabacon first member element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PICK">
            <summary>
            True for a pickable element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.XPVISI">
            <summary>
            True if element is visible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.XFILE">
            <summary>
            Array of attributes that constitutes name references to external files
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.SECOND">
            <summary>
            Non-zero if element has a secondary hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.SECOLL">
            <summary>
            Non-zero to control collections on secondary hierarchies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FOLDER">
            <summary>
            List of types to create folders in the explorer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.LNODE">
            <summary>
            Indicates last node in Explorer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.VALIDC">
            <summary>
            Used to determine connections- AVEVA USE ONLY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DESTEX">
            <summary>
            Textual description.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CATEG">
            <summary>
            CATEGORY: Category of attribute for organization in documentation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.SYNO">
            <summary>
            Pointer to synonym; 0 if not a synonym
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.QMOD">
            <summary>
            QMOD: True if the user can modify the element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PRTCTN">
            <summary>
            True if design element is protected
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.COMP">
            <summary>
            DO NOT USE - REDUNDANT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.IMAP">
            <summary>
            Significance with respect to the spatial map
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CHANGE">
            <summary>
            CHANGE: Control for changing element type. Elements with the same value of CHANGE may have their types changed to one another
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CATGLE">
            <summary>
            CATGLE: Catalogue database geometry level
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CATDEP">
            <summary>
            CATDEP: Catalogue dependencies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DESDEP">
            <summary>
            DESDEP: Design dependencies
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.GRAPH">
            <summary>
            GRAPH: Relates to how the 3D Graphics is generated
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.GORP">
            <summary>
            True for an item in a geomset or negative geomset or plineset or pointset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.SIGNIF">
            <summary>
            SIGNIF: True for significant types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.ANCES">
            <summary>
            True for an element which is an ancestor of another element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CLWTHN">
            <summary>
            CLWTHN: True for element types that should, by default, be in the NOCHECK WITHIN list for CLASHER
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CLRSEC">
            <summary>
            CLRSEC: True for elements that should, by default, be included in the CLASH REPORT list for CLASHER
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.WLDORI">
            <summary>
            WLDORI: True for element types whose orientation is deemed to be with respect to the world
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.VOLDEF">
            <summary>
            VOLDEF: True for element types which will, by default, be included in volumetric queries
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.HULC">
            <summary>
            HULC: Hull component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DTXC">
            <summary>
            Detail text component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.COMC">
            <summary>
            ACOM-HCOM component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.EQUC">
            <summary>
            Equipment component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FRMC">
            <summary>
            Framework component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PFRC">
            <summary>
            Positioned framework component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FITC">
            <summary>
            Fitting component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.GMTC">
            <summary>
            2D Geomset component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.GMSC">
            <summary>
            Geomset component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DTSC">
            <summary>
            Dataset component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.NGMC">
            <summary>
            Negative geomset component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.JOIC">
            <summary>
            Joint component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PLNC">
            <summary>
            Plineset component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PRFC">
            <summary>
            Profile component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PTSC">
            <summary>
            Pointset component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.BUIC">
            <summary>
            Building component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.LNGDES">
            <summary>
            Long description of element type for documentation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.ATTDES">
            <summary>
            Description following attributes for documentation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DIAGRM">
            <summary>
            Diagram title for documentation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.ENDNOT">
            <summary>
            End note for documentation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DTLNAM">
            <summary>
            DTLNAM: Element has NAME derived from specified attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DRQFIL">
            <summary>
            DRQFIL: True for Elements which have Drawing files
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.DROFIL">
            <summary>
            DROFIL: True for Elements which own Drawing-file elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.MANUAL">
            <summary>
            MANUAL: Manual category
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.CABC">
            <summary>
            Cable component
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.PCOMAP">
            <summary>
            Project copy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FIELD_FABWR">
            <summary>
            Steel fabricator specific write access flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FIELD_BSTLWR">
            <summary>
            Bocad steel specific write access flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FIELD_MODWR">
            <summary>
            Multiple module list write access flag
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FIELD_CPDELM">
            <summary>
            Delete members when copying element flag.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FIELD_PNTSET">
            <summary>
            Draw pointset point flag.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounField.FIELD_PICOWN">
            <summary>
            Draw picture owner flag.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounSpecialField">
            <summary>
            Other DbElementType information which may be included in tabular output. The values of
            special fields
             may be derived from fields or other information on the output. Special fields must be
             supported by the GetAsString method, and can thus be used in DbElementTypeFormats. However,
             they cannot be used in most other places where a field may be.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.HASHCODE">
            <summary>
            The hash code as an integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.INTERNALNAME">
            <summary>
            The internal name, i.e., the hash code unhashed. Note that every DbElementType will have an
             internal name, but invisible attributes will not have a NAME
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.HARDTYPE">
            <summary>
            Hard type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.BASETYPE">
            <summary>
            Base type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.ASCENDANTTYPES">
            <summary>
            List of ascendant types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.SYSTEMATTRIBUTES">
            <summary>
            List of visible system attributes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.DESCENDANTTYPES">
            <summary>
            List of valid descendant types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.MEMBERTYPES">
            <summary>
            List of valid member types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.OWNERTYPES">
            <summary>
            List of valid owner types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.ISPSEUDO">
            <summary>
            Whether element type is pseudo
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.SHORTNAME">
            <summary>
            Shortname
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.ALLSYSTEMATTRIBUTES">
            <summary>
            List of all system attributes, including any that are not visible
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.CAPITALISEDNAME">
            <summary>
            Name, with first letter in upper case and rest in lower
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.SYSATTSANDDESC">
            <summary>
            List of visible system attributes together with their descriptions
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSpecialField.PRIMARYTYPE">
            <summary>
            String 'Primary Element' if and only if type is primary
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbRuleStatus">
            <summary>
            List of Rule Status identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbRuleStatus.STATIC">
            <summary>
            Static Rule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbRuleStatus.DYNAMIC">
            <summary>
            Dynamic Rule
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbUnits">
            <summary>
            List of dimension Unit identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.COMPOUND">
            <summary>
            Compound units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.NONE">
            <summary>
            No units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MM">
            <summary>
            Millimetre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.METRE">
            <summary>
            Metre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INCH">
            <summary>
            Inch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FT">
            <summary>
            Foot
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.NUMERIC">
            <summary>
            If unit is set but unknown, it cannot be 0, so fortran sets it to 8 and calls numeric
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GRAM">
            <summary>
            Gram
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KG">
            <summary>
            Kilogram
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.TONNE">
            <summary>
            Tonne
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LB">
            <summary>
            Pound
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LONGTON">
            <summary>
            Long tonne
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.SHORTTON">
            <summary>
            Short tonne
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CWT">
            <summary>
            Hundred weight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.OZ">
            <summary>
            Ounce
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CELSIUS">
            <summary>
            Celsius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DEGC">
            <summary>
            Celsius
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FAHR">
            <summary>
            Fahrenheit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DEGF">
            <summary>
            Fahrenheit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KELVIN">
            <summary>
            Kelvin
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DEGRANKINE">
            <summary>
            DegRankine
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DEGREE">
            <summary>
            Degree
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.RADIAN">
            <summary>
            Radian
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GRAD">
            <summary>
            Gradian
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ARCMIN">
            <summary>
            arc minute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ARCSEC">
            <summary>
            arc second
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BAR">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PASCAL">
            <summary>
            Pascal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ATM">
            <summary>
            Atmosphere
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PSI">
            <summary>
            Pounds per square inch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.TORR">
            <summary>
            Torr
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMHG">
            <summary>
            Millimetres mercury
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INHG">
            <summary>
            inches of mercury
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.NEWTON">
            <summary>
            Newton
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PDL">
            <summary>
            Poundal
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DYNE">
            <summary>
            Dyne
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KGF">
            <summary>
            Kilogram force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LBF">
            <summary>
            Pound force
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.VOLT">
            <summary>
            Volt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.AMP">
            <summary>
            Ampere
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.OHM">
            <summary>
            Ohm
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FINC">
            <summary>
            Inch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CM">
            <summary>
            Centimetre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MILE">
            <summary>
            Mile
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.YARD">
            <summary>
            Yard
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MICRON">
            <summary>
            Micron
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.THOU">
            <summary>
            Thou
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ANGSTROM">
            <summary>
            Angstrom
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KM">
            <summary>
            Kilometre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LITRE">
            <summary>
            Litre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GALIM">
            <summary>
            Imperial Gallon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GALUS">
            <summary>
            US Gallon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BBL">
            <summary>
            Oil Barrel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MBBL">
            <summary>
            Thousand Oil Barrel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMBBL">
            <summary>
            Million Oil Barrel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ACRE">
            <summary>
            Acre
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.HECTARE">
            <summary>
            Hectare
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.SECOND">
            <summary>
            Second
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MINUTE">
            <summary>
            Minute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.HOUR">
            <summary>
            Hour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DAY">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MONTH">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.WEEK">
            <summary>
            Week
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.YEAR">
            <summary>
            Year
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.JOULE">
            <summary>
            Joule
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KWH">
            <summary>
            Kilowatt hour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BTU">
            <summary>
            BTU
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CALORIE">
            <summary>
            Calorie
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CALORIEIT">
            <summary>
            International kilocalories
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BTUIT">
            <summary>
            International BTU
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KW">
            <summary>
            Kilowatt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.HP">
            <summary>
            Horse power
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.WATT">
            <summary>
            Watt
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FARAD">
            <summary>
            Farad
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.COULOMB">
            <summary>
            Coulomb
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.SIEMENS">
            <summary>
            Siemens
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MHO">
            <summary>
            MHO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.HERTZ">
            <summary>
            Hertz
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.RPM">
            <summary>
            RPM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.HENRY">
            <summary>
            Henry
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.TESLA">
            <summary>
            Tesla
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.WEBER">
            <summary>
            Weber
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.SIEVERT">
            <summary>
            Sievert
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.REM">
            <summary>
            Rem
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GRAY">
            <summary>
            Gray
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.RAD">
            <summary>
            Rad
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BEQUEREL">
            <summary>
            Bequerel
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CURIE">
            <summary>
            Curie
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KNOT">
            <summary>
            Knot
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GRAVITY">
            <summary>
            Force of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GFORCE">
            <summary>
            Force of gravity
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.POISE">
            <summary>
            Poise
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.STERLING">
            <summary>
            Sterling
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.USDOLLAR">
            <summary>
            US Dollar
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.EURO">
            <summary>
            Euro
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BARG">
            <summary>
            An enum constant representing the barg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PASCALG">
            <summary>
            An enum constant representing the pascalg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ATMG">
            <summary>
            An enum constant representing the atmg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PSIG">
            <summary>
            An enum constant representing the psig option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.TORRG">
            <summary>
            An enum constant representing the torrg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMHGG">
            <summary>
            An enum constant representing the mmhgg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INHGG">
            <summary>
            An enum constant representing the inhgg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.BARA">
            <summary>
            An enum constant representing the bara option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PASCALA">
            <summary>
            An enum constant representing the pascala option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ATMA">
            <summary>
            An enum constant representing the atma option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PSIA">
            <summary>
            An enum constant representing the psia option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.TORRA">
            <summary>
            An enum constant representing the torra option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMHGA">
            <summary>
            An enum constant representing the mmhga option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INHGA">
            <summary>
            An enum constant representing the inhga option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.RATIO">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PERCENT">
            <summary>
            Percent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PPM">
            <summary>
            PPM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PPB">
            <summary>
            PPB
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LKG">
            <summary>
            An enum constant representing the lkg option.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.EQ">
            <summary>
            Unit of equivalence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LUX">
            <summary>
            Lux
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LUMEN">
            <summary>
            Lumen
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.STANDARDCUBICFOOT">
            <summary>
            Standard cubic foot
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.STANDARDCUBICMETERS">
            <summary>
            Standard cubic meters
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.STERADIAN">
            <summary>
            Steradian
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PH">
            <summary>
            pH
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.LONG_CWT">
            <summary>
            Long hundredweight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.SHORT_CWT">
            <summary>
            Short hundredweight
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.TROY_OUNCE">
            <summary>
            Troy ounce
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GRAIN">
            <summary>
            Grain
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.STONE">
            <summary>
            Stone
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CHU">
            <summary>
            Celsius heat unit
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CHU15">
            <summary>
            Celsius heat unit 15C
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.GRT">
            <summary>
            Gross register tonnage
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.QRT_IMP">
            <summary>
            Imperial quart
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.QRT_US">
            <summary>
            United States liquid quart
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.QRT_DRY_US">
            <summary>
            United States dry quart
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PINT_IMP">
            <summary>
            Imperial pint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PINT_US">
            <summary>
            United States liquid pint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.PINT_DRY_US">
            <summary>
            United States dry pint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FLOZ_IMP">
            <summary>
            Imperial fluid ounce
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FLOZ_US">
            <summary>
            US customary fluid ounce
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FLOZ_DRY_US">
            <summary>
            Dry galon
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.OSI">
            <summary>
            Ounce(s) per square inch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.OSIA">
            <summary>
            Absolute ounce(s) per square inch
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INHG_60F">
            <summary>
            inHg (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMHG_60F">
            <summary>
            mmHg (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INH2O_60F">
            <summary>
            inH2O (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INH2O_4C">
            <summary>
            inH2O (4C)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FTH2O_60F">
            <summary>
            ftH2O (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FTH2O_4C">
            <summary>
            ftH2O (4C)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMH2O_60F">
            <summary>
            mmH2O (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMH2O_4C">
            <summary>
            mmH2O (4C)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INHGA_60F">
            <summary>
            Absolute inHg (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMHGA_60F">
            <summary>
            Absolute mmHg (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INH2OA_60F">
            <summary>
            Absolute inH2O (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.INH2OA_4C">
            <summary>
            Absolute inH2O (4C)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FTH2OA_60F">
            <summary>
            Absolute ftH2O (60F)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FTH2OA_4C">
            <summary>
            Absolute ftH2O (4C)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.RPS">
            <summary>
            Revolution per second
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.RPH">
            <summary>
            Revolutions per hour
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.AT">
            <summary>
            Technical atmosphere
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.ATA">
            <summary>
            Absolute technical atmosphere
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.MMSCFD">
            <summary>
            Mega Standard Cubic Feet Per Day
            </summary>       
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.APL">
            <summary>
            Area Per Length
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.VAREAC">
            <summary>
            Reactive Power
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CIRMIL">
            <summary>
            cmil
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.KCMIL">
            <summary>
            kcmil/AWG
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.CIRMMS">
            <summary>
            circular mm squared
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FQRPM">
            <summary>
            rpm frequency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FQRPS">
            <summary>
            rps frequency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.FQRPH">
            <summary>
            rph frequency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.AFHZ">
            <summary>
            hertz angular frequency
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUnits.DBA">
            <summary>
            DecibelA
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbWriteMode">
            <summary>
            List of Database write-mode identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbWriteMode.None">
            <summary>
            Unspecified mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbWriteMode.Read">
            <summary>
            Read mode
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbWriteMode.Write">
            <summary>
            Write mode
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbExpressionType">
            <summary>
            List of Expression Type identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.LOGICAL">
            <summary>
            True/False
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.REAL">
            <summary>
            Floating-point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.TEXT">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.ELEMENT">
            <summary>
            Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.POSITION">
            <summary>
            Position point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.DIRECTION">
            <summary>
            Direction vector
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.ORIENTATION">
            <summary>
            Orientation matrix
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.VARIABLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.REALARRAY">
            <summary>
            Array of floating-point
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.LOGICALARRAY">
            <summary>
            Array of True/False
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.ELEMENTARRAY">
            <summary>
            Array of Element
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.INTEGERARRAY">
            <summary>
            Array of integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.ATTNAME">
            <summary>
            Attribute Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.NOUNNAME">
            <summary>
            Noun Name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbExpressionType.DATETIME">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbParameterType">
            <summary>
            List of Parameter Type identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbParameterType.WORD">
            <summary>
            Binary
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbParameterType.NUMBER">
            <summary>
            Numeric
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbFieldType">
            <summary>
            List of attribute and noun field types.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.LOGICAL">
            <summary>
            Logical
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.REAL">
            <summary>
            REAL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.INTEGER">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.TEXT">
            <summary>
            TEXT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.HASH">
            <summary>
            HASH
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.LOGICALARRAY">
            <summary>
            LOGICAL ARRAY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.REALARRAY">
            <summary>
            REAL ARRAY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.INTEGERARRAY">
            <summary>
            INTEGER ARRAY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.TEXTARRAY">
            <summary>
            TEXT ARRAY
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFieldType.HASHARRAY">
            <summary>
            HASH ARRAY
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeDefinition">
            <summary>
            Attribute definitions, DDL or Pseudo
             * Mirrors the Fortran constants K:ATTR.DEF.x
             * Enumerates possible values of the DEFI and WDEFI fields for attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeDefinition.DDL">
            <summary>
            DDL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeDefinition.PSEUDO">
            <summary>
            Pseudo
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeDefinition.DDLorPSEUDO">
            <summary>
            DDL or Pseudo
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeIntrepidQueryType">
            <summary>
            List of Intrepid Query Types
             * Enumerates possible values of the ITYP field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.INTEGER">
            <summary>
            Integer (and int arrays)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.REALS">
            <summary>
            Real (and real arrays)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.REFERENCE">
            <summary>
            Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.MEMBERLIST">
            <summary>
            Member List
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.LOGICAL">
            <summary>
            Logical (and logical arrays)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.REFARRAY">
            <summary>
            Reference array
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.DATE">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.TEXTorEXPRESSION">
            <summary>
            Text or expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PSEUDOTEXT">
            <summary>
            Pseudo text (no quotes)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.TEXT">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.POSITION">
            <summary>
            Position attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.DIRECTION">
            <summary>
            Direction attribute in ENU format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.ORIENTATION">
            <summary>
            Orientation
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PARAMETERS">
            <summary>
            Parameters (hashed word/value mixture)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PPOINT">
            <summary>
            Ppoint info
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PTSETPARAMETERS">
            <summary>
            Integer array - ptset parameters (axis)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PTSPOINTS">
            <summary>
            Integer array = PTS points for lines
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.INTEGERCODE">
            <summary>
            Integer - integer code number - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.GAPSATTRIBUTES">
            <summary>
            Real array - gaps attributes - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.ENULIMITATTRIBUTES">
            <summary>
            Real array = ENU limit attributes - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.REALCODEDATTRIBUTES">
            <summary>
            Real - real coded attributes - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PACKEDINTEGER">
            <summary>
            Integer - packed integer attribute - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.VIEWPOSITION">
            <summary>
            Real array -- View position attribute - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.SPECIALVALUE">
            <summary>
            integer, real array, real - attribute with a special value - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PLDI">
            <summary>
            PLDI - angle if 1 value, direction if 3
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.LOGICALONOFF">
            <summary>
            Logical - logical attribute set by ON/OFF
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PACKEDRELEASES">
            <summary>
            Packed releases (Structural attribute)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.SELECTIONCRITERIA">
            <summary>
            Selection criteria
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.RATIOATTRIBUTE">
            <summary>
            Real array - ratio attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.DIRECTIONXYZ">
            <summary>
            Real array - direction in XYZ format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.REFASREF">
            <summary>
            Single ref output as a ref
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.HASHEDWORDARRAY">
            <summary>
            Hashed word array including UDAs
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.XYLIMITATTRIBUTES">
            <summary>
            Real array = XY limit attributes - DRAFT only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.IDREFPLUSPPOINT">
            <summary>
            Integer arrays as ID refs + ppoint
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.ITMTBL">
            <summary>
            Integer array ITMTBL as bolts or add items for ID name
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.AWDOWN">
            <summary>
            Integer array AWDOWN as ID name weld int.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.PARTNUMBER">
            <summary>
            Part-number for %SPLTBL attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.ROUTERRULEEXPRESSION">
            <summary>
            Router rules expressions (integer array)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.REALBLEN">
            <summary>
            Real array = BLEN format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntrepidQueryType.HASHEDATTRIBUTESNOUNS">
            <summary>
            Hash word array of attributes and nouns
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeChangeCode">
            <summary>
            List of Design change codes
             * Mirrors the Fortran constants K:CHANGE.x
             * Enumerates possible values of the DCHC field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeChangeCode.NONE">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeChangeCode.HEAD">
            <summary>
            Head
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeChangeCode.TAIL">
            <summary>
            Tail
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeChangeCode.TXFM">
            <summary>
            TXFM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeChangeCode.REDRAW">
            <summary>
            Redraw
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributePrecisionCode">
            <summary>
            List of default precision codes
             * Enumerates possible values of the DFDP field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.E6FORMAT">
            <summary>
            E6 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.F6FORMAT">
            <summary>
            F6 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G0FORMAT">
            <summary>
            G0 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G1FORMAT">
            <summary>
            G1 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G2FORMAT">
            <summary>
            G2 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G3FORMAT">
            <summary>
            G3 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G4FORMAT">
            <summary>
            G4 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G5FORMAT">
            <summary>
            G5 Format
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePrecisionCode.G6FORMAT">
            <summary>
            G6 Format
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeCopyCode">
            <summary>
            List of copy codes
             * Mirrors the Fortran constants K:ATTR.COPY.x
             * Enumerates possible values of the COPY field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.ALWAYS">
            <summary>
            Always copy (K:ATTR.COPY)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.NOLIKE">
            <summary>
            NOLIKE - do not copy in COPY LIKE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.NO">
            <summary>
            NO - Never copy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.CONNECTION">
            <summary>
            CONNECTION - go via DT table
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.SPECIAL">
            <summary>
            Specials
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.ATTS">
            <summary>
            ATTS - do not copy in COPY ATT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeCopyCode.LNAM">
            <summary>
            LNAM - refs for local names (templates) - go via DT table
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeQualifier">
            <summary>
            List of qualifiers
             * Mirrors the Fortran constants K:ATTR.QUAL.x
             * Enumerates possible values of the QUAL field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.NUMBER">
            <summary>
            NUMBER - Numeric qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.TEXT">
            <summary>
            TEXT - Text (or word) qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.ATTR">
            <summary>
            ATTR - Attribute qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.NOUN">
            <summary>
            NOUN - Noun qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.ID">
            <summary>
            ID = Element qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.LOG">
            <summary>
            LOG - Logical qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.POS">
            <summary>
            POS - Position qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.DIR">
            <summary>
            DIR - Direction qualifier allowed
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeQualifier.ORI">
            <summary>
            ORI - Orientation qualifier allowed
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributeIntTableType">
            <summary>
            Integer Table Types
             * Enumerates possible values of the TBLTYP field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntTableType.OTHER">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntTableType.REFERENCE">
            <summary>
            Reference
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntTableType.REFTYPE">
            <summary>
            Ref and Type
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributeIntTableType.REFTYPEPPOINT">
            <summary>
            Ref, Type and Ppoint
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbAttributePseudoCodeLocation">
            <summary>
            Code locations
             * Mirrors the Fortran constants K:ATTR.PSEUDO.x
             * Enumerates possible values of the PSCODE field of attributes.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePseudoCodeLocation.Fortran">
            <summary>
            Fortran
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePseudoCodeLocation.CPLUSPLUS">
            <summary>
            C++
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePseudoCodeLocation.CSharp">
            <summary>
            CSharp
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbAttributePseudoCodeLocation.PML">
            <summary>
            PML
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounDefinition">
            <summary>
            Noun definitions, DDL or Pseudo
             * Mirrors the Fortran constants K:NOUN.DEF.x
             * Enumerates possible values of the DEFI field for nouns.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDefinition.DDL">
            <summary>
            DDL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDefinition.PSEUDO">
            <summary>
            Pseudo
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDefinition.DDLorPSEUDO">
            <summary>
            DDL or Pseudo
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounSecondaryHier">
            <summary>
            Noun secondary hierarchy
             * Enumerates possible values of the SECOND field for nouns.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSecondaryHier.NO">
            <summary>
            NO
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSecondaryHier.YES">
            <summary>
            YES = element has a secondary hierarchy
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounSecondaryHier.DESCENDENT">
            <summary>
            DESCENDENT = should be scanned for elements with a secondary list
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounMap">
            <summary>
            Significance with respect to spatial map
             * Mirrors the Fortran constants K:MAP.x
             * Enumerates possible values of the IMAP field for nouns.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.IGNORE">
            <summary>
            IGNORE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.MAPPED">
            <summary>
            MAPPED - Mapped items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.SUPERMAP">
            <summary>
            SUPERMAP - Above mapped items
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.SUBMAP">
            <summary>
            SUBMAP - below mapped items, but still having geometry/position
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.MAPPEDSUPERMAP">
            <summary>
            MAPPEDSUPERMAP - both mapped and above map elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.MAPPEDMEM">
            <summary>
            MAPPEDMEM - Mapped including member sub-map elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.MAPPEDMEMSUPERMAP">
            <summary>
            MAPPEDMEMSUPERMAP - both mapped includingmembers, and above map elements
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.POSMAPPED">
            <summary>
            POSMAPPED = possibly mapped
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounMap.SUBSUPERMAP">
            <summary>
            SUBSUPERMAP = sub and super-map type
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounClaimSignificance">
            <summary>
            Claim Significance
             * Mirrors the Fortran constants K:CLAIM.x
             * Enumerates possible values of the CSIG field for nouns.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounClaimSignificance.NOTSIGNIFICANT">
            <summary>
            NOTSIGNIFICANT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounClaimSignificance.SIGNIFICANT">
            <summary>
            SIGNIFICANT
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounGraphics">
            <summary>
            Noun graphics
             * Mirrors the Fortran constants K:GRAPHICS.x
             * Enumerates possible values of the GRAPH field for nouns.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounGraphics.IGNORE">
            <summary>
            IGNORE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounGraphics.ABOVE">
            <summary>
            ABOVE
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounValidC">
            <summary>
            Validity of querying connections
             * Enumerates possible values of the VALIDC field for nouns.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounValidC.INVALID">
            <summary>
            INVALID
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounValidC.ELEMENT">
            <summary>
            ELEMENT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounValidC.ELEMENTDESCENDANTS">
            <summary>
            ELEMENT + DESCENDANTS
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounComponentFlag">
            <summary>
            Component flag
             * Mirrors the Fortran constants K:NOUN.COMP.x
             * Enumerates possible values of component integer fields for nouns:
                HULC, PIPC, HOLC, CATC, DTXC, COMC, EQUC, FRMC, PFRC, FITC, GMTC, GMSC, DTSC, NGMC, HNGC,
                JOIC, PLNC, PRFC, PTSC, PSKC, BUIC, CABC.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounComponentFlag.UNSET">
            <summary>
            Unset
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounComponentFlag.SET">
            <summary>
            SET
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounPsOwnr">
            <summary>
            PSOwnr
             * Mirrors the Fortran constants K:PSOWNR.x
             * Enumerates possible values of PSOWNR field for nouns:
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsOwnr.SAME">
            <summary>
            SAME
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsOwnr.TUBI">
            <summary>
            TUBI
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsOwnr.WORLD">
            <summary>
            WORLD
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounPsNext">
            <summary>
            PSNext
             * Mirrors the Fortran constants K:PSNEXT.x
             * Enumerates possible values of PSNEXT field for nouns:
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsNext.SAME">
            <summary>
            SAME
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsNext.TUBI">
            <summary>
            TUBI
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsNext.COMP">
            <summary>
            COMP
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsNext.WORLD">
            <summary>
            WORLD
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounPsFrst">
            <summary>
            PSFrst
             * Mirrors the Fortran constants K:PSFRST.x
             * Enumerates possible values of PSFRST field for nouns:
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsFrst.SAME">
            <summary>
            SAME
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsFrst.BRAN">
            <summary>
            BRAN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsFrst.TUBI">
            <summary>
            TUBI
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounPsFrst.WORLD">
            <summary>
            WORLD
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounDraftGraphicalCode">
            <summary>
            PSFrst
             * Mirrors the Fortran constants K:GCODE.x
             * Enumerates possible values of GCODE field for nouns:
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.NONE">
            <summary>
            NONE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.SHEET">
            <summary>
            SHEET
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.VIEW">
            <summary>
            VIEW
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.LAYER">
            <summary>
            LAYER
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.OLAYER">
            <summary>
            OLAYER
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.TEMNOTE">
            <summary>
            TEMNOTE
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.GEN">
            <summary>
            GEN
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.DIM">
            <summary>
            DIM
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.DIMPT">
            <summary>
            DIMPT
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounDraftGraphicalCode.RADIAL">
            <summary>
            RADIAL
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbProjectType">
            <summary>
            List of Project Type identifiers.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectType.PLANT">
            <summary>
            Plant project
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectType.MARINE">
            <summary>
            Marine project
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbProjectLength">
            <summary>
            Project length parameters.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJCODE_MAXCHARS">
            <summary>
            Max length of Project Code - characters
            Currently 3 ASCII letters only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJCODE_MAXBYTES">
            <summary>
            Max length of Project Code - bytes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJID_MAXCHARS">
            <summary>
            Max length of Project id - characters
            Currently ASCII alpha-numeric only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJID_MAXBYTES">
            <summary>
            Max length of Project id - bytes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJNUM_MAXCHARS">
            <summary>
            Max length of Project Number - characters
            Currently ASCII alpha-numeric only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJNUM_MAXBYTES">
            <summary>
            Max length of Project Number - bytes
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJLOCID_MAXCHARS">
            <summary>
            Max length of Project LOCID - characters
            Currently ASCII alpha-numeric only
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbProjectLength.PROJLOCID_MAXBYTES">
            <summary>
            Max length of Project LOCID - bytes
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbNounManual">
            <summary>
            Noun Manual Categories
             NB: This must mirror the K:NOUN.MANUAL constants in noun_type.mcr
                 Underscores in names will be replaced by space before presentation in the manual.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Unclassified">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Ignore">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Administrative">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Equipment">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Primitive">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Primitive_Hole">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Reference">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Imported_Models">
            <summary>
            K:NOUN.MANUAL.IMPORT for Models imported via the Import World
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Structural">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Stress_Analysis">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Piping_Major_Items">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Hanger_Component">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Piping_Component">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.HVAC_Component">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Router">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Pipe_Piece">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Piping_Fabrication">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Area">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Group">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Assembly">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Surface_Treatment">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Link">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Association">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Dataset">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Point_Set">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Template">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Grid">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Laser_Modelling">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.System">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Accommodation">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Ladder">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Stair">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_Piping">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_HVAC">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_Piping_and_HVAC">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_Piping_Component">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_HVAC_Component">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_Electrical">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_Equipment">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Schematic_Design_Link">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Hull_General">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Hull_Planar">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Hull_Curved">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Hull_Manufacturing">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Specification">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Unit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Primitive">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Hole">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Bolt">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Surface_Treatment">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Ppoint">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_General">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Bore_Table">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Part">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Catalogue_Structural">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Cabling">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_General">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Reporting">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Automatic_Drawing_Production">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Labelling">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Dimensioning">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_2D_Drafting">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Symbol">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Drafting_Pointset">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Drawing_and_Sheet">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_View">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Drawing_Layer_or_Note">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Drawing_Library">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Style_Definition">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Plane_Definition">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Representation_Definition">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_IDList_Definition">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Draft_Template_Library">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Structural_Detailing">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbNounManual.Steel_Fabricator_Task">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aveva.Core.Database.FlexibleExplorerSortingType">
            <summary>
            Possible sorting types (values of PBSSRT attribute)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.Parent">
            <summary>
            Use same sorting as parent
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.Default">
            <summary>
            Use default sorting from PBSTPL
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.Natural">
            <summary>
            Natural Alpha / Numeric
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.Sequence">
            <summary>
            Sequence
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerSortingType.ForcedSequenceByType">
            <summary>
            Forced Sequence By Type
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.FlexibleExplorerFunctionType">
            <summary>
            Possible function types (values of PBSFTY attribute)
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.PMLExpression">
            <summary>
            PML expression
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.PMLFunction">
            <summary>
            PML function
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.ExternalMethod">
            <summary>
            External method
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.StaticText">
            <summary>
            Static text
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.Attribute">
            <summary>
            Attribute
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.FlexibleExplorerFunctionType.OwnersAttribute">
            <summary>
            Use owners attribute
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.MDB">
            <summary>
            Methods to do operations on an MDB. e.g. Savework, getwork.
            The MDB is accessed via the currentMDB N.B. most methods do not return anything useful until the MDB is opened.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.MDB.CurrentMDB">
            <summary>
            Get hold of the current MDB.
            This is the only way to get at an MDB object.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDB.RetrieveErrors">
            <summary>
            Retrieve errors after a failed operation.
            i.e. where the method returns false.
            Returns NULL if there were no errors.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDB.RetrieveWarnings">
            <summary>
            Retrieve warnings
            Returns an empty array if no warnings.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Open(Aveva.Core.Database.MDBSetup)">
            <summary>
            Open MDB.
            </summary>
            <param name="setup"></param>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Open(Aveva.Core.Database.MDBSetup,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Open MDB.
            </summary>
            <param name="setup">MDBSetUp object defing MDB</param>
            <param name="error">Error object if open fails</param>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Close">
            <summary>
            Close MDB.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDB.CloseMDB">
            <summary>
            Close MDB.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDB.DefaultType">
            <summary>
            Retrieve the default DB type. e.g. DESI, CATA etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetDBArray">
            <summary>
            List of DBs in MDB.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetDBArray(Aveva.Core.Database.DbType)">
            <summary>
            List of DBs in MDB of given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetDBArray(Aveva.Core.Database.DbAttribute)">
            <summary>
            List of DBs in MDB of where a reftable "type" have count > 0.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetDB(System.Int32)">
            <summary>
            Find the DB of a given number.
            </summary>
            <param name="dbNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetFirstDB(Aveva.Core.Database.DbType)">
            <summary>
            Get First DB of given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetLastDB(Aveva.Core.Database.DbType)">
            <summary>
            Get Last DB of given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetNextDB(Aveva.Core.Database.Db,Aveva.Core.Database.DbType)">
            <summary>
            Get Next DB of given type.
            </summary>
            <param name="database"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetNextDB(Aveva.Core.Database.Db)">
            <summary>
            Get next DB of the same type.
            </summary>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetPreviousDB(Aveva.Core.Database.Db,Aveva.Core.Database.DbType)">
            <summary>
            Get Previous DB of given type.
            </summary>
            <param name="database"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetPreviousDB(Aveva.Core.Database.Db)">
            <summary>
            Get previous DB of the same type.
            </summary>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetScratchDB(Aveva.Core.Database.DbType)">
            <summary>
            Get scratch DB from MDB.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetScratchDBExternal(Aveva.Core.Database.DbType)">
            <summary>
            Get external scratch DB, not in MDB.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.WriteMode(Aveva.Core.Database.DbType)">
            <summary>
            Get the write mode for DBs of given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetFirstWorld(Aveva.Core.Database.DbType)">
            <summary>
            Get First world on given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindElements(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Return all elements where given attribute matches given string key.
            </summary>
            <param name="type"></param>
            <param name="att"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindElements(Aveva.Core.Database.DbType,System.String)">
            <summary>
            Return all elements where name matches given string key.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindElement(Aveva.Core.Database.DbType,System.String)">
            <summary>
            Return the first element where name matches given string key.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindOtherElement(Aveva.Core.Database.DbType,System.String)">
            <summary>
            Return the first element where name matches given string key, searching only DBs of types other than a given one.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindElement(System.String)">
            <summary>
            Return the first element where name matches given string key, all DBs.
            </summary>
            <param name="name">Name of element to find</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindElements(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,System.Int32[])">
            <summary>
            Return all elements where name matches given int key.
            </summary>
            <param name="type"></param>
            <param name="att"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FindElements(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement)">
            <summary>
            Return all elements where given ref table attribute matches given element.
            </summary>
            <param name="type">Database Type</param>
            <param name="att">Reference table Attribute</param>
            <param name="element">Matching Element</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.SaveWork(System.String)">
            <summary>
            Save all changes.
            Savework is actually done on a DB by DB basis.
            If a save of one DB fails, the others will still be done.
            </summary>
            <param name="comment">Comment for Savework</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.SaveWork(Aveva.Core.Database.Db[],System.String)">
            <summary>
            Savework on specific DBs.
            If a save of one DB fails, the others will still be done.
            Returns false if one of DB fails, use RetrieveErrors() in this case.
            </summary>
            <param name="DBs">Array of Db representing databases on which to savework</param>
            <param name="comment">Comment for Savework</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.SaveWork(Aveva.Core.Database.DbElement[],System.String)">
            <summary>
            Savework on specific element.
            If a save of one element fails, the others will still be done.
            Returns false if one of element fails, use RetrieveErrors() in this case.
            </summary>
            <param name="elements">Array of dbelements</param>
            <param name="comment">Comment for PartialSavework</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetWork">
            <summary>
            GetWork for all MDB.
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetWork(Aveva.Core.Database.Db[])">
            <summary>
            GetWork for given DBs.
            <param name="DBs">Array of Db representing databases on which to getwork</param>
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.QuitWork">
            <summary>
            Quit all changes.
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.QuitWork(Aveva.Core.Database.Db[])">
            <summary>
            QuitWork for given DBs
            </summary>
            <param name="DBs">Array of Db representing database to be quit</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Claim(Aveva.Core.Database.DbElement[])">
            <summary>
            Claim elements.
            If claim fails, the method will still claim what it can.
            </summary>
            <param name="elements">Array of DbElement representing elements to be claimed</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Release(Aveva.Core.Database.DbElement[])">
            <summary>
            Release elements.
            If release fails, the method will still release what it can.
            Will skip a read-only DB, and still return true, as long as no other error occurs.
            </summary>
            <param name="elements">Array of DbElement representing elements to be released</param>
            <returns>True, if successful or if a DB is read-only</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ReleaseAll">
            <summary>
            Release All elements.
            If release fails, the method will still release what it can.
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ExtractClaim(Aveva.Core.Database.DbElement[])">
            <summary>
            Extract Claim elements.
            If claim fails, the method will still claim what it can
            </summary>
            <param name="elements">Array of DbElement representing elements to be extract claimed (extracted)</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ExtractRelease(Aveva.Core.Database.DbElement[])">
            <summary>
            Extract Release elements.
            Skips DBs that are not writable or not extracts, and returns true.
            If release fails, the method will still release what it can.
            </summary>
            <param name="elements">Array of DbElement representing elements to be extract released</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ExtractShareLater(Aveva.Core.Database.DbElement[],System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Extract Transfer elements with Scheduling.
            The selected items will be Transferred as controlled by the Global Scheduler
            This will Transfer work with other Global locations as controlled by the Global Addin
            - For master DBs, this will initiate a Refresh at other locations + claim to "Next" extract
            - For Extracts, this will initiate an Extract Issue as well
            </summary>
            <param name="elements">Array of DbElement objects to be Scheduled for Transfer</param>
            <param name="comment">Session Comment</param>
            <param name="error">Error Message object</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ExtractShareNow(Aveva.Core.Database.DbElement[],System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Extract Transfer elements - Immediate.
            The selected items with be Transferred immediately
            This will Transfer work with other Global locations as controlled by the Extract Share logic
            - For Master DBs, this will initiate a Refresh at other locations + claim to "Next" extract
            - For Extracts, this will initiate an Extract Issue as well
            </summary>
            <param name="elements">Array of DbElement objects to be Transferred immediately</param>
            <param name="comment">Session Comment</param>
            <param name="error">Error Message object</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Flush(Aveva.Core.Database.DbElement[],System.String)">
            <summary>
            Flush changes from extract.
            Flush is actually done on a DB by DB basis.
            If any DBs are read-only, then no work will be done, false returned and a single error set for each such DB.
            If a flush of a DB fails no changes will be flushed for that DB.
            If a flush of one DB fails, the others will still be done.
            </summary>
            <param name="elements">Array of DbElement representing elements to be flushed</param>
            <param name="comment">Comment for Flush</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Issue(Aveva.Core.Database.DbElement[],System.String)">
            <summary>
            Issue changes from extract.
            Issue is actually done on a DB by DB basis.
            If an issue of a DB fails no changes will be issued for that DB.
            If an issue of one DB fails, the others will still be done.
            </summary>
            <param name="elements">Array of DbElement representing elements to be issued</param>
            <param name="comment">Comment for Issue</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Drop(Aveva.Core.Database.DbElement[],System.String)">
            <summary>
            Drop changes from extract.
            Drop is actually done on a DB by DB basis.
            If a drop of a DB fails no changes will be dropped for that DB.
            If a Drop of one DB fails, the others will still be done.
            </summary>
            <param name="elements">Array of DbElement representing elements to be dropped</param>
            <param name="comment">Comment for Drop</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Refresh(Aveva.Core.Database.DbElement[],System.String)">
            <summary>
            Extract refresh only the specified elements
            </summary>
            <param name="elements">Array of DbElement representing the elements to be refreshed</param>
            <param name="comment">Comment for Refresh</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Refresh(Aveva.Core.Database.DbElement[],Aveva.Core.Database.DbSession[],System.String)">
            <summary>
            Extract refresh only the specified elements to the specifed parent session
            </summary>
            <param name="elements">Array of DbElement representing the elements to be refreshed</param>
            <param name="sessions">Array of DbSession representing sessions that identify the version of each element in extract parent</param>
            <param name="comment">Comment for Refresh</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Refresh(Aveva.Core.Database.Db[],System.String)">
            <summary>
            Extract refresh specific DBs.
            Refresh is actually done on a DB by DB basis.
            If a refresh of a DB fails no changes will be refreshed for that DB.
            If a Refresh of one DB fails, the others will still be done.
            </summary>
            <param name="dBs">Array of Db representing databases to be refreshed</param>
            <param name="comment">Comment for Refresh</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.Refresh(System.String)">
            <summary>
            Refresh DBs.
            </summary>
            <param name="comment">Comment for Refresh</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FullRefresh(Aveva.Core.Database.Db[],System.String)">
            <summary>
            Extract full refresh specific DBs.
            Full Refresh is actually done on a DB by DB basis.
            If a full refresh of a DB fails no changes will be refreshed for that DB.
            If a Full Refresh of one DB fails, the others will still be done.
            </summary>
            <param name="dBs">Array of Db representing databases to be fully refreshed</param>
            <param name="comment">Comment for Full Refresh</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.FullRefresh(System.String)">
            <summary>
            FullRefresh DBs.
            </summary>
            <param name="comment">Comment for Full Refresh</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetMyClaims(Aveva.Core.Database.DbElement[]@)">
            <summary>
            GetMyClaims - gets array of this user's claims for all DBs of default type.
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the elements claimed to the user.</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetClaimsOther(Aveva.Core.Database.DbElement[]@,System.Int32[]@)">
            <summary>
            GetClaimsOther - gets array of other users claims for all write DBs.
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the elements claimed.</param>
            <param name="users">Integer array passed as out argument, gets the users who have the elements claimed.</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetClaimsTo(Aveva.Core.Database.DbElement[]@)">
            <summary>
            GetClaimsTo - gets the claims to the extract for all the write DBs.
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the elements claimed. </param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetClaimsFrom(Aveva.Core.Database.DbElement[]@,System.Int32[]@)">
            <summary>
            GetClaimsFrom - gets the claims from the extract for all the write DBs.
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the elements claimed.</param>
            <param name="users">Integer array passed as out argument, gets the users who have the elements claimed.</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetClaimsDeleted(Aveva.Core.Database.DbElement[]@)">
            <summary>
            GetClaimsDeleted - gets the claims for elements that have been deleted.
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the claimed elements that have been deleted.</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetUserClaims(System.Int32[]@)">
            <summary>
            GetUserClaims - gets an array of users who have elements claimed.
            </summary>
            <param name="users">Integer array passed as out argument, gets the number of users who have claims.</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.UpdateClaimsToLatest">
            <summary>
            Ensure that we are using the latest version of the claim-list
            Only needed prior to single claim queries
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ChangesSinceDateTime(System.DateTime,Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes to databases in MDB since given date and time
            </summary>
            <param name="dateTime">Date and time as base for query</param>
            <param name="changes">Object containing a record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ChangesSinceDateTime(System.DateTime,Aveva.Core.Database.DbType,Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes to databases of given type in MDB since given date and time
            </summary>
            <param name="dateTime">Date and time as base for query</param>
            <param name="type">Database type of interest</param>
            <param name="changes">Object containing a record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ChangesSinceSessions(Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on array of databases since given array of sessions
            </summary>
            <param name="sessions">Array of database sessions to use as base for query</param>
            <param name="changes">Object containing record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.internalChangesSinceSessions(Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on array of databases since given array of sessions
            </summary>
            <param name="sessions">Array of database sessions to use as base for query</param>
            <param name="changes">Object containing record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ChangesAtSessions(Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on array of databases in the given array of sessions
            </summary>
            <param name="sessions">Array of database sessions to use as base for query</param>
            <param name="changes">Object containing record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.internalChangesAtSessions(Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on array of databases in the given array of sessions
            </summary>
            <param name="sessions">Array of database sessions to use as base for query</param>
            <param name="changes">Object containing record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.ChangesBetweenSessions(Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on array of databases between the given arrays of sessions
            </summary>
            <param name="sessionsFirst">Array of database sessions to use as base for query</param>
            <param name="sessionsLast">Array of database sessions </param>
            <param name="changes">Object containing record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.internalChangesBetweenSessions(Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbSession[],Aveva.Core.Database.DbUserChanges@,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Get all changes on array of databases between the given arrays of sessions
            </summary>
            <param name="sessionsFirst">Array of database sessions to use as base for query</param>
            <param name="sessionsLast">Array of database sessions </param>
            <param name="changes">Object containing record of all changes</param>
            <param name="error">Object containing error information, if False returned</param>
            <returns>True, if query was successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetShareableClaims(Aveva.Core.Database.DbElement[]@)">
            <summary>
            GetShareableClaims - gets array of this user's Shareable claims for all DBs of default type.
                               - These are User claims which are in a valid Extract hierarchy
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the Shareable elements claimed to the user.</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetAllShareableClaims(Aveva.Core.Database.DbElement[]@)">
            <summary>
            GetAllShareableClaims - gets array of all Shareable claims for all DBs of default type.
                               - These are User claims which are in a valid Extract hierarchy (for Master DBs)
                               - plus all Extract claims excluding those claimed to OTHER users
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the Shareable elements claimed to the user or Extract</param>
            <returns>Void</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetAllShareable(Aveva.Core.Database.DbElement[]@)">
            <summary>
            GetAllShareable - gets array of all items for all DBs of default type.
                               - These are all elements which are in a valid Extract hierarchy 
                               - which are not claimed by other users or extracts
                               - For Extracts same as GetAllShareableClaims
                               - For Masters it returns the entire database excluding claims!
            </summary>
            <param name="claimList">DBElement array passed as out argument, gets the Shareable elements</param>
            <returns>Void</returns>
            
        </member>
        <member name="M:Aveva.Core.Database.MDB.GetAllShareable(Aveva.Core.Database.Db[],Aveva.Core.Database.DbElement[]@)">
            <summary>
            Gets the claimlist of the specified Dbs
            </summary>
            <param name="db"></param>
            <param name="claimList"></param>
        </member>
        <member name="P:Aveva.Core.Database.MDB.MdbElement">
            <summary>
            DbElement corresponding to %MDB element in system DB.
            Various attributes can be queried off this.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDB.Stamp">
            <summary>
            DbElement corresponding to %STAMP element for stamp at which the MDB has been opened;
            if the MDB is at latest then an invalid (nulref) DbElement is returned.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDB.SetUp">
            <summary>
            MDDBSetup object used to open the MDB.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDB.Name">
            <summary>
            Return MDB name.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDB.CurrentUserChanges">
            <summary>
            Access current user changes
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDB.internalCurrentUserChanges">
            <summary>
            Protected user changes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aveva.Core.Database.MDBSetup">
            <summary>
            Class to store options when opening an MDB.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.MDBSetup.internalMDBSetup">
            <summary>
            'singleton' instance of MDBSetup class used by CreateMDBSetup method
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MDBSetup.CreateMDBSetup(System.String)">
            <summary>
            Create instance of an MDBSetup passing in MDB name
            </summary>
            <param name="name">MDB name</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDBSetup.internalCreateMDBSetup(System.String)">
            <summary>
            Non static version of CreateMDBSetup
            </summary>
            <param name="name">MDB name</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDBSetup.CreateMDBSetup(System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Create instance of an MDBSetup passing in MDB name. Returns false if an error occurs.
            </summary>
            <param name="MDBName">MDB name</param>
            <param name="error">Error object if mdb is not valid</param>
            <returns>Mdbsetup object if valid mdb else a null object</returns>
        </member>
        <member name="M:Aveva.Core.Database.MDBSetup.internalCreateMDBSetup(System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Non static version of CreateMDBSetup
            </summary>
            <param name="name">MDB name</param>
            <param name="error">Error object</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MDBSetup.SetMDBName(System.String,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Set MDB name, returning error if invalid
            </summary>
            <param name="name">MDB name</param>
            <param name="error">Error object</param>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.DefaultType">
            <summary>
            Default database type. e.g. Design.
            This affects the initial position in the database.
            Currently ignored.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.Name">
            <summary>
            MDB name
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.Mdb">
            <summary>
            MDB Element
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.ReadOnly">
            <summary>
            ReadOnly or not. If set then all DBs will be opened in read.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.ReadTypes">
            <summary>
            DbTypes to open in read
            Currently ignored
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.Stamp">
            <summary>
            Stamp at which to open the MDB
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.Subtype">
            <summary>
            Subtype, i.e. marine or not.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.WriteTypes">
            <summary>
            DbTypes to open in write.
            Currently ignored
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MDBSetup.Nosave">
            <summary>
            Nosave option.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.NameTable">
            <summary>
            Class for scanning a name table for a particular DB.
            Names are ordered alphabetically.
            The actual scanning of the name table is performed by getting a NameTableEnumerator and iterating on that.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.NameTable.internalNameTable">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.GetNameTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,System.String,System.String)">
            <summary>
            Get object that represents a range within a name table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of name table</param>
            <param name="firstName">Start of range</param>
            <param name="lastName">End of range </param>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.internalGetNameTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.GetNameTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            Get object that represents a prefix within a name table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of name table</param>
            <param name="prefix">Prefix for name</param>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.internalGetNameTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.GetNameTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get object that represents entire name table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of name table</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.internalGetNameTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.GetEnumerator">
            <summary>
            Get enumerator for this name table.
            The enumerator can then be used to access values within the table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTable.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.RefTable">
            <summary>
            Class for scanning of a ref table for a particular DB.
            The actual scanning of the ref table is performed by getting a RefTableEnumerator and iterating on that
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.RefTable.internalRefTable">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTable.GetRefTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            Get object that represents a range within a ref table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of ref table</param>
            <param name="firstKey">Start of range</param>
            <param name="lastKey">End of range </param>
        </member>
        <member name="M:Aveva.Core.Database.RefTable.internalGetRefTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTable.GetRefTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get object that represents the entire ref table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of ref table</param>
        </member>
        <member name="M:Aveva.Core.Database.RefTable.internalGetRefTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get enumerator for this ref table.
            The enumerator can then be used to access values within the table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTable.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTable.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.IntTable">
            <summary>
            Class for scanning an integer table for a particular DB.
            The actual scanning of the name table is performed by getting a IntTableEnumerator and iterating on that
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.IntTable.internalIntTable">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTable.GetIntTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,System.Int32,System.Int32)">
            <summary>
            Get object that represents a range within a integer table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of integer table</param>
            <param name="firstKey">Start of range</param>
            <param name="lastKey">End of range </param>
        </member>
        <member name="M:Aveva.Core.Database.IntTable.internalGetIntTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTable.GetIntTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get object that represents the entire integer table for a DB
            </summary>
            <param name="db">Db for table</param>
            <param name="att">identity of integer table</param>
        </member>
        <member name="M:Aveva.Core.Database.IntTable.internalGetIntTable(Aveva.Core.Database.Db,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get enumerator for this integer table.
            The enumerator can then be used to access values within the table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTable.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTable.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.TypeTable">
            <summary>
            Class for scanning a Type table for a list of types
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.TypeTable.internalTypeTable">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTable.GetTypeTable(Aveva.Core.Database.Db)">
            <summary>
            Get object that represents a range within a integer table for a DB
            </summary>
            <param name="db">Db for table</param>
        </member>
        <member name="M:Aveva.Core.Database.TypeTable.internalGetTypeTable(Aveva.Core.Database.Db)">
            <summary>
            Internal method
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTable.GetEnumerator">
            <summary>
            Get enumerator for this integer table.
            The enumerator can then be used to access values within the table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTable.setType(Aveva.Core.Database.DbElementType)">
            <summary>
            Adds ElementType to list that we are interested in.
            Will include any derived UDETs
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTable.setActualType(Aveva.Core.Database.DbElementType)">
            <summary>
            Adds ElementType to list that we are interested in.
            Will NOT include any derived UDETs
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTable.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.MdbNameTable">
            <summary>
            Class for scanning a name table representing all dbs of given type within the current MDB.
            Names are ordered alphabetically.
            The actual scanning of the name table is performed by getting a MdbNameTableEnumerator and iterating on that.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.MdbNameTable.internalMdbNameTable">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTable.GetMdbNameTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,System.String,System.String)">
            <summary>
            Get object that represents a range within a name table for a MDB
            </summary>
            <param name="dbtype">Db for table</param>
            <param name="att">identity of name table</param>
            <param name="firstName">Start of range</param>
            <param name="lastName">End of range </param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTable.internalGetMdbNameTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTable.GetMdbNameTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get object that represents the entire name table for a MDB
            </summary>
            <param name="dbtype">Db for table</param>
            <param name="att">identity of name table</param>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTable.internalGetMdbNameTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTable.GetEnumerator">
            <summary>
            Get enumerator for this name table.
            The enumerator can then be used to access values within the table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTable.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.MdbIntTable">
            <summary>
            Class for scanning an integer table representing all dbs of given type within the current MDB.
            The actual scanning of the name table is performed by getting a MdbIntTableEnumerator and iterating on that
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.MdbIntTable.internalMdbIntTable">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTable.GetMdbIntTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,System.Int32,System.Int32)">
            <summary>
            Get object that represents a range within a integer table for entire MDB
            </summary>
            <param name="dbtype">Db type</param>
            <param name="att">identity of integer table</param>
            <param name="firstKey">Start of range</param>
            <param name="lastKey">End of range </param>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTable.internalGetMdbIntTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTable.GetMdbIntTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute)">
            <summary>
            Get object that represents the entire integer table for entire MDB
            </summary>
            <param name="dbtype">Db type</param>
            <param name="att">identity of integer table</param>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTable.internalGetMdbIntTable(Aveva.Core.Database.DbType,Aveva.Core.Database.DbAttribute)">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTable.GetEnumerator">
            <summary>
            Get enumerator for this integer table.
            The enumerator can then be used to access values within the table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTable.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.NameTableEnumerator">
            <summary>
            Name Table Enumerator.
            N.B. Enumerator MUST be explicitly disposed to clean up resources
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTableEnumerator.MoveNext">
            <summary>
            Move to next entry in name table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTableEnumerator.Reset">
            <summary>
            Reset scan to start of range
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.NameTableEnumerator.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.NameTableEnumerator.Current">
            <summary>
            Get current entry. The object returned will always be a DbElement
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.RefTableEnumerator">
            <summary>
            Ref Table Enumerator.
            N.B. Enumerator MUST be explicitly disposed to clean up resources
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTableEnumerator.MoveNext">
            <summary>
            Move to next entry in ref table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTableEnumerator.Reset">
            <summary>
            Reset scan to start of range
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.RefTableEnumerator.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.RefTableEnumerator.Current">
            <summary>
            Get current entry. The object returned will always be a DbElement
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.IntTableEnumerator">
            <summary>
            Int Table Enumerator.
            N.B. Enumerator MUST be explicitly disposed to clean up resources
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTableEnumerator.MoveNext">
            <summary>
            Move to next entry in integer table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTableEnumerator.Reset">
            <summary>
            Reset scan to start of range
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IntTableEnumerator.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.IntTableEnumerator.Current">
            <summary>
            Get current entry. The object returned will always be a DbElement
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.TypeTableEnumerator">
            <summary>
            Type Table Enumerator.
            N.B. Enumerator MUST be explicitly disposed to clean up resources
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTableEnumerator.MoveNext">
            <summary>
            Move to next entry in Type table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTableEnumerator.Reset">
            <summary>
            Reset scan to start of range
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.TypeTableEnumerator.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.TypeTableEnumerator.Current">
            <summary>
            Get current entry. The object returned will always be a DbElement
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.MdbNameTableEnumerator">
            <summary>
            MDB name Table Enumerator.
            N.B. Enumerator MUST be explicitly disposed to clean up resources
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTableEnumerator.MoveNext">
            <summary>
            Move to next entry in name table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTableEnumerator.Reset">
            <summary>
            Reset scan to start of range
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbNameTableEnumerator.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MdbNameTableEnumerator.Current">
            <summary>
            Get current entry. The object returned will always be a DbElement
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.MdbIntTableEnumerator">
            <summary>
            MDB Int Table Enumerator.
            N.B. Enumerator MUST be explicitly disposed to clean up resources
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTableEnumerator.MoveNext">
            <summary>
            Move to next entry in integer table
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTableEnumerator.Reset">
            <summary>
            Reset scan to start of range
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.MdbIntTableEnumerator.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.MdbIntTableEnumerator.Current">
            <summary>
            Get current entry. The object returned will always be a DbElement
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.ParameterList">
            <summary>
            Representation of Parameter List.
            to be used for PARA and DESP attributes
             NOT YET IMPLEMENTED.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.AsString(System.Int32)">
            <summary>
            Return indexed parameter in list as text value.
            </summary>
            <param name="index">Index of parameter in list</param>
            <returns>Indexed parameter value as text.</returns>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.SetFromString(System.Int32,System.String)">
            <summary>
            Set the indexed parameter in the list according to text value.
            </summary>
            <param name="index">Index of parameter in list</param>
            <param name="value">New value as text</param>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.AsDouble(System.Int32)">
            <summary>
            Return indexed parameter in list as double
            </summary>
            <param name="index">Index of parameter in list</param>
            <returns>Indexed parameter value as double</returns>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.SetFromDouble(System.Int32,System.Double)">
            <summary>
            Set the indexed parameter in the list according to double value.
            </summary>
            <param name="index">Index of parameter in list</param>
            <param name="d">New value as double</param>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.AsInteger(System.Int32)">
            <summary>
            Return indexed parameter in list as integer.
            </summary>
            <param name="index">Index of parameter in list</param>
            <returns>Indexed parameter value as integer</returns>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.SetFromInteger(System.Int32,System.Int32)">
            <summary>
            Set the indexed parameter in the list according to integer value.
            </summary>
            <param name="index">Index of parameter in list</param>
            <param name="i">New value as integer</param>
        </member>
        <member name="M:Aveva.Core.Database.ParameterList.GetParameterType(System.Int32)">
            <summary>
            Get type of indexed parameter in list.
            </summary>
            <param name="index">Index of parameter in list</param>
            <returns></returns>
        </member>
        <member name="T:Aveva.Core.Database.ProjectError">
            <summary>
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.Project">
            <summary>
            Representation of a Project.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.Project.internalError">
            <summary>
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Project.Close">
            <summary>
             Close project
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Project.IsOpen">
             <summary>
            
             </summary>
             <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.IsLoggedIn">
             <summary>
            
             </summary>
             <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.Open(System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="username"></param>
             <param name="password"></param>
        </member>
        <member name="M:Aveva.Core.Database.Project.Open(System.String)">
            <summary>
            Open the project without logging in
            - gives access to user and mdb information
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Aveva.Core.Database.Project.Login(System.String,System.String)">
            <summary>
            Login a project already open but not logged in
            </summary>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="M:Aveva.Core.Database.Project.IsPasswordProtected">
            <summary>
            True if this project does not allow general users to change their own password.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Project.IsAuthenticatedUserProject">
            <summary>
            True if this project operates with Windows Authenticated Users.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Project.IsModuleValid(System.String)">
            <summary>
            True if modName is present within this list of modules in this project.
            </summary>
            <param name="modName">The module name being checked.</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.GetUserData">
            <summary>
            Get list of valid users for this project.
            </summary>
            <returns>array of user data - format "name (description)</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.GetFreeUserData">
            <summary>
            Get list of valid users for this project.
            </summary>
            <returns>array of user data - format "name (description)</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.GetMdbData">
            <summary>
            Get list of valid mdbs for this project.
            </summary>
            <returns>array of mdb data - format "name (description)"</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.internalDbTypeToShortName(Aveva.Core.Database.DbType)">
            <summary>
            Convert to 4 character string  from DbType (internal method)
            </summary>
            <param name="type">Db Type</param>
            <returns>string</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.DbTypeToShortName(Aveva.Core.Database.DbType)">
            <summary>
            Convert to 4 character string from DbType
            </summary>
            <param name="type">Db Type</param>
            <returns>string</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.internalShortNameToDbType(System.String)">
            <summary>
            Convert from 4 character string (internal method)
            </summary>
            <param name="str">pml string</param>
            <returns>Db Type</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.ShortNameToDbType(System.String)">
            <summary>
            Convert from 4 character string to DbType
            </summary>
            <param name="str">pml string</param>
            <returns>Db Type</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.getProjDB(Aveva.Core.Database.DbType)">
            <summary>
            Gets project's Database.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Project.OpenAdmin(Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Open project with no MDB (Admin only)
            </summary>
            <param name="error">error if open fails</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.OpenMDB(Aveva.Core.Database.MDBSetup)">
            <summary>
            open MDB 
            </summary>
            <param name="setup">MDBSetup object defining MDB</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.OpenMDB(Aveva.Core.Database.MDBSetup,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            open project
            </summary>
            <param name="setup">MDBSetup object defining MDB</param>
            <param name="error">error if open fails</param>
            <returns>MDB object else null object if open fails</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.openSecondSystemDB(System.String)">
             <summary>
            Open another project
             </summary>
             <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.closeSecondProject">
            <summary>
            Close the project
            </summary>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Aveva.Core.Database.Project.GetError">
            <summary>
            Get last error
            </summary>
            <returns>Error object containing error details</returns>
        </member>
        <member name="F:Aveva.Core.Database.Project.CurrentProject">
            <summary>
            method to access static 'singleton' object representing the project
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.CommunicationsDB">
            <summary>
            Return communication DB
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Name">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Code">
            <summary>
            The project code.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Description">
            <summary>
            The project description.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Number">
            <summary>
            The project number.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Message">
            <summary>
            The message associated with the project.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.ProjectName">
            <summary>
            The name associated with the project.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Identifier">
            <summary>
            The identifier associated with the project.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Aduuid">
            <summary>
            The project Aduuid.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.ReferencedProjects">
            <summary>
            A list of projects referenced by this one.
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.IsGlobal">
            <summary>
            To determine if the current project is a global project
            </summary>
            <returns>True if current project is Global</returns>
        </member>
        <member name="P:Aveva.Core.Database.Project.SystemDB">
            <summary>
            Return System DB
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.GlobalDB">
            <summary>
            Return Global DB
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.MiscellaneousDB">
            <summary>
            Return Miscellaneous DB
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.UserName">
            <summary>
            Return current user name
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.LoginUser">
            <summary>
            Return current login name for user
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.Type">
            <summary>
            Project type: Plant or Marine
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.Project.GlobalUUID">
            <summary>
            The project globaluuid.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.Spatial">
            <summary>
            Class to do volumetric queries.
            For exact operations on catalogue items, all primitives with TUFL set are tested.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.Spatial.Instance">
            <summary>
            Instance of class.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementsInBox(Aveva.Core.Geometry.LimitsBox,System.Boolean)">
            <summary>
            Return elements within a 3D box
            </summary>
            <param name="rbox">box volume</param>
            <param name="bFully">Only return elements that are fully enclosed by box</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementsInBox(Aveva.Core.Geometry.LimitsBox,Aveva.Core.Database.DbElementType[],System.Boolean)">
            <summary>
            Return elements within a 3D box climbing to given type
            </summary>
            <param name="rbox">box volume</param>
            <param name="types">Element type to climb to, e.g. Equipment</param>
            <param name="bFully">Only return elements that are fully enclosed by box</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementsInElementExact(Aveva.Core.Database.DbElement,System.Boolean)">
            <summary>
            Return elements which overlap or are fully enclosed by another element.
            Exact calculations are used rather than the surrounding 3D box.
            </summary>
            <param name="ele">element to test against</param>
            <param name="bFully">Only return elements that are fully enclosed by given element</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementsInElementExact(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElementType[],System.Boolean)">
            <summary>
            Return elements which overlap or are fully enclosed by another element.
            Exact calculations are used rather than the surrounding 3D box.
            Only elements at required level are returned.
            </summary>
            <param name="ele">element to test against</param>
            <param name="types">Element type to climb to, e.g. Equipment</param>
            <param name="bFully">Only return elements that are fully enclosed by given element</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementsInElementBox(Aveva.Core.Database.DbElement,System.Boolean)">
            <summary>
            Return elements within the 3D volume of another element.
            </summary>
            <param name="ele">element defining box</param>
            <param name="bFully">Only return elements that are fully enclosed by box</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementsInElementBox(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElementType[],System.Boolean)">
            <summary>
            Return elements within the 3D volume of another element, climbing to element of specified type.
            </summary>
            <param name="ele">element defining box</param>
            <param name="types">Element type to climb to, e.g. Equipment</param>
            <param name="bFully">Only return elements that are fully enclosed by box</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementInElementExact(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement,System.Boolean)">
            <summary>
            Does element 2 overlap, or enclose element 1.
            Exact calculations are used to determine this
            </summary>
            <param name="ele1">Element to test</param>
            <param name="ele2">Element overlapping or enclosing element 1</param>
            <param name="bFully">Result of ele2 overlapping or enclosing ele1</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementInBox(Aveva.Core.Database.DbElement,Aveva.Core.Geometry.LimitsBox)">
            <summary>
            Does the 3D volume for an element overlap the given box
            </summary>
            <param name="ele">element to test</param>
            <param name="rbox">Limits box to test against</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.ElementInElementBox(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement)">
            <summary>
            Does the 3D volume for an element overlap the 3D volume for another element?
            </summary>
            <param name="ele1">element to test</param>
            <param name="ele2">element to test</param>
        </member>
        <member name="M:Aveva.Core.Database.Spatial.LimitsBox(Aveva.Core.Database.DbElement,Aveva.Core.Geometry.LimitsBox@)">
            <summary>
            Limits box for element
            </summary>
            <param name="ele">Element whose limit box is required</param>
            <param name="rbox">Limits box of given element</param>
        </member>
        <member name="T:Aveva.Core.Database.DbSystem">
            <summary>
            Representation of a Project.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetFirst(Aveva.Core.Database.DbElementType)">
            <summary>
            Returns first world level element of given type, equivalencing to Global type
            </summary>
            <param name="type">Type of element required</param>
            <returns>First world level element of that type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetNext(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElementType)">
            <summary>
            Returns next world level element of given type, equivalencing to Global type
            </summary>
            <param name="ce">Start point for search</param>
            <param name="type">Type of element required</param>
            <returns>Next world level element of that type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetAllWorldLevel(Aveva.Core.Database.DbElementType)">
            <summary>
            Returns all world level elements of given type, equivalencing to Global type
            </summary>
            <param name="type">Type of element required</param>
            <returns>List of world level elements of that type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetAll(Aveva.Core.Database.DbElementType)">
            <summary>
            Returns all elements of given type
            </summary>
            <param name="type">Type of element required</param>
            <returns>List of elements of that type</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.FindElement(System.String)">
            <summary>
            Returns elements of given name in system or global DB.
            </summary>
            <param name="name">Name of element</param>
            <returns>Element macting name. If not found then returns NULL</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetHub">
            <summary>
            Returns location element for the hub in global DB.
            </summary>
            <returns>Returns location element. If not found then returns NULL</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetAllWorkingDbs(Aveva.Core.Database.DbElement)">
            <summary>
            Returns the working extracts for the user passed.
            </summary>
            <param name="user">The user element which the working extract was created for.</param>
            <returns>Returns array containing the the working extracts. If not found then returns NULL.</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbSystem.GetAllDbs">
            <summary>
            Returns all working Dbs in the project excluding working extracts
            </summary>
            <returns> Returns all the Dbs in the project in a DbElement array . If not found then returns NULL</returns>
        </member>
        <member name="F:Aveva.Core.Database.DbSystem.Instance">
            <summary>
            Single instance of class
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbSystem.Protect">
            <summary>
            Set user level protection
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbDouble">
            <summary>
            A formatted double with dimensions and units
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDouble.m_internalDbDouble">
            <summary>
            protected local data
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create">
            <summary>
            Default constructor. Creates undimensioned DbDouble = 0.0
            </summary>
            <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(System.Double)">
            <summary>
            Constructor creates undimensioned DbDouble of given value
            </summary>
            <param name="val">value of double</param>
            <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(System.Double,Aveva.Core.Database.DbFormat)">
            <summary>
            Constructor creates dimensioned DbDouble of given value in given format.
            Throws a PdmsException if format is invalid.
            </summary>
            <param name="val">value of double</param>
            <param name="format">format of double</param>
            <returns>DbDouble in current units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(System.Double,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Constructor creates dimensioned DbDouble of given value in given units.
            Throws a PdmsException if units are invalid.
            </summary>
            <param name="val">value of double</param>
            <param name="units">format of double</param>
            <returns>DbDouble in current units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(System.Double,Aveva.Core.Database.DbDoubleUnits,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Constructor creates dimensioned DbDouble of given value in given units and dimension.
            Throws a PdmsException if units are invalid.
            </summary>
            <param name="val">value of double</param>
            <param name="units">Unit for new double</param>
            <param name="dim">Dimension for new double</param>
            <returns>DbDouble in current units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(System.String)">
            <summary>
            Constructor creates unit qualified DbDouble of given value.
            Throws a PdmsException if qualifier is invalid.
            </summary>
            <param name="val">value of double as unit qualified string</param>
            <returns>DbDouble in current units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(System.String,Aveva.Core.Database.DbFormat)">
            <summary>
            Constructor creates dimensioned DbDouble of given value and format.
            Throws a PdmsException if format is invalid.
            </summary>
            <param name="val">value of double as string</param>
            <param name="format">format of double</param>
            <returns>DbDouble in current units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.CreateBore(System.Double)">
            <summary>
            Create nearest nominal bore to given undimensioned double.
            </summary>
            <param name="val">value of double</param>
            <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.CreateBore(System.String)">
            <summary>
            Create nearest nominal bore to given qualified value.
            Throws a PdmsException if format is invalid.
            </summary>
            <param name="val">qualified value</param>
            <returns>DbDouble in current BORE units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.CreateBore(System.String,Aveva.Core.Database.DbFormat)">
            <summary>
            Create nearest nominal bore to formatted value.
            Throws a PdmsException if format is invalid.
            </summary>
            <param name="val">value of double</param>
            <param name="format">format of double</param>
            <returns>DbDouble in current units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Create(Aveva.Core.Database.DbDouble)">
             <summary>
             Copy constructor
             </summary>
             <param name="other"></param>
             <returns>Copy of DbDouble</returns>
            
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Clone">
            <summary>
            Deep copy
            </summary>
            <returns>Copy of DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.ToString">
            <summary>
            Returns DbDouble as string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.ToString(Aveva.Core.Database.DbFormat)">
            <summary>
            Returns DbDouble as string in given format
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.ConvertUnits(Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Converts DbDouble to another DbDouble in given units
            </summary>
            <param name="units">Units to convert to</param>
            <returns>DbDouble in given units</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Convert(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Returns true if dimensioned quantities are equal.
            If dimensioned quantities cannot be compared throws PdmsException.
            </summary>
            <param name="adim"></param>
            <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_Equality(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
            <summary>
            Returns true if dimensioned quantities are equal.
            If dimensioned quantities cannot be compared throws PdmsException.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_Inequality(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
            <summary>
            True if dimensioned quantities are not equal.
            If dimensioned quantities cannot be compared throws PdmsException.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_Addition(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Returns a1 + a2. If dimensioned quantities cannot be added throws PdmsException.
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
             <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_Subtraction(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Returns by a1 - a2. If dimensioned quantities cannot be subtracted throws PdmsException.
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
             <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_Multiply(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Returns a1 * a2. If dimensioned quantities cannot be multiplied throws PdmsException.
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
             <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_Division(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Return a1 \ a2. If dimensioned quantities cannot be divided throws PdmsException.
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
             <returns>DbDouble</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_GreaterThan(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Compares dimensioned quantities. If dimensioned quantities cannot be compared throws PdmsException.
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_GreaterThanOrEqual(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Compares dimensioned quantities. If dimensioned quantities cannot be compared throws PdmsException
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_LessThan(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Compares dimensioned quantities. If dimensioned quantities cannot be compared throws PdmsException
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.op_LessThanOrEqual(Aveva.Core.Database.DbDouble,Aveva.Core.Database.DbDouble)">
             <summary>
             Compares dimensioned quantities. If dimensioned quantities cannot be compared throws PdmsException
            </summary>
             <param name="a1"></param>
             <param name="a2"></param>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.GetHashCode">
            <summary>
            Override GetHashcode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.CompareTo(System.Object)">
            <summary>
            Compare DbDouble with generic object.
            </summary>
            <param name="obj">Object to compare with</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Equals(System.Object)">
            <summary>
            Returns true if dimensioned quantities are equal
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate">
            <summary>
            Default DbDouble
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.Double)">
            <summary>
            Create undimensioned DbDouble of given value
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.String)">
            <summary>
            Create qualified DbDouble
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.String,Aveva.Core.Database.DbFormat)">
            <summary>
            Create qualified DbDouble
            </summary>
            <param name="val"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.String,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Create DbDouble with given units
            </summary>
            <param name="val"></param>
            <param name="units"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.Double,Aveva.Core.Database.DbFormat)">
            <summary>
            Create qualified DbDouble
            </summary>
            <param name="val"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.Double,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Create DbDouble with given units
            </summary>
            <param name="val"></param>
            <param name="units"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(System.Double,Aveva.Core.Database.DbDoubleUnits,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Create DbDouble with given units
            </summary>
            <param name="val"></param>
            <param name="units"></param>
            <param name="dim"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreateBore(System.Double)">
            <summary>
            Create undimensioned DbDouble of given bore
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreateBore(System.String)">
            <summary>
            Create qualified DbDouble of given bore
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreateBore(System.String,Aveva.Core.Database.DbFormat)">
            <summary>
            Create qualified DbDouble of given bore in given format
            </summary>
            <param name="val"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.internalCreate(Aveva.Core.Database.DbDouble)">
            <summary>
            Copy constructor
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Add(Aveva.Core.Database.DbDouble)">
            <summary>
            Add two DbDouble
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Subtract(Aveva.Core.Database.DbDouble)">
            <summary>
            Subtract two DbDouble
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Multiply(Aveva.Core.Database.DbDouble)">
            <summary>
            Multiply two DbDouble
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.Divide(Aveva.Core.Database.DbDouble)">
            <summary>
            Divide two DbDouble
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.GreaterThan(Aveva.Core.Database.DbDouble)">
            <summary>
            a1 &gt; a2
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.GreaterThanOrEqualTo(Aveva.Core.Database.DbDouble)">
            <summary>
            a1 &gt;= a2
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.LessThan(Aveva.Core.Database.DbDouble)">
            <summary>
            a1 &lt; a2
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDouble.LessThanOrEqualTo(Aveva.Core.Database.DbDouble)">
            <summary>
            a1 &lt;= a2
            </summary>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDouble.Units">
            <summary>
            Property - Unit
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDouble.Dimension">
            <summary>
            Property - Dimension
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDouble.DefaultUnit">
            <summary>
            Property - DefaultUnit
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDouble.Value">
            <summary>
            Property - Double value in current units
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDouble.DatabaseValue">
            <summary>
            Property - Double value in database units
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDouble.Format">
            <summary>
            Property - Double format
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbFormat">
            <summary>
            Format for database doubles
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbFormat.m_internalDbFormat">
            <summary>
            protected local data
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.Create">
            <summary>
            Default constructor
            </summary>
            <returns>DbFormat</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.GetFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Return PML FORMAT for given dimension and units
            </summary>
            <param name="dimension">Dimension</param>
            <param name="units">Units</param>
            <returns>DbFormat</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.GetFormat(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Return PML FORMAT for given dimension
            </summary>
            <param name="dimension">Dimension</param>
            <returns>DbFormat</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.AddFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits,Aveva.Core.Database.DbFormat)">
            <summary>
            Add PML FORMAT for given dimension and units
            </summary>
            <param name="dimension">Dimension</param>
            <param name="units">Units</param>
            <param name="format">Format</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.AddFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbFormat)">
            <summary>
            Add PML FORMAT for given dimension
            </summary>
            <param name="dimension">Dimension</param>
            <param name="format">Format</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.RemoveFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Remove PML FORMAT for given dimension and units
            </summary>
            <param name="dimension">Dimension</param>
            <param name="units">Units</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.RemoveFormat(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Remove PML FORMAT for given dimension
            </summary>
            <param name="dimension">Dimension</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.GetCurrentUnits(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Return current units for given dimension
            </summary>
            <param name="dimension">Dimension</param>
            <returns>DbDoubleUnits</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.AddCurrentUnits(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Add current units for given dimension
            </summary>
            <param name="dimension">Dimension</param>
            <param name="units">Units</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.RemoveCurrentUnits(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Remove current units for given dimension
            </summary>
            <param name="dimension">Dimension</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.GetFormat(System.String)">
            <summary>
            Return PML FORMAT of given name
            </summary>
            <param name="formatName">name of PML instance</param>
            <returns>DbFormat</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.Create(Aveva.Core.Database.DbFormat)">
            <summary>
            Copy constructor
            </summary>
            <param name="other"></param>
            <returns>DbFormat</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.Clone">
            <summary>
            deep copy
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.ToString">
            <summary>
            Returns DbFormat as string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.op_Equality(Aveva.Core.Database.DbFormat,Aveva.Core.Database.DbFormat)">
            <summary>
            true if Format objects are equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.op_Inequality(Aveva.Core.Database.DbFormat,Aveva.Core.Database.DbFormat)">
            <summary>
            true if Format objects are equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.Equals(System.Object)">
            <summary>
            override equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.GetHashCode">
            <summary>
            override gethashcode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalCreate">
            <summary>
            Default DbFormat
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalCreate(Aveva.Core.Database.DbFormat)">
            <summary>
            Copy constructor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalGetFormat(System.String,System.Int32)">
            <summary>
            Get existing format of given name
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalGetFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Get existing format for given dimension and units
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalGetFormat(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Get existing format for given dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalAddFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits,Aveva.Core.Database.DbFormat)">
            <summary>
            Add format for given dimension and units
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalAddFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbFormat)">
            <summary>
            Add format for given dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalRemoveFormat(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Remove format for given dimension and units
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalRemoveFormat(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Remove format for given dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalGetCurrentUnits(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Get current units for given dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalAddCurrentUnits(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Add current units for given dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbFormat.internalRemoveCurrentUnits(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Remove current units for given dimension
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.ComponentSeparator">
            <summary>
            Property - Separator used for multicomponent data types such as POSITIONS (Default SPACE).
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.Denominator">
            <summary>
            Property - Largest denominator for Imperial fractions (Default 32)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.Dimension">
            <summary>
            Property - Number is un-dimensioned (Default) or has dimension LENGTH, AREA, VOLUME, ...
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.DecimalPoints">
            <summary>
            Property - Number of decimal places for decimal fractions (Default 2)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.ENU">
            <summary>
            Property - Use ENU format when outputting POSITIONS (Default) or use XYZ format
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.Fraction">
            <summary>
            Property - Fractional part output as decimal (Default) or fractional part output as fraction
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.FeetLabel">
            <summary>
            Property - Label used for feet e.g. ' or FT or ft or feet (Default ‘ )
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.InchSeparator">
            <summary>
            Property - Separator between inches and fractions (Default . )
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.Label">
            <summary>
            Property - General label e.g. mm or m or " or IN (Default is no label)
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.OriginExpression">
            <summary>
            Property - With respect to World (Default) or given element
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.PadFractions">
            <summary>
            Property - Do not pad fractions (Default) or pad fractions with trailing spaces
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.Units">
            <summary>
            Property - Output number in given units
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.Zeros">
            <summary>
            Property - Leading zeroes are displayed for Imperial units (Default) or not
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.TrailZeros">
            <summary>
            Property - Trailing zeroes are displayed for decimals of units (Default) or not
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.NextFormat">
            <summary>
            Property - Trailing zeroes are displayed for decimals of units (Default) or not
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.DatabaseValues">
            <summary>
            Property - Database values
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbFormat.PresentationValues">
            <summary>
            Property - Presentation values
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbDoubleDimension">
            <summary>
            Standard or derived Dimension
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDoubleDimension.m_internalDbDoubleDimension">
            <summary>
            protected local data
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.GetDimension(System.String)">
            <summary>
            Construct dimension from given expression
            </summary>
            <param name="expression">dimension qualifier</param>
            <returns>DbDoubleDimension</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.GetDimension(System.Int32)">
            <summary>
            Construct dimension from given hash
            </summary>
            <param name="hash">Dimension hash value</param>
            <returns>DbDoubleDimension</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.GetDimension(Aveva.Core.Database.DbDimension)">
            <summary>
            Construct from given dimension
            </summary>
            <param name="dimension">Dimension to copy</param>
            <returns>DbDoubleDimension</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.GetDimension(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Copy constructor
            </summary>
            <param name="other"></param>
            <returns>DbDoubleDimension</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.AllDimensions">
            <summary>
            Get all defined standard and generic dimensions
            </summary>
            <returns>Array of DbDoubleDimension</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.CompareTo(System.Object)">
            <summary>
            Compare Attribute with generic object.
            </summary>
            <param name="obj">Object to compare with</param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.PassObjectToCPP(System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage)">
            <summary>
            Pass object through to unmanaged C++. AVEVA USE ONLY.
            </summary>
            <param name="pos">Position index</param>
            <param name="message">Associated message</param>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.Clone">
            <summary>
            Deep copy
            </summary>
            <returns>DbDoubleDimension</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.ToString">
            <summary>
            Returns DbDoubleDimension as string
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.Numeric">
            <summary>
            Sets current units as numeric
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.DefaultUnits">
            <summary>
            Sets default current units
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.Suspend">
            <summary>
            Suspend current units (for all dimensions)
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.Unsuspend">
            <summary>
            Unsuspend current units a level
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.Reinstate">
            <summary>
            Reinstate current units
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.EquivalentComponents(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            check whether this and other dimension have the
            same underlying primitive dimensions and are
            compatible or equivalent
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.op_Equality(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Returns true if DbDoubleDimension objects are equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.op_Inequality(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Returns true if DbDoubleDimension objects are equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.Equals(System.Object)">
            <summary>
            Override Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.GetHashCode">
            <summary>
            Override GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalGetDimension(System.String)">
            <summary>
            DbDoubleDimension constructor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalGetDimension(System.Int32)">
            <summary>
            DbDoubleDimension constructor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalGetDimension(Aveva.Core.Database.DbDimension)">
            <summary>
            DbDoubleDimension constructor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalGetDimension(Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            DbDoubleDimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalAllDimensions">
            <summary>
            Get all defined DbDoubleDimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalGetDimensionCode">
            <summary>
            Get hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalDefaultUnits">
            <summary>
            Set default units for all dimensions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalSuspend">
            <summary>
            suspend all current units
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalUnsuspend">
            <summary>
            Unsuspend all current units by one level
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.internalReinstate">
            <summary>
            reinstate all current units
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleDimension.dimsHaveEquivalentComponents(Aveva.Core.Database.DbDoubleDimension,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            check whether this and other dimension have the
            same underlying primitive dimensions and are
            compatible or equivalent
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.CurrentUnits">
            <summary>
            Property - Current units for this dimension
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.DatabaseUnits">
            <summary>
            Property - Database units for this dimension
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Units">
            <summary>
            Property - All units for this dimension
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Qualifier">
            <summary>
            Property - Qualifier
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.StandardDimension">
            <summary>
            Property - Standard dimension enum
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Description">
            <summary>
            Property - Description of dimension
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Factor">
            <summary>
            Property - Conversion factor
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.IsStandard">
            <summary>
            Property - Returns true if standard dimension
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Name">
            <summary>
            Property - Dimension name
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Set">
            <summary>
            Property - is set
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.Unset">
            <summary>
            Property - is unset
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.SuspendLevel">
            <summary>
            Property - suspend level 
            </summary>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleDimension.internalSuspendLevel">
            <summary>
            Property - suspend level
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbDoubleUnits">
            <summary>
            Standard or derived Units.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbDoubleUnits.m_internalDbDoubleUnits">
            <summary>
            protected local data.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetUnits(System.String)">
            <summary>
            Construct units from given expression.
            </summary>
            <param name="expression">   unit qualifier.</param>
            <returns>
            DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetUnits(System.String,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Construct units from given expression.
            </summary>
            <param name="expression">   unit qualifier.</param>
            <param name="dim">  The dim.</param>
            <returns>
            DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetUnits(System.Int32)">
            <summary>
            Construct units from given hash.
            </summary>
            <param name="hash"> unit hash value.</param>
            <returns>
            DbDOubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetUnits(Aveva.Core.Database.DbUnits)">
            <summary>
            Construct units from enum.
            </summary>
            <param name="units">    unit enum.</param>
            <returns>
            DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetUnits(Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Copy constructor.
            </summary>
            <param name="other">    .</param>
            <returns>
            DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.AllUnits">
            <summary>
            Get all defined standard and generic units.
            </summary>
            <returns>
            Array of units.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.CompareTo(System.Object)">
            <summary>
            Compare Attribute with generic object.
            </summary>
            <param name="obj">  Object to compare with.</param>
            <returns>
            Negative if this Aveva.Core.Database.DbDoubleUnits is less than the other, 0 if they are
            equal, or positive if this is greater.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.PassObjectToCPP(System.Int32,Aveva.Core.Utilities.Messaging.PdmsMessage)">
            <summary>
            Pass object through to unmanaged C++. AVEVA USE ONLY.
            </summary>
            <param name="pos">  Position index.</param>
            <param name="message">  Associated message.</param>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.Clone">
            <summary>
            Deep copy.
            </summary>
            <returns>
            DbDOubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.ToString">
            <summary>
            Returns DbDoubleUnits as string.
            </summary>
            <returns>
            String.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.op_Equality(Aveva.Core.Database.DbDoubleUnits,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Returns true if DbDoubleUnits objects are equal.
            </summary>
            <param name="left"> .</param>
            <param name="right">    .</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.op_Inequality(Aveva.Core.Database.DbDoubleUnits,Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Returns true if DbDoubleUnits objects are equal.
            </summary>
            <param name="left"> .</param>
            <param name="right">    .</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.Equals(System.Object)">
            <summary>
            Override Equals.
            </summary>
            <param name="obj">  .</param>
            <returns>
            true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetHashCode">
            <summary>
            Override GetHashCode.
            </summary>
            <returns>
            A hash code for this Aveva.Core.Database.DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.GetDimCode">
            <summary>
            Override GetDimCode.
            </summary>
            <returns>
            The dim code.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetUnits(System.String)">
            <summary>
            Construct from given expression.
            </summary>
            <param name="expression">   unit qualifier.</param>
            <returns>
            The DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetUnits(System.String,Aveva.Core.Database.DbDoubleDimension)">
            <summary>
            Construct from given expression.
            </summary>
            <param name="expression">   unit qualifier.</param>
            <param name="dim">  The dim.</param>
            <returns>
            The DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetUnits(System.Int32)">
            <summary>
            Construct from given hash.
            </summary>
            <param name="hash"> unit hash value.</param>
            <returns>
            The DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetUnits(Aveva.Core.Database.DbUnits)">
            <summary>
            Construct from units.
            </summary>
            <param name="units">    unit enum.</param>
            <returns>
            The DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetUnits(Aveva.Core.Database.DbDoubleUnits)">
            <summary>
            Copy constructor.
            </summary>
            <param name="other">    .</param>
            <returns>
            The DbDoubleUnits.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetAllUnits">
            <summary>
            Get all defined standard and generic units.
            </summary>
            <returns>
            A DbDoubleUnits[].
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetUnitCode">
            <summary>
            Get hash code.
            </summary>
            <returns>
            An int.
            </returns>
        </member>
        <member name="M:Aveva.Core.Database.DbDoubleUnits.internalGetDimensionCode">
            <summary>
            Get DIM code.
            </summary>
            <returns>
            An int.
            </returns>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.StandardUnits">
            <summary>
            Property - Standard units.
            </summary>
            <value>
            The standard units.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.Description">
            <summary>
            Property - Description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.Dimension">
            <summary>
            Property - Dimension.
            </summary>
            <value>
            The dimension.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.Factor">
            <summary>
            Property - Conversion Factor.
            </summary>
            <value>
            The factor.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.IsStandard">
            <summary>
            Property - Is standard.
            </summary>
            <value>
            true if this Aveva.Core.Database.DbDoubleUnits is standard, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.Name">
            <summary>
            Property - Name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.ShortName">
            <summary>
            Property - Short name.
            </summary>
            <value>
            The name of the short.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.Set">
            <summary>
            Property - is set.
            </summary>
            <value>
            true if set, false if not.
            </value>
        </member>
        <member name="P:Aveva.Core.Database.DbDoubleUnits.Unset">
            <summary>
            Property - is unset.
            </summary>
            <value>
            true if unset, false if not.
            </value>
        </member>
        <member name="T:Aveva.Core.Database.DbUtils">
            <summary>
            Interface to Database utilities.  AVEVA USE ONLY.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbUtils.internalDb">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUtils.GetBinaryImage(Aveva.Core.Database.DbElement,System.Byte[]@)">
            <summary>
            Read data from db element 'owner' that has an ARCHIV element member
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUtils.internalGetBinaryImage(Aveva.Core.Database.DbElement,System.Byte[]@)">
            <summary>
            Implementation of GetBinaryImage to be overriden 
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUtils.SetBinaryImage(Aveva.Core.Database.DbElement,System.Byte[])">
            <summary>
            Write data to the ARCHIV member element below 'owner', creating it if necessary
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUtils.internalSetBinaryImage(Aveva.Core.Database.DbElement,System.Byte[])">
            <summary>
            Implementation of SetBinaryImage to be overriden
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUtils.internalAllElementsBelow(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Implementation of AllElementsBelow to be overriden
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbUtils.AllElementsBelow(Aveva.Core.Database.DbElement,Aveva.Core.Database.DbElement[]@)">
            <summary>
            Return all descendant elements below 'elem'
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents">
            <summary>
            These events are triggered before any check for the update takes place (i.e. type, range, valid value, same value check). 
            They apply for setting attributes on elements only at the moment.
            
            IMPORTANT: These events should not be used for database modifications! - For AVEVA use only.
            </summary>
        </member>
        <member name="F:Aveva.Core.Database.DbPreSetAttributeEvents.pInstance">
            <summary>
            Singleton class that can be overriden by the managed component.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddBoolAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.BoolAttributeDelegate)">
            <summary>
            Add a delegate for an boolean attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddIntAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.IntAttributeDelegate)">
            <summary>
            Add a delegate for an integer attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddDoubleAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.DoubleAttributeDelegate)">
            <summary>
            Add a delegate for a double attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddStringAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.StringAttributeDelegate)">
            <summary>
            Add a delegate for a string attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddRefAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.RefAttributeDelegate)">
            <summary>
            Add a delegate for a reference attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddBoolArrayAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.BoolArrayAttributeDelegate)">
            <summary>
            Add a delegate for an boolean array attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddIntArrayAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.IntArrayAttributeDelegate)">
            <summary>
            Add a delegate for an integer array attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddDoubleArrayAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.DoubleArrayAttributeDelegate)">
            <summary>
            Add a delegate for a double array attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddStringArrayAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.StringArrayAttributeDelegate)">
            <summary>
            Add a delegate for a string array attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddRefArrayAttributePreChangeInternal(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.RefArrayAttributeDelegate)">
            <summary>
            Add a delegate for a reference array attribute that is on a specific element type.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddBoolAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.BoolAttributeDelegate)">
            <summary>
            Add a delegate for an boolean attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddIntAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.IntAttributeDelegate)">
            <summary>
            Add a delegate for an integer attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddDoubleAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.DoubleAttributeDelegate)">
            <summary>
            Add a delegate for a double attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddStringAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.StringAttributeDelegate)">
            <summary>
            Add a delegate for a string attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddRefAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.RefAttributeDelegate)">
            <summary>
            Add a delegate for a reference attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddBoolArrayAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.BoolArrayAttributeDelegate)">
            <summary>
            Add a delegate for an bool array attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddIntArrayAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.IntArrayAttributeDelegate)">
            <summary>
            Add a delegate for an int array attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddDoubleArrayAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.DoubleArrayAttributeDelegate)">
            <summary>
            Add a delegate for an double array attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddStringArrayAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.StringArrayAttributeDelegate)">
            <summary>
            Add a delegate for an int array attribute that is on a specific element type
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DbPreSetAttributeEvents.AddRefArrayAttributePreChange(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbAttribute,Aveva.Core.Database.DbPreSetAttributeEvents.RefArrayAttributeDelegate)">
            <summary>
            Add a delegate for an double array attribute that is on a specific element type
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.BoolAttributeDelegate">
            <summary>
            Delegate for pre change event for an bool attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.IntAttributeDelegate">
            <summary>
            Delegate for pre change event for an int attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.DoubleAttributeDelegate">
            <summary>
            Delegate for pre change event for an int attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.StringAttributeDelegate">
            <summary>
            Delegate for pre change event for an int attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.RefAttributeDelegate">
            <summary>
            Delegate for pre change event for an int attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.BoolArrayAttributeDelegate">
            <summary>
            Delegate for pre change event for an bool array attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.IntArrayAttributeDelegate">
            <summary>
            Delegate for pre change event for an int array attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.DoubleArrayAttributeDelegate">
            <summary>
            Delegate for pre change event for an real array attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.StringArrayAttributeDelegate">
            <summary>
            Delegate for pre change event for an string array attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DbPreSetAttributeEvents.RefArrayAttributeDelegate">
            <summary>
            Delegate for pre change event for an ref array attribute - For AVEVA use only.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.IDataModelBuildDistributor">
            <summary>
            Interface for distributing a Data Model Build
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.IDataModelBuildDistributor.GetNextOwner(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbElementType,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Gets the next owner of the required type.
            </summary>
            <param name="requiredOwnerType">The required type of the owning element.</param>
            <param name="requiredType">The type of element to be created under the returned owner.</param>
            <param name="error">Error Message.</param>
            <returns>A DB element of the required type (or a null DBRef if an error occurs).</returns>
        </member>
        <member name="P:Aveva.Core.Database.IDataModelBuildDistributor.DBSet">
            <summary>
            The DBSET to distribute the model build over.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.DataModelBuildDistributor">
            <summary>
            Distributes a Data Model build among Dictionary DBs in a given DB set.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.DataModelBuildDistributor.#ctor(Aveva.Core.Database.DbElement)">
            <summary>
            Construct a DataModelBuildDistributor instance by binding to the given DB set.
            </summary>
            <param name="dbSet">The DB set into which to build the model.</param>
        </member>
        <member name="M:Aveva.Core.Database.DataModelBuildDistributor.GetNextOwner(Aveva.Core.Database.DbElementType,Aveva.Core.Database.DbElementType,Aveva.Core.Utilities.Messaging.PdmsMessage@)">
            <summary>
            Gets the next owner of the required type.
            </summary>
            <param name="requiredOwnerType">The required type of the owning element.</param>
            <param name="requiredType">The type of element to be created under the returned owner.</param>
            <param name="error">Error Message.</param>
            <returns>A DB element of the required type (or a null DBRef if an error occurs).</returns>
        </member>
        <member name="M:Aveva.Core.Database.DataModelBuildDistributor.GetWriteableDBSets">
            <summary>
            Gets a list of DB sets containing writeable Dictionary DBs.
            </summary>
            <returns>A dictionary containing a collection of writeable Dictionary DBs for each DB set in the project.</returns>
        </member>
        <member name="P:Aveva.Core.Database.DataModelBuildDistributor.DBSet">
            <summary>
            The DBSET to distribute the model build over.
            </summary>
        </member>
        <member name="T:Aveva.Core.Database.UkeyQueries">
            <summary>
            Collection of queries regarding UKEYs.
            </summary>
        </member>
        <member name="M:Aveva.Core.Database.UkeyQueries.GetFreeKeysInDB(Aveva.Core.Database.Db)">
            <summary>
            Gets the number of free UKEYs available in the given Dictionary DB.
            </summary>
            <param name="dictDb">A Dictionary Database.</param>
            <returns>The Number of Free keys available in the given Dictionary DB.</returns>
        </member>
        <member name="M:Aveva.Core.Database.UkeyQueries.GetFreeKeysInDBSet(Aveva.Core.Database.DbElement)">
            <summary>
            Gets the number of free UKEYs available in the given DB set.
            </summary>
            <param name="dbSet">A DBSET element.</param>
            <returns>The total number of free UKEYs available in the DB set.</returns>
        </member>
        <member name="M:Aveva.Core.Database.UkeyQueries.GetFreeKeyMapFromDBSet(Aveva.Core.Database.DbElement)">
            <summary>
            Gets the number of free UKEYs available in the given DB set.
            </summary>
            <param name="dbSet">A DBSET element.</param>
            <returns>A Dictionary of the number of free UKEYs for each DICT DB in the DB set.</returns>
        </member>
    </members>
</doc>
